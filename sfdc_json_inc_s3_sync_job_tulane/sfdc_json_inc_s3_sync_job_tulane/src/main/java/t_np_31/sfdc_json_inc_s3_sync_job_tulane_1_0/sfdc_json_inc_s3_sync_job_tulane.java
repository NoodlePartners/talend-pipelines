// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package t_np_31.sfdc_json_inc_s3_sync_job_tulane_1_0;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_42
	//import java.util.List;

	//the import part of tJava_2
	import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Properties;
import javax.activation.*;

	//the import part of tJavaRow_2
	import java.util.concurrent.ConcurrentHashMap;

	//the import part of tJava_1
	import java.sql.Connection;
import java.util.Properties;
import java.util.concurrent.ConcurrentHashMap;

	//the import part of tJava_29
	//import java.util.List;

	//the import part of tJava_74
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: sfdc_json_inc_s3_sync_job_tulane Purpose: <br>
 * Description: 0.2 : Updated task description col logic
0.3 : Added 3 new tables
0.4 : Added all History Object
0.5 : Added delete step at the end
0.6 : added new additional contact fields
1.0 : Incremental Job <br>
 * @author user@talend.com
 * @version 7.3.1.20200219_1130
 * @status 
 */
public class sfdc_json_inc_s3_sync_job_tulane implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(university_code != null){
				
					this.setProperty("university_code", university_code.toString());
				
			}
			
			if(status != null){
				
					this.setProperty("status", status.toString());
				
			}
			
			if(description != null){
				
					this.setProperty("description", description.toString());
				
			}
			
			if(staging_S3_dir != null){
				
					this.setProperty("staging_S3_dir", staging_S3_dir.toString());
				
			}
			
			if(sfdc_subject_user != null){
				
					this.setProperty("sfdc_subject_user", sfdc_subject_user.toString());
				
			}
			
			if(sfdc_issuer_token != null){
				
					this.setProperty("sfdc_issuer_token", sfdc_issuer_token.toString());
				
			}
			
			if(sfdc_keystore_password != null){
				
					this.setProperty("sfdc_keystore_password", sfdc_keystore_password.toString());
				
			}
			
			if(nd_aws_access_key != null){
				
					this.setProperty("nd_aws_access_key", nd_aws_access_key.toString());
				
			}
			
			if(nd_aws_secret_key != null){
				
					this.setProperty("nd_aws_secret_key", nd_aws_secret_key.toString());
				
			}
			
			if(nd_s3_bucket_QA_sfdc != null){
				
					this.setProperty("nd_s3_bucket_QA_sfdc", nd_s3_bucket_QA_sfdc.toString());
				
			}
			
			if(nd_s3_data_lake_path_sfdc != null){
				
					this.setProperty("nd_s3_data_lake_path_sfdc", nd_s3_data_lake_path_sfdc.toString());
				
			}
			
			if(sfdc_audience_url != null){
				
					this.setProperty("sfdc_audience_url", sfdc_audience_url.toString());
				
			}
			
			if(sfdc_certificate_alias != null){
				
					this.setProperty("sfdc_certificate_alias", sfdc_certificate_alias.toString());
				
			}
			
			if(sfdc_keystore_path != null){
				
					this.setProperty("sfdc_keystore_path", sfdc_keystore_path.toString());
				
			}
			
			if(filter_date != null){
				
					this.setProperty("filter_date", filter_date.toString());
				
			}
			
			if(sfdc_conn_QueryCondition != null){
				
					this.setProperty("sfdc_conn_QueryCondition", sfdc_conn_QueryCondition.toString());
				
			}
			
		}

public String university_code;
public String getUniversity_code(){
	return this.university_code;
}
public String status;
public String getStatus(){
	return this.status;
}
public String description;
public String getDescription(){
	return this.description;
}
public String staging_S3_dir;
public String getStaging_S3_dir(){
	return this.staging_S3_dir;
}
public String sfdc_subject_user;
public String getSfdc_subject_user(){
	return this.sfdc_subject_user;
}
public String sfdc_issuer_token;
public String getSfdc_issuer_token(){
	return this.sfdc_issuer_token;
}
public java.lang.String sfdc_keystore_password;
public java.lang.String getSfdc_keystore_password(){
	return this.sfdc_keystore_password;
}
public String nd_aws_access_key;
public String getNd_aws_access_key(){
	return this.nd_aws_access_key;
}
public java.lang.String nd_aws_secret_key;
public java.lang.String getNd_aws_secret_key(){
	return this.nd_aws_secret_key;
}
public String nd_s3_bucket_QA_sfdc;
public String getNd_s3_bucket_QA_sfdc(){
	return this.nd_s3_bucket_QA_sfdc;
}
public String nd_s3_data_lake_path_sfdc;
public String getNd_s3_data_lake_path_sfdc(){
	return this.nd_s3_data_lake_path_sfdc;
}
public String sfdc_audience_url;
public String getSfdc_audience_url(){
	return this.sfdc_audience_url;
}
public String sfdc_certificate_alias;
public String getSfdc_certificate_alias(){
	return this.sfdc_certificate_alias;
}
public String sfdc_keystore_path;
public String getSfdc_keystore_path(){
	return this.sfdc_keystore_path;
}
public String filter_date;
public String getFilter_date(){
	return this.filter_date;
}
public String sfdc_conn_QueryCondition;
public String getSfdc_conn_QueryCondition(){
	return this.sfdc_conn_QueryCondition;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "1.0";
	private final String jobName = "sfdc_json_inc_s3_sync_job_tulane";
	private final String projectName = "T_NP_31";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				sfdc_json_inc_s3_sync_job_tulane.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(sfdc_json_inc_s3_sync_job_tulane.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tS3Connection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tS3Connection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_42_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tChronometerStop_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tChronometerStop_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tChronometerStart_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tChronometerStart_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileArchive_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileArchive_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tS3Put_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tS3Put_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_74_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_74_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tWriteJSONField_10_Out_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tWriteJSONField_10_In_error(exception, errorComponent, globalMap);
						
						}
					
			public void tWriteJSONField_10_In_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tS3Connection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_42_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSalesforceConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tChronometerStop_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tChronometerStart_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSalesforceInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileArchive_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tS3Put_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_29_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_74_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tWriteJSONField_10_In_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	





public void tS3Connection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tS3Connection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tS3Connection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tS3Connection_1", false);
		start_Hash.put("tS3Connection_1", System.currentTimeMillis());
		
	
	currentComponent="tS3Connection_1";

	
		int tos_count_tS3Connection_1 = 0;
		
	
	
	    
    
    		
	final String decryptedPassword_tS3Connection_1 = context.nd_aws_secret_key; 

			com.amazonaws.auth.AWSCredentials credentials_tS3Connection_1 = new com.amazonaws.auth.BasicAWSCredentials(context.nd_aws_access_key,decryptedPassword_tS3Connection_1);
			com.amazonaws.auth.AWSCredentialsProvider credentialsProvider_tS3Connection_1 = new com.amazonaws.internal.StaticCredentialsProvider(credentials_tS3Connection_1);
		
		com.amazonaws.ClientConfiguration cc_tS3Connection_1 = new com.amazonaws.ClientConfiguration();
		cc_tS3Connection_1.setUserAgent("APN/1.0 Talend/7.3 Studio/7.3 (Talend Open Studio)");
		
				com.amazonaws.services.s3.AmazonS3 conn_tS3Connection_1 = com.amazonaws.services.s3.AmazonS3ClientBuilder.standard()
					
		            
		            	
				        .withRegion("us-east-1") // The first region to try your request against
                        .withForceGlobalBucketAccessEnabled(true) // If a bucket is in a different region, try again in the correct region
		            
		            

                    .withCredentials(credentialsProvider_tS3Connection_1)
                    .withClientConfiguration(cc_tS3Connection_1)
                    .build();
			
	
		try{
			conn_tS3Connection_1.getBucketLoggingConfiguration("Check-Connection-Only");
	}catch(com.amazonaws.AmazonServiceException ase_tS3Connection_1){
			if(ase_tS3Connection_1.getErrorCode().equals("NoSuchBucket")){
			//ignore
			}else{
					throw ase_tS3Connection_1;
			}
	}
	
	
	
	globalMap.put("conn_" + "tS3Connection_1",conn_tS3Connection_1);
	

 



/**
 * [tS3Connection_1 begin ] stop
 */
	
	/**
	 * [tS3Connection_1 main ] start
	 */

	

	
	
	currentComponent="tS3Connection_1";

	

 


	tos_count_tS3Connection_1++;

/**
 * [tS3Connection_1 main ] stop
 */
	
	/**
	 * [tS3Connection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tS3Connection_1";

	

 



/**
 * [tS3Connection_1 process_data_begin ] stop
 */
	
	/**
	 * [tS3Connection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tS3Connection_1";

	

 



/**
 * [tS3Connection_1 process_data_end ] stop
 */
	
	/**
	 * [tS3Connection_1 end ] start
	 */

	

	
	
	currentComponent="tS3Connection_1";

	

 

ok_Hash.put("tS3Connection_1", true);
end_Hash.put("tS3Connection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk19", 0, "ok");
				}
				tJava_42Process(globalMap);



/**
 * [tS3Connection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tS3Connection_1 finally ] start
	 */

	

	
	
	currentComponent="tS3Connection_1";

	

 



/**
 * [tS3Connection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tS3Connection_1_SUBPROCESS_STATE", 1);
	}
	

public void tJava_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_42", false);
		start_Hash.put("tJava_42", System.currentTimeMillis());
		
	
	currentComponent="tJava_42";

	
		int tos_count_tJava_42 = 0;
		


context.sfdc_keystore_password = System.getenv("TALEND_SFDC_JKS_PASSWORD");
//System.out.println(context.sfdc_keystore_password );
 



/**
 * [tJava_42 begin ] stop
 */
	
	/**
	 * [tJava_42 main ] start
	 */

	

	
	
	currentComponent="tJava_42";

	

 


	tos_count_tJava_42++;

/**
 * [tJava_42 main ] stop
 */
	
	/**
	 * [tJava_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_42";

	

 



/**
 * [tJava_42 process_data_begin ] stop
 */
	
	/**
	 * [tJava_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_42";

	

 



/**
 * [tJava_42 process_data_end ] stop
 */
	
	/**
	 * [tJava_42 end ] start
	 */

	

	
	
	currentComponent="tJava_42";

	

 

ok_Hash.put("tJava_42", true);
end_Hash.put("tJava_42", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk121", 0, "ok");
				}
				tSalesforceConnection_2Process(globalMap);



/**
 * [tJava_42 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_42 finally ] start
	 */

	

	
	
	currentComponent="tJava_42";

	

 



/**
 * [tJava_42 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_42_SUBPROCESS_STATE", 1);
	}
	

public void tSalesforceConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSalesforceConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tSalesforceConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceConnection_2", false);
		start_Hash.put("tSalesforceConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceConnection_2";

	
		int tos_count_tSalesforceConnection_2 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceConnection_2 =
        new org.talend.components.salesforce.tsalesforceconnection.TSalesforceConnectionDefinition();

org.talend.components.salesforce.SalesforceConnectionProperties props_tSalesforceConnection_2 =
        (org.talend.components.salesforce.SalesforceConnectionProperties) def_tSalesforceConnection_2.createRuntimeProperties();
 		                    props_tSalesforceConnection_2.setValue("endpoint",
 		                    "https://login.salesforce.com/services/oauth2");
 		                    
 		                    props_tSalesforceConnection_2.setValue("loginType",
 		                        org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.OAuth);
 		                    
 		                    props_tSalesforceConnection_2.setValue("bulkConnection",
 		                    true);
 		                    
 		                    props_tSalesforceConnection_2.setValue("needCompression",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_2.setValue("timeout",
 		                    60000);
 		                    
 		                    props_tSalesforceConnection_2.setValue("httpTraceMessage",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_2.setValue("clientId",
 		                    "");
 		                    
 		                    props_tSalesforceConnection_2.setValue("oauth2FlowType",
 		                        org.talend.components.common.oauth.OAuth2FlowType.JWT_Flow);
 		                    
 		                    props_tSalesforceConnection_2.setValue("apiVersion",
 		                    "47.0");
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("issuer",
 		                    context.sfdc_issuer_token);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("subject",
 		                    context.sfdc_subject_user);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("expirationTime",
 		                    600);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("keyStore",
 		                    context.sfdc_keystore_path);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("keyStorePassword",
 		                    context.sfdc_keystore_password);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("certificateAlias",
 		                    context.sfdc_certificate_alias);
 		                    
 		                    props_tSalesforceConnection_2.oauth2JwtFlow.setValue("audience",
 		                    context.sfdc_audience_url);
 		                    
 		                    props_tSalesforceConnection_2.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_2.proxy.setValue("useProxy",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_2.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_2.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceConnection_2.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceConnection_2 = props_tSalesforceConnection_2.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceConnection_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceConnection_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceConnection_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceConnection_2.referencedComponent.setReference(referencedComponentProperties_tSalesforceConnection_2);
        }
    }
globalMap.put("tSalesforceConnection_2_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceConnection_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.2");
java.net.URL mappings_url_tSalesforceConnection_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceConnection_2_MAPPINGS_URL", mappings_url_tSalesforceConnection_2);

org.talend.components.api.container.RuntimeContainer container_tSalesforceConnection_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceConnection_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceConnection_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceConnection_2 = null;
topology_tSalesforceConnection_2 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceConnection_2 = def_tSalesforceConnection_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceConnection_2, topology_tSalesforceConnection_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceConnection_2 = def_tSalesforceConnection_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceConnection_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceConnection_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceConnection_2 = componentRuntime_tSalesforceConnection_2.initialize(container_tSalesforceConnection_2, props_tSalesforceConnection_2);

if (initVr_tSalesforceConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceConnection_2.getMessage());
}

if(componentRuntime_tSalesforceConnection_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceConnection_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceConnection_2;
	compDriverInitialization_tSalesforceConnection_2.runAtDriver(container_tSalesforceConnection_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceConnection_2 = null;
if(componentRuntime_tSalesforceConnection_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceConnection_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceConnection_2;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceConnection_2 = sourceOrSink_tSalesforceConnection_2.validate(container_tSalesforceConnection_2);
	if (vr_tSalesforceConnection_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceConnection_2.getMessage());
	}
}

 



/**
 * [tSalesforceConnection_2 begin ] stop
 */
	
	/**
	 * [tSalesforceConnection_2 main ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_2";

	


 


	tos_count_tSalesforceConnection_2++;

/**
 * [tSalesforceConnection_2 main ] stop
 */
	
	/**
	 * [tSalesforceConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_2";

	


 



/**
 * [tSalesforceConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tSalesforceConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_2";

	


 



/**
 * [tSalesforceConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tSalesforceConnection_2 end ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_2";

	
// end of generic

 

ok_Hash.put("tSalesforceConnection_2", true);
end_Hash.put("tSalesforceConnection_2", System.currentTimeMillis());




/**
 * [tSalesforceConnection_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSalesforceConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_2";

	
// finally of generic

 



/**
 * [tSalesforceConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSalesforceConnection_2_SUBPROCESS_STATE", 1);
	}
	

public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";

	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tChronometerStop_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";

	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	

public void tChronometerStop_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tChronometerStop_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tChronometerStop_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tChronometerStop_1", false);
		start_Hash.put("tChronometerStop_1", System.currentTimeMillis());
		
	
	currentComponent="tChronometerStop_1";

	
		int tos_count_tChronometerStop_1 = 0;
		
	
	long timetChronometerStop_1;
	
	  	timetChronometerStop_1 = System.currentTimeMillis() - ((Long)globalMap.get("tChronometerStart_1")).longValue();
		
	Long currentTimetChronometerStop_1 = System.currentTimeMillis();
	globalMap.put("tChronometerStop_1", currentTimetChronometerStop_1);
	
	globalMap.put("tChronometerStop_1_STOPTIME", currentTimetChronometerStop_1);
	globalMap.put("tChronometerStop_1_DURATION", timetChronometerStop_1);
 



/**
 * [tChronometerStop_1 begin ] stop
 */
	
	/**
	 * [tChronometerStop_1 main ] start
	 */

	

	
	
	currentComponent="tChronometerStop_1";

	

 


	tos_count_tChronometerStop_1++;

/**
 * [tChronometerStop_1 main ] stop
 */
	
	/**
	 * [tChronometerStop_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tChronometerStop_1";

	

 



/**
 * [tChronometerStop_1 process_data_begin ] stop
 */
	
	/**
	 * [tChronometerStop_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tChronometerStop_1";

	

 



/**
 * [tChronometerStop_1 process_data_end ] stop
 */
	
	/**
	 * [tChronometerStop_1 end ] start
	 */

	

	
	
	currentComponent="tChronometerStop_1";

	

 

ok_Hash.put("tChronometerStop_1", true);
end_Hash.put("tChronometerStop_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tChronometerStop_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tChronometerStop_1 finally ] start
	 */

	

	
	
	currentComponent="tChronometerStop_1";

	

 



/**
 * [tChronometerStop_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tChronometerStop_1_SUBPROCESS_STATE", 1);
	}
	

public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";

	
		int tos_count_tJava_2 = 0;
		


Date start_datetime = new Date(((Long)globalMap.get("tChronometerStop_1_STOPTIME")) - ((Long)globalMap.get("tChronometerStop_1_DURATION")));
String start_time = TalendDate.formatDate("EEE, MMM dd HH:mm:ss.SSS z yyyy",start_datetime);
Date end_datetime= new Date((Long)globalMap.get("tChronometerStop_1_STOPTIME"));
String end_time = TalendDate.formatDate("EEE, MMM dd HH:mm:ss.SSS z yyyy",end_datetime);
String Duration = TalendDate.formatDate("HH:mm:ss.SSS", TalendDate.parseDate("ss SSS", String.valueOf(((Long)globalMap.get("tChronometerStop_1_DURATION"))/1000)+" "+
String.valueOf(((Long)globalMap.get("tChronometerStop_1_DURATION"))%1000)));

System.out.println("Start Time: "+start_time);
System.out.println("End Time: "+end_time);
System.out.println("Run Duration: "+Duration);
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";

	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";

	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";

	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";

	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";

	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];
    static byte[] commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length) {
				if(length < 1024 && commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length == 0) {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[1024];
				} else {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length);
			strReturn = new String(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";

	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row17.type = lcm.getType();
		row17.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row17.priority = lcm.getPriority();
		row17.message = lcm.getMessage();
		row17.code = lcm.getCode();
		
		row17.moment = java.util.Calendar.getInstance().getTime();
	
    	row17.pid = pid;
		row17.root_pid = rootPid;
		row17.father_pid = fatherPid;
	
    	row17.project = projectName;
    	row17.job = jobName;
    	row17.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row17");
					}
					

    String msg=null;
String ChildJobStatus = (String) ((java.util.Map) globalMap.get("sharedMap")).get("Failure?");
String ParentJobStatus = (String) globalMap.get("parent_status");

if (ChildJobStatus.equals("True")) {
	msg = (String)((java.util.Map) globalMap.get("sharedMap")).get("ExceptionMsg"); 
	}
else if (ParentJobStatus.equals("running")) {
	msg = "Origin: " + row17.origin + ", Error: " + row17.message;
	}

System.out.println("The following job has failed: " + projectName + "." + jobName + ".\nPlease check the application log for more detailed information on the cause.\nException caught: \"" + msg + "\"");
globalMap.put("error_msg", msg);
globalMap.put("error_code", row17.code);
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	
	}
} catch (Exception e_tLogCatcher_1) {
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";

	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tChronometerStart_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";

	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	

public void tChronometerStart_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tChronometerStart_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tChronometerStart_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tChronometerStart_1", false);
		start_Hash.put("tChronometerStart_1", System.currentTimeMillis());
		
	
	currentComponent="tChronometerStart_1";

	
		int tos_count_tChronometerStart_1 = 0;
		

	
	
	Long currentTimetChronometerStart_1 = System.currentTimeMillis();
	
	globalMap.put("tChronometerStart_1",currentTimetChronometerStart_1);
	globalMap.put("tChronometerStart_1_STARTTIME", currentTimetChronometerStart_1);
 



/**
 * [tChronometerStart_1 begin ] stop
 */
	
	/**
	 * [tChronometerStart_1 main ] start
	 */

	

	
	
	currentComponent="tChronometerStart_1";

	

 


	tos_count_tChronometerStart_1++;

/**
 * [tChronometerStart_1 main ] stop
 */
	
	/**
	 * [tChronometerStart_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tChronometerStart_1";

	

 



/**
 * [tChronometerStart_1 process_data_begin ] stop
 */
	
	/**
	 * [tChronometerStart_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tChronometerStart_1";

	

 



/**
 * [tChronometerStart_1 process_data_end ] stop
 */
	
	/**
	 * [tChronometerStart_1 end ] start
	 */

	

	
	
	currentComponent="tChronometerStart_1";

	

 

ok_Hash.put("tChronometerStart_1", true);
end_Hash.put("tChronometerStart_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tChronometerStart_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tChronometerStart_1 finally ] start
	 */

	

	
	
	currentComponent="tChronometerStart_1";

	

 



/**
 * [tChronometerStart_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tChronometerStart_1_SUBPROCESS_STATE", 1);
	}
	

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";

	
		int tos_count_tJava_1 = 0;
		


Date start_datetime = new Date((Long)globalMap.get("tChronometerStart_1_STARTTIME"));
String start_time = TalendDate.formatDate("EEE, MMM dd HH:mm:ss.SSS z yyyy",start_datetime);
System.out.println("\n*** " + jobName + " ***");
System.out.println("Start Time: "+start_time);
System.out.println("Environment: " + contextStr);
//context.email_subject_stem = "SalesForce LCV Object Refresh";

globalMap.put("datetime", TalendDate.formatDate("yyyyMMddHHmm", new Date()));
globalMap.put("compare_result", "true");

ConcurrentHashMap<String, String> CHM = new ConcurrentHashMap<String, String>();
CHM.put("Failure?", "False");
globalMap.put("sharedMap", CHM);
globalMap.put("parent_status", "running");





 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tS3Connection_1Process(globalMap);



/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class out10Struct implements routines.system.IPersistableRow<out10Struct> {
    final static byte[] commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];
    static byte[] commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String WhoId;

				public String getWhoId () {
					return this.WhoId;
				}
				
			    public String WhatId;

				public String getWhatId () {
					return this.WhatId;
				}
				
			    public Integer WhoCount;

				public Integer getWhoCount () {
					return this.WhoCount;
				}
				
			    public Integer WhatCount;

				public Integer getWhatCount () {
					return this.WhatCount;
				}
				
			    public String Subject;

				public String getSubject () {
					return this.Subject;
				}
				
			    public Long ActivityDate;

				public Long getActivityDate () {
					return this.ActivityDate;
				}
				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}
				
			    public String Priority;

				public String getPriority () {
					return this.Priority;
				}
				
			    public boolean IsHighPriority;

				public boolean getIsHighPriority () {
					return this.IsHighPriority;
				}
				
			    public String OwnerId;

				public String getOwnerId () {
					return this.OwnerId;
				}
				
			    public String Description;

				public String getDescription () {
					return this.Description;
				}
				
			    public boolean IsDeleted;

				public boolean getIsDeleted () {
					return this.IsDeleted;
				}
				
			    public String AccountId;

				public String getAccountId () {
					return this.AccountId;
				}
				
			    public boolean IsClosed;

				public boolean getIsClosed () {
					return this.IsClosed;
				}
				
			    public long CreatedDate;

				public long getCreatedDate () {
					return this.CreatedDate;
				}
				
			    public String CreatedById;

				public String getCreatedById () {
					return this.CreatedById;
				}
				
			    public long LastModifiedDate;

				public long getLastModifiedDate () {
					return this.LastModifiedDate;
				}
				
			    public String LastModifiedById;

				public String getLastModifiedById () {
					return this.LastModifiedById;
				}
				
			    public long SystemModstamp;

				public long getSystemModstamp () {
					return this.SystemModstamp;
				}
				
			    public boolean IsArchived;

				public boolean getIsArchived () {
					return this.IsArchived;
				}
				
			    public Integer CallDurationInSeconds;

				public Integer getCallDurationInSeconds () {
					return this.CallDurationInSeconds;
				}
				
			    public String CallType;

				public String getCallType () {
					return this.CallType;
				}
				
			    public String CallDisposition;

				public String getCallDisposition () {
					return this.CallDisposition;
				}
				
			    public String CallObject;

				public String getCallObject () {
					return this.CallObject;
				}
				
			    public Long ReminderDateTime;

				public Long getReminderDateTime () {
					return this.ReminderDateTime;
				}
				
			    public boolean IsReminderSet;

				public boolean getIsReminderSet () {
					return this.IsReminderSet;
				}
				
			    public String RecurrenceActivityId;

				public String getRecurrenceActivityId () {
					return this.RecurrenceActivityId;
				}
				
			    public boolean IsRecurrence;

				public boolean getIsRecurrence () {
					return this.IsRecurrence;
				}
				
			    public Long RecurrenceStartDateOnly;

				public Long getRecurrenceStartDateOnly () {
					return this.RecurrenceStartDateOnly;
				}
				
			    public Long RecurrenceEndDateOnly;

				public Long getRecurrenceEndDateOnly () {
					return this.RecurrenceEndDateOnly;
				}
				
			    public String RecurrenceTimeZoneSidKey;

				public String getRecurrenceTimeZoneSidKey () {
					return this.RecurrenceTimeZoneSidKey;
				}
				
			    public String RecurrenceType;

				public String getRecurrenceType () {
					return this.RecurrenceType;
				}
				
			    public Integer RecurrenceInterval;

				public Integer getRecurrenceInterval () {
					return this.RecurrenceInterval;
				}
				
			    public Integer RecurrenceDayOfWeekMask;

				public Integer getRecurrenceDayOfWeekMask () {
					return this.RecurrenceDayOfWeekMask;
				}
				
			    public Integer RecurrenceDayOfMonth;

				public Integer getRecurrenceDayOfMonth () {
					return this.RecurrenceDayOfMonth;
				}
				
			    public String RecurrenceInstance;

				public String getRecurrenceInstance () {
					return this.RecurrenceInstance;
				}
				
			    public String RecurrenceMonthOfYear;

				public String getRecurrenceMonthOfYear () {
					return this.RecurrenceMonthOfYear;
				}
				
			    public String RecurrenceRegeneratedType;

				public String getRecurrenceRegeneratedType () {
					return this.RecurrenceRegeneratedType;
				}
				
			    public String TaskSubtype;

				public String getTaskSubtype () {
					return this.TaskSubtype;
				}
				
			    public Long CompletedDateTime;

				public Long getCompletedDateTime () {
					return this.CompletedDateTime;
				}
				
			    public String NoodleCRM__Contact_Type__c;

				public String getNoodleCRM__Contact_Type__c () {
					return this.NoodleCRM__Contact_Type__c;
				}
				
			    public String rcsfl__CALL_UNIQUE_ID__c;

				public String getRcsfl__CALL_UNIQUE_ID__c () {
					return this.rcsfl__CALL_UNIQUE_ID__c;
				}
				
			    public String rcsfl__CALL_UUID__c;

				public String getRcsfl__CALL_UUID__c () {
					return this.rcsfl__CALL_UUID__c;
				}
				
			    public String rcsfl__Call_Recording__c;

				public String getRcsfl__Call_Recording__c () {
					return this.rcsfl__Call_Recording__c;
				}
				
			    public String rcsfl__RC_Logging_Type__c;

				public String getRcsfl__RC_Logging_Type__c () {
					return this.rcsfl__RC_Logging_Type__c;
				}
				
			    public String rcsfl__Recording_Information__c;

				public String getRcsfl__Recording_Information__c () {
					return this.rcsfl__Recording_Information__c;
				}
				
			    public String rcsfl__external_whoid__c;

				public String getRcsfl__external_whoid__c () {
					return this.rcsfl__external_whoid__c;
				}
				
			    public String rcsfl__key__c;

				public String getRcsfl__key__c () {
					return this.rcsfl__key__c;
				}
				
			    public java.util.Date CreatedDate__c;

				public java.util.Date getCreatedDate__c () {
					return this.CreatedDate__c;
				}
				
			    public String Dialpad__CallId__c;

				public String getDialpad__CallId__c () {
					return this.Dialpad__CallId__c;
				}
				
			    public String Dialpad__PhoneNumber__c;

				public String getDialpad__PhoneNumber__c () {
					return this.Dialpad__PhoneNumber__c;
				}
				
			    public String Dialpad__TimeInitiated__c;

				public String getDialpad__TimeInitiated__c () {
					return this.Dialpad__TimeInitiated__c;
				}
				
			    public java.util.Date Dialpad__Timestamp__c;

				public java.util.Date getDialpad__Timestamp__c () {
					return this.Dialpad__Timestamp__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Curriculum__c;

				public boolean getNoodleCRM__Cat_Academic_Curriculum__c () {
					return this.NoodleCRM__Cat_Academic_Curriculum__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Integrity_Conduct__c;

				public boolean getNoodleCRM__Cat_Academic_Integrity_Conduct__c () {
					return this.NoodleCRM__Cat_Academic_Integrity_Conduct__c;
				}
				
			    public boolean NoodleCRM__Cat_At_Risk_Students__c;

				public boolean getNoodleCRM__Cat_At_Risk_Students__c () {
					return this.NoodleCRM__Cat_At_Risk_Students__c;
				}
				
			    public boolean NoodleCRM__Cat_Automated_success_alert__c;

				public boolean getNoodleCRM__Cat_Automated_success_alert__c () {
					return this.NoodleCRM__Cat_Automated_success_alert__c;
				}
				
			    public boolean NoodleCRM__Cat_Behavioral_issues_conduct__c;

				public boolean getNoodleCRM__Cat_Behavioral_issues_conduct__c () {
					return this.NoodleCRM__Cat_Behavioral_issues_conduct__c;
				}
				
			    public boolean NoodleCRM__Cat_Career_support__c;

				public boolean getNoodleCRM__Cat_Career_support__c () {
					return this.NoodleCRM__Cat_Career_support__c;
				}
				
			    public boolean NoodleCRM__Cat_Concern_Issue__c;

				public boolean getNoodleCRM__Cat_Concern_Issue__c () {
					return this.NoodleCRM__Cat_Concern_Issue__c;
				}
				
			    public boolean NoodleCRM__Cat_Course_Related__c;

				public boolean getNoodleCRM__Cat_Course_Related__c () {
					return this.NoodleCRM__Cat_Course_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Disability_support__c;

				public boolean getNoodleCRM__Cat_Disability_support__c () {
					return this.NoodleCRM__Cat_Disability_support__c;
				}
				
			    public boolean NoodleCRM__Cat_Encouragement__c;

				public boolean getNoodleCRM__Cat_Encouragement__c () {
					return this.NoodleCRM__Cat_Encouragement__c;
				}
				
			    public boolean NoodleCRM__Cat_Faculty_Related__c;

				public boolean getNoodleCRM__Cat_Faculty_Related__c () {
					return this.NoodleCRM__Cat_Faculty_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Fieldwork_Practicum_placement__c;

				public boolean getNoodleCRM__Cat_Fieldwork_Practicum_placement__c () {
					return this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c;
				}
				
			    public boolean NoodleCRM__Cat_Financial__c;

				public boolean getNoodleCRM__Cat_Financial__c () {
					return this.NoodleCRM__Cat_Financial__c;
				}
				
			    public boolean NoodleCRM__Cat_Hold_on_Account__c;

				public boolean getNoodleCRM__Cat_Hold_on_Account__c () {
					return this.NoodleCRM__Cat_Hold_on_Account__c;
				}
				
			    public boolean NoodleCRM__Cat_Orientation__c;

				public boolean getNoodleCRM__Cat_Orientation__c () {
					return this.NoodleCRM__Cat_Orientation__c;
				}
				
			    public boolean NoodleCRM__Cat_Proactive_Outreach__c;

				public boolean getNoodleCRM__Cat_Proactive_Outreach__c () {
					return this.NoodleCRM__Cat_Proactive_Outreach__c;
				}
				
			    public boolean NoodleCRM__Cat_Registration__c;

				public boolean getNoodleCRM__Cat_Registration__c () {
					return this.NoodleCRM__Cat_Registration__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Wellness__c;

				public boolean getNoodleCRM__Cat_Student_Wellness__c () {
					return this.NoodleCRM__Cat_Student_Wellness__c;
				}
				
			    public boolean NoodleCRM__Cat_Technology_Related__c;

				public boolean getNoodleCRM__Cat_Technology_Related__c () {
					return this.NoodleCRM__Cat_Technology_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Time_management__c;

				public boolean getNoodleCRM__Cat_Time_management__c () {
					return this.NoodleCRM__Cat_Time_management__c;
				}
				
			    public boolean NoodleCRM__Cat_Tutoring__c;

				public boolean getNoodleCRM__Cat_Tutoring__c () {
					return this.NoodleCRM__Cat_Tutoring__c;
				}
				
			    public boolean NoodleCRM__Cat_Urgent__c;

				public boolean getNoodleCRM__Cat_Urgent__c () {
					return this.NoodleCRM__Cat_Urgent__c;
				}
				
			    public boolean NoodleCRM__Cat_Withdrawal_LOA_Deferral__c;

				public boolean getNoodleCRM__Cat_Withdrawal_LOA_Deferral__c () {
					return this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c;
				}
				
			    public String NoodleCRM__Category__c;

				public String getNoodleCRM__Category__c () {
					return this.NoodleCRM__Category__c;
				}
				
			    public Long NoodleCRM__Completed_Date_Time__c;

				public Long getNoodleCRM__Completed_Date_Time__c () {
					return this.NoodleCRM__Completed_Date_Time__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Advising__c;

				public boolean getNoodleCRM__Cat_Academic_Advising__c () {
					return this.NoodleCRM__Cat_Academic_Advising__c;
				}
				
			    public boolean NoodleCRM__Cat_Deposit__c;

				public boolean getNoodleCRM__Cat_Deposit__c () {
					return this.NoodleCRM__Cat_Deposit__c;
				}
				
			    public boolean NoodleCRM__Cat_Immersion__c;

				public boolean getNoodleCRM__Cat_Immersion__c () {
					return this.NoodleCRM__Cat_Immersion__c;
				}
				
			    public boolean NoodleCRM__Cat_Library_related__c;

				public boolean getNoodleCRM__Cat_Library_related__c () {
					return this.NoodleCRM__Cat_Library_related__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Complaint_Issue__c;

				public boolean getNoodleCRM__Cat_Student_Complaint_Issue__c () {
					return this.NoodleCRM__Cat_Student_Complaint_Issue__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Data_related__c;

				public boolean getNoodleCRM__Cat_Student_Data_related__c () {
					return this.NoodleCRM__Cat_Student_Data_related__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Id_Card__c;

				public boolean getNoodleCRM__Cat_Student_Id_Card__c () {
					return this.NoodleCRM__Cat_Student_Id_Card__c;
				}
				
			    public boolean NoodleCRM__Cat_Transcript__c;

				public boolean getNoodleCRM__Cat_Transcript__c () {
					return this.NoodleCRM__Cat_Transcript__c;
				}
				
			    public String Upload_Id__c;

				public String getUpload_Id__c () {
					return this.Upload_Id__c;
				}
				
			    public String NoodleCRM__Result__c;

				public String getNoodleCRM__Result__c () {
					return this.NoodleCRM__Result__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length) {
				if(length < 1024 && commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length == 0) {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[1024];
				} else {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length);
			strReturn = new String(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.WhoId = readString(dis);
					
					this.WhatId = readString(dis);
					
						this.WhoCount = readInteger(dis);
					
						this.WhatCount = readInteger(dis);
					
					this.Subject = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ActivityDate = null;
           				} else {
           			    	this.ActivityDate = dis.readLong();
           				}
					
					this.Status = readString(dis);
					
					this.Priority = readString(dis);
					
			        this.IsHighPriority = dis.readBoolean();
					
					this.OwnerId = readString(dis);
					
					this.Description = readString(dis);
					
			        this.IsDeleted = dis.readBoolean();
					
					this.AccountId = readString(dis);
					
			        this.IsClosed = dis.readBoolean();
					
			        this.CreatedDate = dis.readLong();
					
					this.CreatedById = readString(dis);
					
			        this.LastModifiedDate = dis.readLong();
					
					this.LastModifiedById = readString(dis);
					
			        this.SystemModstamp = dis.readLong();
					
			        this.IsArchived = dis.readBoolean();
					
						this.CallDurationInSeconds = readInteger(dis);
					
					this.CallType = readString(dis);
					
					this.CallDisposition = readString(dis);
					
					this.CallObject = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ReminderDateTime = null;
           				} else {
           			    	this.ReminderDateTime = dis.readLong();
           				}
					
			        this.IsReminderSet = dis.readBoolean();
					
					this.RecurrenceActivityId = readString(dis);
					
			        this.IsRecurrence = dis.readBoolean();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.RecurrenceStartDateOnly = null;
           				} else {
           			    	this.RecurrenceStartDateOnly = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.RecurrenceEndDateOnly = null;
           				} else {
           			    	this.RecurrenceEndDateOnly = dis.readLong();
           				}
					
					this.RecurrenceTimeZoneSidKey = readString(dis);
					
					this.RecurrenceType = readString(dis);
					
						this.RecurrenceInterval = readInteger(dis);
					
						this.RecurrenceDayOfWeekMask = readInteger(dis);
					
						this.RecurrenceDayOfMonth = readInteger(dis);
					
					this.RecurrenceInstance = readString(dis);
					
					this.RecurrenceMonthOfYear = readString(dis);
					
					this.RecurrenceRegeneratedType = readString(dis);
					
					this.TaskSubtype = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CompletedDateTime = null;
           				} else {
           			    	this.CompletedDateTime = dis.readLong();
           				}
					
					this.NoodleCRM__Contact_Type__c = readString(dis);
					
					this.rcsfl__CALL_UNIQUE_ID__c = readString(dis);
					
					this.rcsfl__CALL_UUID__c = readString(dis);
					
					this.rcsfl__Call_Recording__c = readString(dis);
					
					this.rcsfl__RC_Logging_Type__c = readString(dis);
					
					this.rcsfl__Recording_Information__c = readString(dis);
					
					this.rcsfl__external_whoid__c = readString(dis);
					
					this.rcsfl__key__c = readString(dis);
					
					this.CreatedDate__c = readDate(dis);
					
					this.Dialpad__CallId__c = readString(dis);
					
					this.Dialpad__PhoneNumber__c = readString(dis);
					
					this.Dialpad__TimeInitiated__c = readString(dis);
					
					this.Dialpad__Timestamp__c = readDate(dis);
					
			        this.NoodleCRM__Cat_Academic_Curriculum__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Academic_Integrity_Conduct__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_At_Risk_Students__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Automated_success_alert__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Behavioral_issues_conduct__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Career_support__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Concern_Issue__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Course_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Disability_support__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Encouragement__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Faculty_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Financial__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Hold_on_Account__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Orientation__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Proactive_Outreach__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Registration__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Wellness__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Technology_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Time_management__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Tutoring__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Urgent__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c = dis.readBoolean();
					
					this.NoodleCRM__Category__c = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NoodleCRM__Completed_Date_Time__c = null;
           				} else {
           			    	this.NoodleCRM__Completed_Date_Time__c = dis.readLong();
           				}
					
			        this.NoodleCRM__Cat_Academic_Advising__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Deposit__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Immersion__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Library_related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Complaint_Issue__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Data_related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Id_Card__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Transcript__c = dis.readBoolean();
					
					this.Upload_Id__c = readString(dis);
					
					this.NoodleCRM__Result__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.WhoId,dos);
					
					// String
				
						writeString(this.WhatId,dos);
					
					// Integer
				
						writeInteger(this.WhoCount,dos);
					
					// Integer
				
						writeInteger(this.WhatCount,dos);
					
					// String
				
						writeString(this.Subject,dos);
					
					// Long
				
						if(this.ActivityDate == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ActivityDate);
		            	}
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Priority,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsHighPriority);
					
					// String
				
						writeString(this.OwnerId,dos);
					
					// String
				
						writeString(this.Description,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsDeleted);
					
					// String
				
						writeString(this.AccountId,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsClosed);
					
					// long
				
		            	dos.writeLong(this.CreatedDate);
					
					// String
				
						writeString(this.CreatedById,dos);
					
					// long
				
		            	dos.writeLong(this.LastModifiedDate);
					
					// String
				
						writeString(this.LastModifiedById,dos);
					
					// long
				
		            	dos.writeLong(this.SystemModstamp);
					
					// boolean
				
		            	dos.writeBoolean(this.IsArchived);
					
					// Integer
				
						writeInteger(this.CallDurationInSeconds,dos);
					
					// String
				
						writeString(this.CallType,dos);
					
					// String
				
						writeString(this.CallDisposition,dos);
					
					// String
				
						writeString(this.CallObject,dos);
					
					// Long
				
						if(this.ReminderDateTime == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ReminderDateTime);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.IsReminderSet);
					
					// String
				
						writeString(this.RecurrenceActivityId,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsRecurrence);
					
					// Long
				
						if(this.RecurrenceStartDateOnly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.RecurrenceStartDateOnly);
		            	}
					
					// Long
				
						if(this.RecurrenceEndDateOnly == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.RecurrenceEndDateOnly);
		            	}
					
					// String
				
						writeString(this.RecurrenceTimeZoneSidKey,dos);
					
					// String
				
						writeString(this.RecurrenceType,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceInterval,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceDayOfWeekMask,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceDayOfMonth,dos);
					
					// String
				
						writeString(this.RecurrenceInstance,dos);
					
					// String
				
						writeString(this.RecurrenceMonthOfYear,dos);
					
					// String
				
						writeString(this.RecurrenceRegeneratedType,dos);
					
					// String
				
						writeString(this.TaskSubtype,dos);
					
					// Long
				
						if(this.CompletedDateTime == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CompletedDateTime);
		            	}
					
					// String
				
						writeString(this.NoodleCRM__Contact_Type__c,dos);
					
					// String
				
						writeString(this.rcsfl__CALL_UNIQUE_ID__c,dos);
					
					// String
				
						writeString(this.rcsfl__CALL_UUID__c,dos);
					
					// String
				
						writeString(this.rcsfl__Call_Recording__c,dos);
					
					// String
				
						writeString(this.rcsfl__RC_Logging_Type__c,dos);
					
					// String
				
						writeString(this.rcsfl__Recording_Information__c,dos);
					
					// String
				
						writeString(this.rcsfl__external_whoid__c,dos);
					
					// String
				
						writeString(this.rcsfl__key__c,dos);
					
					// java.util.Date
				
						writeDate(this.CreatedDate__c,dos);
					
					// String
				
						writeString(this.Dialpad__CallId__c,dos);
					
					// String
				
						writeString(this.Dialpad__PhoneNumber__c,dos);
					
					// String
				
						writeString(this.Dialpad__TimeInitiated__c,dos);
					
					// java.util.Date
				
						writeDate(this.Dialpad__Timestamp__c,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Curriculum__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Integrity_Conduct__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_At_Risk_Students__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Automated_success_alert__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Behavioral_issues_conduct__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Career_support__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Concern_Issue__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Course_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Disability_support__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Encouragement__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Faculty_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Financial__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Hold_on_Account__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Orientation__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Proactive_Outreach__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Registration__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Wellness__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Technology_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Time_management__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Tutoring__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Urgent__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c);
					
					// String
				
						writeString(this.NoodleCRM__Category__c,dos);
					
					// Long
				
						if(this.NoodleCRM__Completed_Date_Time__c == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.NoodleCRM__Completed_Date_Time__c);
		            	}
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Advising__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Deposit__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Immersion__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Library_related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Complaint_Issue__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Data_related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Id_Card__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Transcript__c);
					
					// String
				
						writeString(this.Upload_Id__c,dos);
					
					// String
				
						writeString(this.NoodleCRM__Result__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",WhoId="+WhoId);
		sb.append(",WhatId="+WhatId);
		sb.append(",WhoCount="+String.valueOf(WhoCount));
		sb.append(",WhatCount="+String.valueOf(WhatCount));
		sb.append(",Subject="+Subject);
		sb.append(",ActivityDate="+String.valueOf(ActivityDate));
		sb.append(",Status="+Status);
		sb.append(",Priority="+Priority);
		sb.append(",IsHighPriority="+String.valueOf(IsHighPriority));
		sb.append(",OwnerId="+OwnerId);
		sb.append(",Description="+Description);
		sb.append(",IsDeleted="+String.valueOf(IsDeleted));
		sb.append(",AccountId="+AccountId);
		sb.append(",IsClosed="+String.valueOf(IsClosed));
		sb.append(",CreatedDate="+String.valueOf(CreatedDate));
		sb.append(",CreatedById="+CreatedById);
		sb.append(",LastModifiedDate="+String.valueOf(LastModifiedDate));
		sb.append(",LastModifiedById="+LastModifiedById);
		sb.append(",SystemModstamp="+String.valueOf(SystemModstamp));
		sb.append(",IsArchived="+String.valueOf(IsArchived));
		sb.append(",CallDurationInSeconds="+String.valueOf(CallDurationInSeconds));
		sb.append(",CallType="+CallType);
		sb.append(",CallDisposition="+CallDisposition);
		sb.append(",CallObject="+CallObject);
		sb.append(",ReminderDateTime="+String.valueOf(ReminderDateTime));
		sb.append(",IsReminderSet="+String.valueOf(IsReminderSet));
		sb.append(",RecurrenceActivityId="+RecurrenceActivityId);
		sb.append(",IsRecurrence="+String.valueOf(IsRecurrence));
		sb.append(",RecurrenceStartDateOnly="+String.valueOf(RecurrenceStartDateOnly));
		sb.append(",RecurrenceEndDateOnly="+String.valueOf(RecurrenceEndDateOnly));
		sb.append(",RecurrenceTimeZoneSidKey="+RecurrenceTimeZoneSidKey);
		sb.append(",RecurrenceType="+RecurrenceType);
		sb.append(",RecurrenceInterval="+String.valueOf(RecurrenceInterval));
		sb.append(",RecurrenceDayOfWeekMask="+String.valueOf(RecurrenceDayOfWeekMask));
		sb.append(",RecurrenceDayOfMonth="+String.valueOf(RecurrenceDayOfMonth));
		sb.append(",RecurrenceInstance="+RecurrenceInstance);
		sb.append(",RecurrenceMonthOfYear="+RecurrenceMonthOfYear);
		sb.append(",RecurrenceRegeneratedType="+RecurrenceRegeneratedType);
		sb.append(",TaskSubtype="+TaskSubtype);
		sb.append(",CompletedDateTime="+String.valueOf(CompletedDateTime));
		sb.append(",NoodleCRM__Contact_Type__c="+NoodleCRM__Contact_Type__c);
		sb.append(",rcsfl__CALL_UNIQUE_ID__c="+rcsfl__CALL_UNIQUE_ID__c);
		sb.append(",rcsfl__CALL_UUID__c="+rcsfl__CALL_UUID__c);
		sb.append(",rcsfl__Call_Recording__c="+rcsfl__Call_Recording__c);
		sb.append(",rcsfl__RC_Logging_Type__c="+rcsfl__RC_Logging_Type__c);
		sb.append(",rcsfl__Recording_Information__c="+rcsfl__Recording_Information__c);
		sb.append(",rcsfl__external_whoid__c="+rcsfl__external_whoid__c);
		sb.append(",rcsfl__key__c="+rcsfl__key__c);
		sb.append(",CreatedDate__c="+String.valueOf(CreatedDate__c));
		sb.append(",Dialpad__CallId__c="+Dialpad__CallId__c);
		sb.append(",Dialpad__PhoneNumber__c="+Dialpad__PhoneNumber__c);
		sb.append(",Dialpad__TimeInitiated__c="+Dialpad__TimeInitiated__c);
		sb.append(",Dialpad__Timestamp__c="+String.valueOf(Dialpad__Timestamp__c));
		sb.append(",NoodleCRM__Cat_Academic_Curriculum__c="+String.valueOf(NoodleCRM__Cat_Academic_Curriculum__c));
		sb.append(",NoodleCRM__Cat_Academic_Integrity_Conduct__c="+String.valueOf(NoodleCRM__Cat_Academic_Integrity_Conduct__c));
		sb.append(",NoodleCRM__Cat_At_Risk_Students__c="+String.valueOf(NoodleCRM__Cat_At_Risk_Students__c));
		sb.append(",NoodleCRM__Cat_Automated_success_alert__c="+String.valueOf(NoodleCRM__Cat_Automated_success_alert__c));
		sb.append(",NoodleCRM__Cat_Behavioral_issues_conduct__c="+String.valueOf(NoodleCRM__Cat_Behavioral_issues_conduct__c));
		sb.append(",NoodleCRM__Cat_Career_support__c="+String.valueOf(NoodleCRM__Cat_Career_support__c));
		sb.append(",NoodleCRM__Cat_Concern_Issue__c="+String.valueOf(NoodleCRM__Cat_Concern_Issue__c));
		sb.append(",NoodleCRM__Cat_Course_Related__c="+String.valueOf(NoodleCRM__Cat_Course_Related__c));
		sb.append(",NoodleCRM__Cat_Disability_support__c="+String.valueOf(NoodleCRM__Cat_Disability_support__c));
		sb.append(",NoodleCRM__Cat_Encouragement__c="+String.valueOf(NoodleCRM__Cat_Encouragement__c));
		sb.append(",NoodleCRM__Cat_Faculty_Related__c="+String.valueOf(NoodleCRM__Cat_Faculty_Related__c));
		sb.append(",NoodleCRM__Cat_Fieldwork_Practicum_placement__c="+String.valueOf(NoodleCRM__Cat_Fieldwork_Practicum_placement__c));
		sb.append(",NoodleCRM__Cat_Financial__c="+String.valueOf(NoodleCRM__Cat_Financial__c));
		sb.append(",NoodleCRM__Cat_Hold_on_Account__c="+String.valueOf(NoodleCRM__Cat_Hold_on_Account__c));
		sb.append(",NoodleCRM__Cat_Orientation__c="+String.valueOf(NoodleCRM__Cat_Orientation__c));
		sb.append(",NoodleCRM__Cat_Proactive_Outreach__c="+String.valueOf(NoodleCRM__Cat_Proactive_Outreach__c));
		sb.append(",NoodleCRM__Cat_Registration__c="+String.valueOf(NoodleCRM__Cat_Registration__c));
		sb.append(",NoodleCRM__Cat_Student_Wellness__c="+String.valueOf(NoodleCRM__Cat_Student_Wellness__c));
		sb.append(",NoodleCRM__Cat_Technology_Related__c="+String.valueOf(NoodleCRM__Cat_Technology_Related__c));
		sb.append(",NoodleCRM__Cat_Time_management__c="+String.valueOf(NoodleCRM__Cat_Time_management__c));
		sb.append(",NoodleCRM__Cat_Tutoring__c="+String.valueOf(NoodleCRM__Cat_Tutoring__c));
		sb.append(",NoodleCRM__Cat_Urgent__c="+String.valueOf(NoodleCRM__Cat_Urgent__c));
		sb.append(",NoodleCRM__Cat_Withdrawal_LOA_Deferral__c="+String.valueOf(NoodleCRM__Cat_Withdrawal_LOA_Deferral__c));
		sb.append(",NoodleCRM__Category__c="+NoodleCRM__Category__c);
		sb.append(",NoodleCRM__Completed_Date_Time__c="+String.valueOf(NoodleCRM__Completed_Date_Time__c));
		sb.append(",NoodleCRM__Cat_Academic_Advising__c="+String.valueOf(NoodleCRM__Cat_Academic_Advising__c));
		sb.append(",NoodleCRM__Cat_Deposit__c="+String.valueOf(NoodleCRM__Cat_Deposit__c));
		sb.append(",NoodleCRM__Cat_Immersion__c="+String.valueOf(NoodleCRM__Cat_Immersion__c));
		sb.append(",NoodleCRM__Cat_Library_related__c="+String.valueOf(NoodleCRM__Cat_Library_related__c));
		sb.append(",NoodleCRM__Cat_Student_Complaint_Issue__c="+String.valueOf(NoodleCRM__Cat_Student_Complaint_Issue__c));
		sb.append(",NoodleCRM__Cat_Student_Data_related__c="+String.valueOf(NoodleCRM__Cat_Student_Data_related__c));
		sb.append(",NoodleCRM__Cat_Student_Id_Card__c="+String.valueOf(NoodleCRM__Cat_Student_Id_Card__c));
		sb.append(",NoodleCRM__Cat_Transcript__c="+String.valueOf(NoodleCRM__Cat_Transcript__c));
		sb.append(",Upload_Id__c="+Upload_Id__c);
		sb.append(",NoodleCRM__Result__c="+NoodleCRM__Result__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];
    static byte[] commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String WhoId;

				public String getWhoId () {
					return this.WhoId;
				}
				
			    public String WhatId;

				public String getWhatId () {
					return this.WhatId;
				}
				
			    public String Subject;

				public String getSubject () {
					return this.Subject;
				}
				
			    public java.util.Date ActivityDate;

				public java.util.Date getActivityDate () {
					return this.ActivityDate;
				}
				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}
				
			    public String Priority;

				public String getPriority () {
					return this.Priority;
				}
				
			    public boolean IsHighPriority;

				public boolean getIsHighPriority () {
					return this.IsHighPriority;
				}
				
			    public String OwnerId;

				public String getOwnerId () {
					return this.OwnerId;
				}
				
			    public String Description;

				public String getDescription () {
					return this.Description;
				}
				
			    public boolean IsDeleted;

				public boolean getIsDeleted () {
					return this.IsDeleted;
				}
				
			    public String AccountId;

				public String getAccountId () {
					return this.AccountId;
				}
				
			    public boolean IsClosed;

				public boolean getIsClosed () {
					return this.IsClosed;
				}
				
			    public java.util.Date CreatedDate;

				public java.util.Date getCreatedDate () {
					return this.CreatedDate;
				}
				
			    public String CreatedById;

				public String getCreatedById () {
					return this.CreatedById;
				}
				
			    public java.util.Date LastModifiedDate;

				public java.util.Date getLastModifiedDate () {
					return this.LastModifiedDate;
				}
				
			    public String LastModifiedById;

				public String getLastModifiedById () {
					return this.LastModifiedById;
				}
				
			    public java.util.Date SystemModstamp;

				public java.util.Date getSystemModstamp () {
					return this.SystemModstamp;
				}
				
			    public boolean IsArchived;

				public boolean getIsArchived () {
					return this.IsArchived;
				}
				
			    public Integer CallDurationInSeconds;

				public Integer getCallDurationInSeconds () {
					return this.CallDurationInSeconds;
				}
				
			    public String CallType;

				public String getCallType () {
					return this.CallType;
				}
				
			    public String CallDisposition;

				public String getCallDisposition () {
					return this.CallDisposition;
				}
				
			    public String CallObject;

				public String getCallObject () {
					return this.CallObject;
				}
				
			    public java.util.Date ReminderDateTime;

				public java.util.Date getReminderDateTime () {
					return this.ReminderDateTime;
				}
				
			    public boolean IsReminderSet;

				public boolean getIsReminderSet () {
					return this.IsReminderSet;
				}
				
			    public String RecurrenceActivityId;

				public String getRecurrenceActivityId () {
					return this.RecurrenceActivityId;
				}
				
			    public boolean IsRecurrence;

				public boolean getIsRecurrence () {
					return this.IsRecurrence;
				}
				
			    public java.util.Date RecurrenceStartDateOnly;

				public java.util.Date getRecurrenceStartDateOnly () {
					return this.RecurrenceStartDateOnly;
				}
				
			    public java.util.Date RecurrenceEndDateOnly;

				public java.util.Date getRecurrenceEndDateOnly () {
					return this.RecurrenceEndDateOnly;
				}
				
			    public String RecurrenceTimeZoneSidKey;

				public String getRecurrenceTimeZoneSidKey () {
					return this.RecurrenceTimeZoneSidKey;
				}
				
			    public String RecurrenceType;

				public String getRecurrenceType () {
					return this.RecurrenceType;
				}
				
			    public Integer RecurrenceInterval;

				public Integer getRecurrenceInterval () {
					return this.RecurrenceInterval;
				}
				
			    public Integer RecurrenceDayOfWeekMask;

				public Integer getRecurrenceDayOfWeekMask () {
					return this.RecurrenceDayOfWeekMask;
				}
				
			    public Integer RecurrenceDayOfMonth;

				public Integer getRecurrenceDayOfMonth () {
					return this.RecurrenceDayOfMonth;
				}
				
			    public String RecurrenceInstance;

				public String getRecurrenceInstance () {
					return this.RecurrenceInstance;
				}
				
			    public String RecurrenceMonthOfYear;

				public String getRecurrenceMonthOfYear () {
					return this.RecurrenceMonthOfYear;
				}
				
			    public String RecurrenceRegeneratedType;

				public String getRecurrenceRegeneratedType () {
					return this.RecurrenceRegeneratedType;
				}
				
			    public String TaskSubtype;

				public String getTaskSubtype () {
					return this.TaskSubtype;
				}
				
			    public java.util.Date CompletedDateTime;

				public java.util.Date getCompletedDateTime () {
					return this.CompletedDateTime;
				}
				
			    public String NoodleCRM__Contact_Type__c;

				public String getNoodleCRM__Contact_Type__c () {
					return this.NoodleCRM__Contact_Type__c;
				}
				
			    public String rcsfl__CALL_UNIQUE_ID__c;

				public String getRcsfl__CALL_UNIQUE_ID__c () {
					return this.rcsfl__CALL_UNIQUE_ID__c;
				}
				
			    public String rcsfl__CALL_UUID__c;

				public String getRcsfl__CALL_UUID__c () {
					return this.rcsfl__CALL_UUID__c;
				}
				
			    public String rcsfl__Call_Recording__c;

				public String getRcsfl__Call_Recording__c () {
					return this.rcsfl__Call_Recording__c;
				}
				
			    public String rcsfl__RC_Logging_Type__c;

				public String getRcsfl__RC_Logging_Type__c () {
					return this.rcsfl__RC_Logging_Type__c;
				}
				
			    public String rcsfl__Recording_Information__c;

				public String getRcsfl__Recording_Information__c () {
					return this.rcsfl__Recording_Information__c;
				}
				
			    public String rcsfl__external_whoid__c;

				public String getRcsfl__external_whoid__c () {
					return this.rcsfl__external_whoid__c;
				}
				
			    public String rcsfl__key__c;

				public String getRcsfl__key__c () {
					return this.rcsfl__key__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Curriculum__c;

				public boolean getNoodleCRM__Cat_Academic_Curriculum__c () {
					return this.NoodleCRM__Cat_Academic_Curriculum__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Integrity_Conduct__c;

				public boolean getNoodleCRM__Cat_Academic_Integrity_Conduct__c () {
					return this.NoodleCRM__Cat_Academic_Integrity_Conduct__c;
				}
				
			    public boolean NoodleCRM__Cat_At_Risk_Students__c;

				public boolean getNoodleCRM__Cat_At_Risk_Students__c () {
					return this.NoodleCRM__Cat_At_Risk_Students__c;
				}
				
			    public boolean NoodleCRM__Cat_Automated_success_alert__c;

				public boolean getNoodleCRM__Cat_Automated_success_alert__c () {
					return this.NoodleCRM__Cat_Automated_success_alert__c;
				}
				
			    public boolean NoodleCRM__Cat_Behavioral_issues_conduct__c;

				public boolean getNoodleCRM__Cat_Behavioral_issues_conduct__c () {
					return this.NoodleCRM__Cat_Behavioral_issues_conduct__c;
				}
				
			    public boolean NoodleCRM__Cat_Career_support__c;

				public boolean getNoodleCRM__Cat_Career_support__c () {
					return this.NoodleCRM__Cat_Career_support__c;
				}
				
			    public boolean NoodleCRM__Cat_Concern_Issue__c;

				public boolean getNoodleCRM__Cat_Concern_Issue__c () {
					return this.NoodleCRM__Cat_Concern_Issue__c;
				}
				
			    public boolean NoodleCRM__Cat_Course_Related__c;

				public boolean getNoodleCRM__Cat_Course_Related__c () {
					return this.NoodleCRM__Cat_Course_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Disability_support__c;

				public boolean getNoodleCRM__Cat_Disability_support__c () {
					return this.NoodleCRM__Cat_Disability_support__c;
				}
				
			    public boolean NoodleCRM__Cat_Encouragement__c;

				public boolean getNoodleCRM__Cat_Encouragement__c () {
					return this.NoodleCRM__Cat_Encouragement__c;
				}
				
			    public boolean NoodleCRM__Cat_Faculty_Related__c;

				public boolean getNoodleCRM__Cat_Faculty_Related__c () {
					return this.NoodleCRM__Cat_Faculty_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Fieldwork_Practicum_placement__c;

				public boolean getNoodleCRM__Cat_Fieldwork_Practicum_placement__c () {
					return this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c;
				}
				
			    public boolean NoodleCRM__Cat_Financial__c;

				public boolean getNoodleCRM__Cat_Financial__c () {
					return this.NoodleCRM__Cat_Financial__c;
				}
				
			    public boolean NoodleCRM__Cat_Hold_on_Account__c;

				public boolean getNoodleCRM__Cat_Hold_on_Account__c () {
					return this.NoodleCRM__Cat_Hold_on_Account__c;
				}
				
			    public boolean NoodleCRM__Cat_Orientation__c;

				public boolean getNoodleCRM__Cat_Orientation__c () {
					return this.NoodleCRM__Cat_Orientation__c;
				}
				
			    public boolean NoodleCRM__Cat_Proactive_Outreach__c;

				public boolean getNoodleCRM__Cat_Proactive_Outreach__c () {
					return this.NoodleCRM__Cat_Proactive_Outreach__c;
				}
				
			    public boolean NoodleCRM__Cat_Registration__c;

				public boolean getNoodleCRM__Cat_Registration__c () {
					return this.NoodleCRM__Cat_Registration__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Wellness__c;

				public boolean getNoodleCRM__Cat_Student_Wellness__c () {
					return this.NoodleCRM__Cat_Student_Wellness__c;
				}
				
			    public boolean NoodleCRM__Cat_Technology_Related__c;

				public boolean getNoodleCRM__Cat_Technology_Related__c () {
					return this.NoodleCRM__Cat_Technology_Related__c;
				}
				
			    public boolean NoodleCRM__Cat_Time_management__c;

				public boolean getNoodleCRM__Cat_Time_management__c () {
					return this.NoodleCRM__Cat_Time_management__c;
				}
				
			    public boolean NoodleCRM__Cat_Tutoring__c;

				public boolean getNoodleCRM__Cat_Tutoring__c () {
					return this.NoodleCRM__Cat_Tutoring__c;
				}
				
			    public boolean NoodleCRM__Cat_Urgent__c;

				public boolean getNoodleCRM__Cat_Urgent__c () {
					return this.NoodleCRM__Cat_Urgent__c;
				}
				
			    public boolean NoodleCRM__Cat_Withdrawal_LOA_Deferral__c;

				public boolean getNoodleCRM__Cat_Withdrawal_LOA_Deferral__c () {
					return this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c;
				}
				
			    public String NoodleCRM__Category__c;

				public String getNoodleCRM__Category__c () {
					return this.NoodleCRM__Category__c;
				}
				
			    public java.util.Date NoodleCRM__Completed_Date_Time__c;

				public java.util.Date getNoodleCRM__Completed_Date_Time__c () {
					return this.NoodleCRM__Completed_Date_Time__c;
				}
				
			    public boolean NoodleCRM__Cat_Academic_Advising__c;

				public boolean getNoodleCRM__Cat_Academic_Advising__c () {
					return this.NoodleCRM__Cat_Academic_Advising__c;
				}
				
			    public boolean NoodleCRM__Cat_Deposit__c;

				public boolean getNoodleCRM__Cat_Deposit__c () {
					return this.NoodleCRM__Cat_Deposit__c;
				}
				
			    public boolean NoodleCRM__Cat_Immersion__c;

				public boolean getNoodleCRM__Cat_Immersion__c () {
					return this.NoodleCRM__Cat_Immersion__c;
				}
				
			    public boolean NoodleCRM__Cat_Library_related__c;

				public boolean getNoodleCRM__Cat_Library_related__c () {
					return this.NoodleCRM__Cat_Library_related__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Complaint_Issue__c;

				public boolean getNoodleCRM__Cat_Student_Complaint_Issue__c () {
					return this.NoodleCRM__Cat_Student_Complaint_Issue__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Data_related__c;

				public boolean getNoodleCRM__Cat_Student_Data_related__c () {
					return this.NoodleCRM__Cat_Student_Data_related__c;
				}
				
			    public boolean NoodleCRM__Cat_Student_Id_Card__c;

				public boolean getNoodleCRM__Cat_Student_Id_Card__c () {
					return this.NoodleCRM__Cat_Student_Id_Card__c;
				}
				
			    public boolean NoodleCRM__Cat_Transcript__c;

				public boolean getNoodleCRM__Cat_Transcript__c () {
					return this.NoodleCRM__Cat_Transcript__c;
				}
				
			    public String NoodleCRM__Result__c;

				public String getNoodleCRM__Result__c () {
					return this.NoodleCRM__Result__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length) {
				if(length < 1024 && commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length == 0) {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[1024];
				} else {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length);
			strReturn = new String(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.WhoId = readString(dis);
					
					this.WhatId = readString(dis);
					
					this.Subject = readString(dis);
					
					this.ActivityDate = readDate(dis);
					
					this.Status = readString(dis);
					
					this.Priority = readString(dis);
					
			        this.IsHighPriority = dis.readBoolean();
					
					this.OwnerId = readString(dis);
					
					this.Description = readString(dis);
					
			        this.IsDeleted = dis.readBoolean();
					
					this.AccountId = readString(dis);
					
			        this.IsClosed = dis.readBoolean();
					
					this.CreatedDate = readDate(dis);
					
					this.CreatedById = readString(dis);
					
					this.LastModifiedDate = readDate(dis);
					
					this.LastModifiedById = readString(dis);
					
					this.SystemModstamp = readDate(dis);
					
			        this.IsArchived = dis.readBoolean();
					
						this.CallDurationInSeconds = readInteger(dis);
					
					this.CallType = readString(dis);
					
					this.CallDisposition = readString(dis);
					
					this.CallObject = readString(dis);
					
					this.ReminderDateTime = readDate(dis);
					
			        this.IsReminderSet = dis.readBoolean();
					
					this.RecurrenceActivityId = readString(dis);
					
			        this.IsRecurrence = dis.readBoolean();
					
					this.RecurrenceStartDateOnly = readDate(dis);
					
					this.RecurrenceEndDateOnly = readDate(dis);
					
					this.RecurrenceTimeZoneSidKey = readString(dis);
					
					this.RecurrenceType = readString(dis);
					
						this.RecurrenceInterval = readInteger(dis);
					
						this.RecurrenceDayOfWeekMask = readInteger(dis);
					
						this.RecurrenceDayOfMonth = readInteger(dis);
					
					this.RecurrenceInstance = readString(dis);
					
					this.RecurrenceMonthOfYear = readString(dis);
					
					this.RecurrenceRegeneratedType = readString(dis);
					
					this.TaskSubtype = readString(dis);
					
					this.CompletedDateTime = readDate(dis);
					
					this.NoodleCRM__Contact_Type__c = readString(dis);
					
					this.rcsfl__CALL_UNIQUE_ID__c = readString(dis);
					
					this.rcsfl__CALL_UUID__c = readString(dis);
					
					this.rcsfl__Call_Recording__c = readString(dis);
					
					this.rcsfl__RC_Logging_Type__c = readString(dis);
					
					this.rcsfl__Recording_Information__c = readString(dis);
					
					this.rcsfl__external_whoid__c = readString(dis);
					
					this.rcsfl__key__c = readString(dis);
					
			        this.NoodleCRM__Cat_Academic_Curriculum__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Academic_Integrity_Conduct__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_At_Risk_Students__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Automated_success_alert__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Behavioral_issues_conduct__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Career_support__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Concern_Issue__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Course_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Disability_support__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Encouragement__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Faculty_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Financial__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Hold_on_Account__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Orientation__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Proactive_Outreach__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Registration__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Wellness__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Technology_Related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Time_management__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Tutoring__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Urgent__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c = dis.readBoolean();
					
					this.NoodleCRM__Category__c = readString(dis);
					
					this.NoodleCRM__Completed_Date_Time__c = readDate(dis);
					
			        this.NoodleCRM__Cat_Academic_Advising__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Deposit__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Immersion__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Library_related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Complaint_Issue__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Data_related__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Student_Id_Card__c = dis.readBoolean();
					
			        this.NoodleCRM__Cat_Transcript__c = dis.readBoolean();
					
					this.NoodleCRM__Result__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.WhoId,dos);
					
					// String
				
						writeString(this.WhatId,dos);
					
					// String
				
						writeString(this.Subject,dos);
					
					// java.util.Date
				
						writeDate(this.ActivityDate,dos);
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Priority,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsHighPriority);
					
					// String
				
						writeString(this.OwnerId,dos);
					
					// String
				
						writeString(this.Description,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsDeleted);
					
					// String
				
						writeString(this.AccountId,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsClosed);
					
					// java.util.Date
				
						writeDate(this.CreatedDate,dos);
					
					// String
				
						writeString(this.CreatedById,dos);
					
					// java.util.Date
				
						writeDate(this.LastModifiedDate,dos);
					
					// String
				
						writeString(this.LastModifiedById,dos);
					
					// java.util.Date
				
						writeDate(this.SystemModstamp,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsArchived);
					
					// Integer
				
						writeInteger(this.CallDurationInSeconds,dos);
					
					// String
				
						writeString(this.CallType,dos);
					
					// String
				
						writeString(this.CallDisposition,dos);
					
					// String
				
						writeString(this.CallObject,dos);
					
					// java.util.Date
				
						writeDate(this.ReminderDateTime,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsReminderSet);
					
					// String
				
						writeString(this.RecurrenceActivityId,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.IsRecurrence);
					
					// java.util.Date
				
						writeDate(this.RecurrenceStartDateOnly,dos);
					
					// java.util.Date
				
						writeDate(this.RecurrenceEndDateOnly,dos);
					
					// String
				
						writeString(this.RecurrenceTimeZoneSidKey,dos);
					
					// String
				
						writeString(this.RecurrenceType,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceInterval,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceDayOfWeekMask,dos);
					
					// Integer
				
						writeInteger(this.RecurrenceDayOfMonth,dos);
					
					// String
				
						writeString(this.RecurrenceInstance,dos);
					
					// String
				
						writeString(this.RecurrenceMonthOfYear,dos);
					
					// String
				
						writeString(this.RecurrenceRegeneratedType,dos);
					
					// String
				
						writeString(this.TaskSubtype,dos);
					
					// java.util.Date
				
						writeDate(this.CompletedDateTime,dos);
					
					// String
				
						writeString(this.NoodleCRM__Contact_Type__c,dos);
					
					// String
				
						writeString(this.rcsfl__CALL_UNIQUE_ID__c,dos);
					
					// String
				
						writeString(this.rcsfl__CALL_UUID__c,dos);
					
					// String
				
						writeString(this.rcsfl__Call_Recording__c,dos);
					
					// String
				
						writeString(this.rcsfl__RC_Logging_Type__c,dos);
					
					// String
				
						writeString(this.rcsfl__Recording_Information__c,dos);
					
					// String
				
						writeString(this.rcsfl__external_whoid__c,dos);
					
					// String
				
						writeString(this.rcsfl__key__c,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Curriculum__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Integrity_Conduct__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_At_Risk_Students__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Automated_success_alert__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Behavioral_issues_conduct__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Career_support__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Concern_Issue__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Course_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Disability_support__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Encouragement__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Faculty_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Fieldwork_Practicum_placement__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Financial__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Hold_on_Account__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Orientation__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Proactive_Outreach__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Registration__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Wellness__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Technology_Related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Time_management__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Tutoring__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Urgent__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c);
					
					// String
				
						writeString(this.NoodleCRM__Category__c,dos);
					
					// java.util.Date
				
						writeDate(this.NoodleCRM__Completed_Date_Time__c,dos);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Academic_Advising__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Deposit__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Immersion__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Library_related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Complaint_Issue__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Data_related__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Student_Id_Card__c);
					
					// boolean
				
		            	dos.writeBoolean(this.NoodleCRM__Cat_Transcript__c);
					
					// String
				
						writeString(this.NoodleCRM__Result__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",WhoId="+WhoId);
		sb.append(",WhatId="+WhatId);
		sb.append(",Subject="+Subject);
		sb.append(",ActivityDate="+String.valueOf(ActivityDate));
		sb.append(",Status="+Status);
		sb.append(",Priority="+Priority);
		sb.append(",IsHighPriority="+String.valueOf(IsHighPriority));
		sb.append(",OwnerId="+OwnerId);
		sb.append(",Description="+Description);
		sb.append(",IsDeleted="+String.valueOf(IsDeleted));
		sb.append(",AccountId="+AccountId);
		sb.append(",IsClosed="+String.valueOf(IsClosed));
		sb.append(",CreatedDate="+String.valueOf(CreatedDate));
		sb.append(",CreatedById="+CreatedById);
		sb.append(",LastModifiedDate="+String.valueOf(LastModifiedDate));
		sb.append(",LastModifiedById="+LastModifiedById);
		sb.append(",SystemModstamp="+String.valueOf(SystemModstamp));
		sb.append(",IsArchived="+String.valueOf(IsArchived));
		sb.append(",CallDurationInSeconds="+String.valueOf(CallDurationInSeconds));
		sb.append(",CallType="+CallType);
		sb.append(",CallDisposition="+CallDisposition);
		sb.append(",CallObject="+CallObject);
		sb.append(",ReminderDateTime="+String.valueOf(ReminderDateTime));
		sb.append(",IsReminderSet="+String.valueOf(IsReminderSet));
		sb.append(",RecurrenceActivityId="+RecurrenceActivityId);
		sb.append(",IsRecurrence="+String.valueOf(IsRecurrence));
		sb.append(",RecurrenceStartDateOnly="+String.valueOf(RecurrenceStartDateOnly));
		sb.append(",RecurrenceEndDateOnly="+String.valueOf(RecurrenceEndDateOnly));
		sb.append(",RecurrenceTimeZoneSidKey="+RecurrenceTimeZoneSidKey);
		sb.append(",RecurrenceType="+RecurrenceType);
		sb.append(",RecurrenceInterval="+String.valueOf(RecurrenceInterval));
		sb.append(",RecurrenceDayOfWeekMask="+String.valueOf(RecurrenceDayOfWeekMask));
		sb.append(",RecurrenceDayOfMonth="+String.valueOf(RecurrenceDayOfMonth));
		sb.append(",RecurrenceInstance="+RecurrenceInstance);
		sb.append(",RecurrenceMonthOfYear="+RecurrenceMonthOfYear);
		sb.append(",RecurrenceRegeneratedType="+RecurrenceRegeneratedType);
		sb.append(",TaskSubtype="+TaskSubtype);
		sb.append(",CompletedDateTime="+String.valueOf(CompletedDateTime));
		sb.append(",NoodleCRM__Contact_Type__c="+NoodleCRM__Contact_Type__c);
		sb.append(",rcsfl__CALL_UNIQUE_ID__c="+rcsfl__CALL_UNIQUE_ID__c);
		sb.append(",rcsfl__CALL_UUID__c="+rcsfl__CALL_UUID__c);
		sb.append(",rcsfl__Call_Recording__c="+rcsfl__Call_Recording__c);
		sb.append(",rcsfl__RC_Logging_Type__c="+rcsfl__RC_Logging_Type__c);
		sb.append(",rcsfl__Recording_Information__c="+rcsfl__Recording_Information__c);
		sb.append(",rcsfl__external_whoid__c="+rcsfl__external_whoid__c);
		sb.append(",rcsfl__key__c="+rcsfl__key__c);
		sb.append(",NoodleCRM__Cat_Academic_Curriculum__c="+String.valueOf(NoodleCRM__Cat_Academic_Curriculum__c));
		sb.append(",NoodleCRM__Cat_Academic_Integrity_Conduct__c="+String.valueOf(NoodleCRM__Cat_Academic_Integrity_Conduct__c));
		sb.append(",NoodleCRM__Cat_At_Risk_Students__c="+String.valueOf(NoodleCRM__Cat_At_Risk_Students__c));
		sb.append(",NoodleCRM__Cat_Automated_success_alert__c="+String.valueOf(NoodleCRM__Cat_Automated_success_alert__c));
		sb.append(",NoodleCRM__Cat_Behavioral_issues_conduct__c="+String.valueOf(NoodleCRM__Cat_Behavioral_issues_conduct__c));
		sb.append(",NoodleCRM__Cat_Career_support__c="+String.valueOf(NoodleCRM__Cat_Career_support__c));
		sb.append(",NoodleCRM__Cat_Concern_Issue__c="+String.valueOf(NoodleCRM__Cat_Concern_Issue__c));
		sb.append(",NoodleCRM__Cat_Course_Related__c="+String.valueOf(NoodleCRM__Cat_Course_Related__c));
		sb.append(",NoodleCRM__Cat_Disability_support__c="+String.valueOf(NoodleCRM__Cat_Disability_support__c));
		sb.append(",NoodleCRM__Cat_Encouragement__c="+String.valueOf(NoodleCRM__Cat_Encouragement__c));
		sb.append(",NoodleCRM__Cat_Faculty_Related__c="+String.valueOf(NoodleCRM__Cat_Faculty_Related__c));
		sb.append(",NoodleCRM__Cat_Fieldwork_Practicum_placement__c="+String.valueOf(NoodleCRM__Cat_Fieldwork_Practicum_placement__c));
		sb.append(",NoodleCRM__Cat_Financial__c="+String.valueOf(NoodleCRM__Cat_Financial__c));
		sb.append(",NoodleCRM__Cat_Hold_on_Account__c="+String.valueOf(NoodleCRM__Cat_Hold_on_Account__c));
		sb.append(",NoodleCRM__Cat_Orientation__c="+String.valueOf(NoodleCRM__Cat_Orientation__c));
		sb.append(",NoodleCRM__Cat_Proactive_Outreach__c="+String.valueOf(NoodleCRM__Cat_Proactive_Outreach__c));
		sb.append(",NoodleCRM__Cat_Registration__c="+String.valueOf(NoodleCRM__Cat_Registration__c));
		sb.append(",NoodleCRM__Cat_Student_Wellness__c="+String.valueOf(NoodleCRM__Cat_Student_Wellness__c));
		sb.append(",NoodleCRM__Cat_Technology_Related__c="+String.valueOf(NoodleCRM__Cat_Technology_Related__c));
		sb.append(",NoodleCRM__Cat_Time_management__c="+String.valueOf(NoodleCRM__Cat_Time_management__c));
		sb.append(",NoodleCRM__Cat_Tutoring__c="+String.valueOf(NoodleCRM__Cat_Tutoring__c));
		sb.append(",NoodleCRM__Cat_Urgent__c="+String.valueOf(NoodleCRM__Cat_Urgent__c));
		sb.append(",NoodleCRM__Cat_Withdrawal_LOA_Deferral__c="+String.valueOf(NoodleCRM__Cat_Withdrawal_LOA_Deferral__c));
		sb.append(",NoodleCRM__Category__c="+NoodleCRM__Category__c);
		sb.append(",NoodleCRM__Completed_Date_Time__c="+String.valueOf(NoodleCRM__Completed_Date_Time__c));
		sb.append(",NoodleCRM__Cat_Academic_Advising__c="+String.valueOf(NoodleCRM__Cat_Academic_Advising__c));
		sb.append(",NoodleCRM__Cat_Deposit__c="+String.valueOf(NoodleCRM__Cat_Deposit__c));
		sb.append(",NoodleCRM__Cat_Immersion__c="+String.valueOf(NoodleCRM__Cat_Immersion__c));
		sb.append(",NoodleCRM__Cat_Library_related__c="+String.valueOf(NoodleCRM__Cat_Library_related__c));
		sb.append(",NoodleCRM__Cat_Student_Complaint_Issue__c="+String.valueOf(NoodleCRM__Cat_Student_Complaint_Issue__c));
		sb.append(",NoodleCRM__Cat_Student_Data_related__c="+String.valueOf(NoodleCRM__Cat_Student_Data_related__c));
		sb.append(",NoodleCRM__Cat_Student_Id_Card__c="+String.valueOf(NoodleCRM__Cat_Student_Id_Card__c));
		sb.append(",NoodleCRM__Cat_Transcript__c="+String.valueOf(NoodleCRM__Cat_Transcript__c));
		sb.append(",NoodleCRM__Result__c="+NoodleCRM__Result__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tSalesforceInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSalesforceInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
out10Struct out10 = new out10Struct();





	
	/**
	 * [tWriteJSONField_10_Out begin ] start
	 */

	

	
		
		ok_Hash.put("tWriteJSONField_10_Out", false);
		start_Hash.put("tWriteJSONField_10_Out", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out10");
					}
				
		int tos_count_tWriteJSONField_10_Out = 0;
		
//tWriteXMLFieldOut_begin
				int nb_line_tWriteJSONField_10_Out = 0;
				boolean needRoot_tWriteJSONField_10_Out  = true;
				
				String  strCompCache_tWriteJSONField_10_Out= null;		
				
						        java.util.Queue<row25Struct> listGroupby_tWriteJSONField_10_Out = new java.util.concurrent.ConcurrentLinkedQueue<row25Struct>();
							
	
					class ThreadXMLField_tWriteJSONField_10_Out extends Thread {
						
									    java.util.Queue<row25Struct> queue;
									
						java.util.List<java.util.Map<String,String>> flows;
						java.lang.Exception lastException;
						java.lang.Error lastError;
						String currentComponent;
						
						ThreadXMLField_tWriteJSONField_10_Out(java.util.Queue q) {
							this.queue = q;
							globalMap.put("queue_tWriteJSONField_10_In", queue);
							lastException = null;
						}
						
						ThreadXMLField_tWriteJSONField_10_Out(java.util.Queue q, java.util.List<java.util.Map<String,String>> l) {
							this.queue = q;
							this.flows = l;
							lastException = null;
							globalMap.put("queue_tWriteJSONField_10_In", queue);
							globalMap.put("flows_tWriteJSONField_10_In", flows);
						}
						
						public java.lang.Exception getLastException() {
							return this.lastException;
						}
						
						public java.lang.Error getLastError() {
							return this.lastError;
						}
						
						public String getCurrentComponent() {
							return this.currentComponent;
						}
	
						@Override
						public void run() {
							try {
								tWriteJSONField_10_InProcess(globalMap);
							} catch (TalendException te) {
								this.lastException = te.getException();
								this.currentComponent = te.getCurrentComponent();
							} catch (java.lang.Error error) {
								this.lastError = error;
							}
						}
					}
					
						ThreadXMLField_tWriteJSONField_10_Out txf_tWriteJSONField_10_Out = new ThreadXMLField_tWriteJSONField_10_Out(listGroupby_tWriteJSONField_10_Out);
					
					txf_tWriteJSONField_10_Out.start();
				

java.util.List<java.util.List<String>> groupbyList_tWriteJSONField_10_Out = new java.util.ArrayList<java.util.List<String>>();
java.util.Map<String,String> valueMap_tWriteJSONField_10_Out = new java.util.HashMap<String,String>();
java.util.Map<String,String> arraysValueMap_tWriteJSONField_10_Out = new java.util.HashMap<String,String>();

class NestXMLTool_tWriteJSONField_10_Out{
	public void parseAndAdd(org.dom4j.Element nestRoot, String value){
		try {
            org.dom4j.Document doc4Str = org.dom4j.DocumentHelper.parseText("<root>"+ value + "</root>");
    		nestRoot.setContent(doc4Str.getRootElement().content());
    	} catch (java.lang.Exception e) {
    		e.printStackTrace();
    		nestRoot.setText(value);
        }
	}
	
	public void setText(org.dom4j.Element element, String value){
		if (value.startsWith("<![CDATA[") && value.endsWith("]]>")) {
			String text = value.substring(9, value.length()-3);
			element.addCDATA(text);
		}else{
			element.setText(value);
		}
	}
	
	public void replaceDefaultNameSpace(org.dom4j.Element nestRoot){
		if (nestRoot!=null) {
			for (org.dom4j.Element tmp: (java.util.List<org.dom4j.Element>) nestRoot.elements()) {
        		if (("").equals(tmp.getQName().getNamespace().getURI()) && ("").equals(tmp.getQName().getNamespace().getPrefix())){
        			tmp.setQName(org.dom4j.DocumentHelper.createQName(tmp.getName(), nestRoot.getQName().getNamespace()));
	        	}
    	    	replaceDefaultNameSpace(tmp);
       		}
       	}
	}
	
	public void removeEmptyElement(org.dom4j.Element root){
		if (root!=null) {
			for (org.dom4j.Element tmp: (java.util.List<org.dom4j.Element>) root.elements()) {
				removeEmptyElement(tmp);
			}
			if (root.content().size() == 0 
    			&& root.attributes().size() == 0 
    			&& root.declaredNamespaces().size() == 0) {
    			if(root.getParent()!=null){
                	root.getParent().remove(root);
                }
            }
		}
	}
	
	public String objectToString(Object value){
		if(value.getClass().isArray()){
			StringBuilder sb = new StringBuilder();

			int length = java.lang.reflect.Array.getLength(value);
			for (int i = 0; i < length; i++) {
				Object obj = java.lang.reflect.Array.get(value, i);
				sb.append("<element>");
				sb.append(obj);
				sb.append("</element>");
			}
			return sb.toString();
		}else{
			return value.toString();
		}
	}
}
NestXMLTool_tWriteJSONField_10_Out nestXMLTool_tWriteJSONField_10_Out = new NestXMLTool_tWriteJSONField_10_Out();

out10Struct  rowStructOutput_tWriteJSONField_10_Out = new out10Struct();
// sort group root element for judgement of group
java.util.List<org.dom4j.Element> groupElementList_tWriteJSONField_10_Out = new java.util.ArrayList<org.dom4j.Element>();
org.dom4j.Element root4Group_tWriteJSONField_10_Out = null;
org.dom4j.Document doc_tWriteJSONField_10_Out  = org.dom4j.DocumentHelper.createDocument();
org.dom4j.io.OutputFormat format_tWriteJSONField_10_Out = org.dom4j.io.OutputFormat.createCompactFormat();
format_tWriteJSONField_10_Out.setNewLineAfterDeclaration(false);
format_tWriteJSONField_10_Out.setTrimText(false);
format_tWriteJSONField_10_Out.setEncoding("ISO-8859-15");
int[] orders_tWriteJSONField_10_Out = new int[1];

 



/**
 * [tWriteJSONField_10_Out begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
out10Struct out10_tmp = new out10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tSalesforceInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceInput_11", false);
		start_Hash.put("tSalesforceInput_11", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceInput_11";

	
		int tos_count_tSalesforceInput_11 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceInput_11 =
        new org.talend.components.salesforce.tsalesforceinput.TSalesforceInputDefinition();

org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties props_tSalesforceInput_11 =
        (org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties) def_tSalesforceInput_11.createRuntimeProperties();
 		                    props_tSalesforceInput_11.setValue("queryMode",
 		                        org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties.QueryMode.Query);
 		                    
 		                    props_tSalesforceInput_11.setValue("condition",
 		                    context.sfdc_conn_QueryCondition);
 		                    
 		                    props_tSalesforceInput_11.setValue("manualQuery",
 		                    false);
 		                    
 		                    props_tSalesforceInput_11.setValue("includeDeleted",
 		                    true);
 		                    
 		                    props_tSalesforceInput_11.setValue("batchSize",
 		                    250);
 		                    
 		                    props_tSalesforceInput_11.setValue("normalizeDelimiter",
 		                    ";");
 		                    
 		                    props_tSalesforceInput_11.setValue("columnNameDelimiter",
 		                    "_");
 		                    
 		                    props_tSalesforceInput_11.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_11.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_11.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceInput_11.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_2");
 		                    
 		                    props_tSalesforceInput_11.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceInput_11.module.setValue("moduleName",
 		                    "Task");
 		                    
 		                    props_tSalesforceInput_11.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_11.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_11.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceInput_11.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_2");
 		                    
 		                    props_tSalesforceInput_11.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceInput_11_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Task\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"WhoId\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"WhoId\",\"talend.field.dbColumnName\":\"WhoId\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"WhoId\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"WhatId\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"WhatId\",\"talend.field.dbColumnName\":\"WhatId\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"WhatId\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Subject\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Subject\",\"talend.field.dbColumnName\":\"Subject\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Subject\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ActivityDate\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"ActivityDate\",\"talend.field.dbColumnName\":\"ActivityDate\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ActivityDate\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Status\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Status\",\"talend.field.dbColumnName\":\"Status\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Status\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Priority\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Priority\",\"talend.field.dbColumnName\":\"Priority\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Priority\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsHighPriority\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsHighPriority\",\"talend.field.dbColumnName\":\"IsHighPriority\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsHighPriority\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"OwnerId\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"OwnerId\",\"talend.field.dbColumnName\":\"OwnerId\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"OwnerId\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Description\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Description\",\"talend.field.dbColumnName\":\"Description\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"32000\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Description\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsDeleted\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsDeleted\",\"talend.field.dbColumnName\":\"IsDeleted\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsDeleted\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"AccountId\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"AccountId\",\"talend.field.dbColumnName\":\"AccountId\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"AccountId\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsClosed\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsClosed\",\"talend.field.dbColumnName\":\"IsClosed\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsClosed\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CreatedDate\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"CreatedDate\",\"talend.field.dbColumnName\":\"CreatedDate\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CreatedDate\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CreatedById\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CreatedById\",\"talend.field.dbColumnName\":\"CreatedById\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CreatedById\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"LastModifiedDate\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"LastModifiedDate\",\"talend.field.dbColumnName\":\"LastModifiedDate\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"LastModifiedDate\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"LastModifiedById\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"LastModifiedById\",\"talend.field.dbColumnName\":\"LastModifiedById\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"LastModifiedById\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"SystemModstamp\",\"type\":{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"SystemModstamp\",\"talend.field.dbColumnName\":\"SystemModstamp\",\"di.column.talendType\":\"id_Date\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"SystemModstamp\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsArchived\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsArchived\",\"talend.field.dbColumnName\":\"IsArchived\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsArchived\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CallDurationInSeconds\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CallDurationInSeconds\",\"talend.field.dbColumnName\":\"CallDurationInSeconds\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CallDurationInSeconds\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CallType\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CallType\",\"talend.field.dbColumnName\":\"CallType\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CallType\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CallDisposition\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CallDisposition\",\"talend.field.dbColumnName\":\"CallDisposition\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CallDisposition\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CallObject\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"CallObject\",\"talend.field.dbColumnName\":\"CallObject\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CallObject\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"ReminderDateTime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"ReminderDateTime\",\"talend.field.dbColumnName\":\"ReminderDateTime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"ReminderDateTime\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsReminderSet\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsReminderSet\",\"talend.field.dbColumnName\":\"IsReminderSet\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsReminderSet\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceActivityId\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceActivityId\",\"talend.field.dbColumnName\":\"RecurrenceActivityId\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceActivityId\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"IsRecurrence\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"IsRecurrence\",\"talend.field.dbColumnName\":\"IsRecurrence\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"IsRecurrence\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceStartDateOnly\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceStartDateOnly\",\"talend.field.dbColumnName\":\"RecurrenceStartDateOnly\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceStartDateOnly\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceEndDateOnly\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceEndDateOnly\",\"talend.field.dbColumnName\":\"RecurrenceEndDateOnly\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceEndDateOnly\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceTimeZoneSidKey\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceTimeZoneSidKey\",\"talend.field.dbColumnName\":\"RecurrenceTimeZoneSidKey\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceTimeZoneSidKey\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceType\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceType\",\"talend.field.dbColumnName\":\"RecurrenceType\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceType\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceInterval\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceInterval\",\"talend.field.dbColumnName\":\"RecurrenceInterval\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceInterval\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceDayOfWeekMask\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceDayOfWeekMask\",\"talend.field.dbColumnName\":\"RecurrenceDayOfWeekMask\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceDayOfWeekMask\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceDayOfMonth\",\"type\":[\"int\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceDayOfMonth\",\"talend.field.dbColumnName\":\"RecurrenceDayOfMonth\",\"di.column.talendType\":\"id_Integer\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceDayOfMonth\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceInstance\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceInstance\",\"talend.field.dbColumnName\":\"RecurrenceInstance\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceInstance\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceMonthOfYear\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceMonthOfYear\",\"talend.field.dbColumnName\":\"RecurrenceMonthOfYear\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceMonthOfYear\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"RecurrenceRegeneratedType\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"RecurrenceRegeneratedType\",\"talend.field.dbColumnName\":\"RecurrenceRegeneratedType\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"RecurrenceRegeneratedType\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"TaskSubtype\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"TaskSubtype\",\"talend.field.dbColumnName\":\"TaskSubtype\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"40\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"TaskSubtype\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"CompletedDateTime\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"CompletedDateTime\",\"talend.field.dbColumnName\":\"CompletedDateTime\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"CompletedDateTime\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Contact_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Contact_Type__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Contact_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Contact_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__CALL_UNIQUE_ID__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__CALL_UNIQUE_ID__c\",\"talend.field.dbColumnName\":\"rcsfl__CALL_UNIQUE_ID__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__CALL_UNIQUE_ID__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__CALL_UUID__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__CALL_UUID__c\",\"talend.field.dbColumnName\":\"rcsfl__CALL_UUID__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__CALL_UUID__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__Call_Recording__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__Call_Recording__c\",\"talend.field.dbColumnName\":\"rcsfl__Call_Recording__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"1300\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__Call_Recording__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__RC_Logging_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__RC_Logging_Type__c\",\"talend.field.dbColumnName\":\"rcsfl__RC_Logging_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__RC_Logging_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__Recording_Information__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__Recording_Information__c\",\"talend.field.dbColumnName\":\"rcsfl__Recording_Information__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__Recording_Information__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__external_whoid__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__external_whoid__c\",\"talend.field.dbColumnName\":\"rcsfl__external_whoid__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__external_whoid__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"rcsfl__key__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"rcsfl__key__c\",\"talend.field.dbColumnName\":\"rcsfl__key__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"rcsfl__key__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Academic_Curriculum__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Academic_Curriculum__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Academic_Curriculum__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Academic_Curriculum__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Academic_Integrity_Conduct__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Academic_Integrity_Conduct__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Academic_Integrity_Conduct__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Academic_Integrity_Conduct__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_At_Risk_Students__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_At_Risk_Students__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_At_Risk_Students__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_At_Risk_Students__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Automated_success_alert__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Automated_success_alert__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Automated_success_alert__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Automated_success_alert__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Behavioral_issues_conduct__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Behavioral_issues_conduct__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Behavioral_issues_conduct__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Behavioral_issues_conduct__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Career_support__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Career_support__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Career_support__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Career_support__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Concern_Issue__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Concern_Issue__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Concern_Issue__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Concern_Issue__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Course_Related__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Course_Related__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Course_Related__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Course_Related__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Disability_support__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Disability_support__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Disability_support__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Disability_support__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Encouragement__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Encouragement__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Encouragement__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Encouragement__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Faculty_Related__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Faculty_Related__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Faculty_Related__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Faculty_Related__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Fieldwork_Practicum_placement__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Fieldwork_Practicum_placement__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Fieldwork_Practicum_placement__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Fieldwork_Practicum_placement__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Financial__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Financial__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Financial__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Financial__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Hold_on_Account__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Hold_on_Account__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Hold_on_Account__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Hold_on_Account__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Orientation__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Orientation__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Orientation__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Orientation__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Proactive_Outreach__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Proactive_Outreach__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Proactive_Outreach__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Proactive_Outreach__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Registration__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Registration__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Registration__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Registration__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Student_Wellness__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Student_Wellness__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Student_Wellness__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Student_Wellness__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Technology_Related__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Technology_Related__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Technology_Related__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Technology_Related__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Time_management__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Time_management__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Time_management__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Time_management__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Tutoring__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Tutoring__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Tutoring__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Tutoring__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Urgent__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Urgent__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Urgent__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Urgent__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Withdrawal_LOA_Deferral__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Withdrawal_LOA_Deferral__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Withdrawal_LOA_Deferral__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Withdrawal_LOA_Deferral__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Category__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Category__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Category__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Category__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Completed_Date_Time__c\",\"type\":[{\"type\":\"long\",\"java-class\":\"java.util.Date\"},\"null\"],\"di.table.comment\":\"\",\"di.prop.di.date.noLogicalType\":\"true\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Completed_Date_Time__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Completed_Date_Time__c\",\"di.column.talendType\":\"id_Date\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"yyyy-MM-dd'T'HH:mm:ss'.000Z'\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Completed_Date_Time__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Academic_Advising__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Academic_Advising__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Academic_Advising__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Academic_Advising__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Deposit__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Deposit__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Deposit__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Deposit__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Immersion__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Immersion__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Immersion__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Immersion__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Library_related__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Library_related__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Library_related__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Library_related__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Student_Complaint_Issue__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Student_Complaint_Issue__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Student_Complaint_Issue__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Student_Complaint_Issue__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Student_Data_related__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Student_Data_related__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Student_Data_related__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Student_Data_related__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Student_Id_Card__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Student_Id_Card__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Student_Id_Card__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Student_Id_Card__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Cat_Transcript__c\",\"type\":\"boolean\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Cat_Transcript__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Cat_Transcript__c\",\"di.column.talendType\":\"id_Boolean\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Cat_Transcript__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"NoodleCRM__Result__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"NoodleCRM__Result__c\",\"talend.field.dbColumnName\":\"NoodleCRM__Result__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"NoodleCRM__Result__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"MAIN\",\"di.table.label\":\"Task\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceInput_11_1_fisrt sst_tSalesforceInput_11_1_fisrt = new SchemaSettingTool_tSalesforceInput_11_1_fisrt();
 		                    
 		                    props_tSalesforceInput_11.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceInput_11_1_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_11.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceInput_11 = props_tSalesforceInput_11.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceInput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceInput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceInput_11.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceInput_11);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_11.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceInput_11 = props_tSalesforceInput_11.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceInput_11 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_11 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceInput_11 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceInput_11.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceInput_11);
        }
    }
globalMap.put("tSalesforceInput_11_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceInput_11);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.2");
java.net.URL mappings_url_tSalesforceInput_11= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceInput_11_MAPPINGS_URL", mappings_url_tSalesforceInput_11);

org.talend.components.api.container.RuntimeContainer container_tSalesforceInput_11 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceInput_11";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceInput_11 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceInput_11 = null;
topology_tSalesforceInput_11 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceInput_11 = def_tSalesforceInput_11.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceInput_11, topology_tSalesforceInput_11);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceInput_11 = def_tSalesforceInput_11.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceInput_11 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceInput_11.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceInput_11 = componentRuntime_tSalesforceInput_11.initialize(container_tSalesforceInput_11, props_tSalesforceInput_11);

if (initVr_tSalesforceInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceInput_11.getMessage());
}

if(componentRuntime_tSalesforceInput_11 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceInput_11 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceInput_11;
	compDriverInitialization_tSalesforceInput_11.runAtDriver(container_tSalesforceInput_11);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceInput_11 = null;
if(componentRuntime_tSalesforceInput_11 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceInput_11 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceInput_11;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceInput_11 = sourceOrSink_tSalesforceInput_11.validate(container_tSalesforceInput_11);
	if (vr_tSalesforceInput_11.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceInput_11.getMessage());
	}
}

    org.talend.components.api.component.runtime.Source source_tSalesforceInput_11 =
            (org.talend.components.api.component.runtime.Source)sourceOrSink_tSalesforceInput_11;
    org.talend.components.api.component.runtime.Reader reader_tSalesforceInput_11 =
            source_tSalesforceInput_11.createReader(container_tSalesforceInput_11);
	reader_tSalesforceInput_11 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tSalesforceInput_11, container_tSalesforceInput_11);

        boolean multi_output_is_allowed_tSalesforceInput_11 = false;
        org.talend.components.api.component.Connector c_tSalesforceInput_11 = null;
        for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceInput_11.getAvailableConnectors(null, true)) {
            if (currentConnector.getName().equals("MAIN")) {
                c_tSalesforceInput_11 = currentConnector;
            }

            if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                multi_output_is_allowed_tSalesforceInput_11 = true;
            }
        }
        org.apache.avro.Schema schema_tSalesforceInput_11 = props_tSalesforceInput_11.getSchema(c_tSalesforceInput_11, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceInput_11 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tSalesforceInput_11, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceInput_11 = null;

    // Iterate through the incoming data.
    boolean available_tSalesforceInput_11 = reader_tSalesforceInput_11.start();

    resourceMap.put("reader_tSalesforceInput_11", reader_tSalesforceInput_11);

    for (; available_tSalesforceInput_11; available_tSalesforceInput_11 = reader_tSalesforceInput_11.advance()) {
    	nb_line_tSalesforceInput_11++;

    	
        if (multi_output_is_allowed_tSalesforceInput_11) {
                row11 = null;

        }

        try {
            Object data_tSalesforceInput_11 = reader_tSalesforceInput_11.getCurrent();

                if(multi_output_is_allowed_tSalesforceInput_11) {
                    row11 = new row11Struct();
                }

        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceInput_11 == null) {
            factory_tSalesforceInput_11 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tSalesforceInput_11.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceInput_11.setWrapped(factory_tSalesforceInput_11.convertToAvro(data_tSalesforceInput_11));
                Object columnValue_0_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(0);
                        row11.Id = (String) (columnValue_0_tSalesforceInput_11);
                Object columnValue_1_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(1);
                        row11.WhoId = (String) (columnValue_1_tSalesforceInput_11);
                Object columnValue_2_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(2);
                        row11.WhatId = (String) (columnValue_2_tSalesforceInput_11);
                Object columnValue_3_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(3);
                        row11.Subject = (String) (columnValue_3_tSalesforceInput_11);
                Object columnValue_4_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(4);
                        row11.ActivityDate = (java.util.Date) (columnValue_4_tSalesforceInput_11);
                Object columnValue_5_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(5);
                        row11.Status = (String) (columnValue_5_tSalesforceInput_11);
                Object columnValue_6_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(6);
                        row11.Priority = (String) (columnValue_6_tSalesforceInput_11);
                Object columnValue_7_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(7);
                    if (columnValue_7_tSalesforceInput_11 == null) {
                        row11.IsHighPriority = false;
                    } else {
                            row11.IsHighPriority = (boolean) (columnValue_7_tSalesforceInput_11);
                    }
                Object columnValue_8_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(8);
                        row11.OwnerId = (String) (columnValue_8_tSalesforceInput_11);
                Object columnValue_9_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(9);
                        row11.Description = (String) (columnValue_9_tSalesforceInput_11);
                Object columnValue_10_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(10);
                    if (columnValue_10_tSalesforceInput_11 == null) {
                        row11.IsDeleted = false;
                    } else {
                            row11.IsDeleted = (boolean) (columnValue_10_tSalesforceInput_11);
                    }
                Object columnValue_11_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(11);
                        row11.AccountId = (String) (columnValue_11_tSalesforceInput_11);
                Object columnValue_12_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(12);
                    if (columnValue_12_tSalesforceInput_11 == null) {
                        row11.IsClosed = false;
                    } else {
                            row11.IsClosed = (boolean) (columnValue_12_tSalesforceInput_11);
                    }
                Object columnValue_13_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(13);
                        row11.CreatedDate = (java.util.Date) (columnValue_13_tSalesforceInput_11);
                Object columnValue_14_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(14);
                        row11.CreatedById = (String) (columnValue_14_tSalesforceInput_11);
                Object columnValue_15_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(15);
                        row11.LastModifiedDate = (java.util.Date) (columnValue_15_tSalesforceInput_11);
                Object columnValue_16_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(16);
                        row11.LastModifiedById = (String) (columnValue_16_tSalesforceInput_11);
                Object columnValue_17_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(17);
                        row11.SystemModstamp = (java.util.Date) (columnValue_17_tSalesforceInput_11);
                Object columnValue_18_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(18);
                    if (columnValue_18_tSalesforceInput_11 == null) {
                        row11.IsArchived = false;
                    } else {
                            row11.IsArchived = (boolean) (columnValue_18_tSalesforceInput_11);
                    }
                Object columnValue_19_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(19);
                        row11.CallDurationInSeconds = (Integer) (columnValue_19_tSalesforceInput_11);
                Object columnValue_20_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(20);
                        row11.CallType = (String) (columnValue_20_tSalesforceInput_11);
                Object columnValue_21_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(21);
                        row11.CallDisposition = (String) (columnValue_21_tSalesforceInput_11);
                Object columnValue_22_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(22);
                        row11.CallObject = (String) (columnValue_22_tSalesforceInput_11);
                Object columnValue_23_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(23);
                        row11.ReminderDateTime = (java.util.Date) (columnValue_23_tSalesforceInput_11);
                Object columnValue_24_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(24);
                    if (columnValue_24_tSalesforceInput_11 == null) {
                        row11.IsReminderSet = false;
                    } else {
                            row11.IsReminderSet = (boolean) (columnValue_24_tSalesforceInput_11);
                    }
                Object columnValue_25_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(25);
                        row11.RecurrenceActivityId = (String) (columnValue_25_tSalesforceInput_11);
                Object columnValue_26_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(26);
                    if (columnValue_26_tSalesforceInput_11 == null) {
                        row11.IsRecurrence = false;
                    } else {
                            row11.IsRecurrence = (boolean) (columnValue_26_tSalesforceInput_11);
                    }
                Object columnValue_27_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(27);
                        row11.RecurrenceStartDateOnly = (java.util.Date) (columnValue_27_tSalesforceInput_11);
                Object columnValue_28_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(28);
                        row11.RecurrenceEndDateOnly = (java.util.Date) (columnValue_28_tSalesforceInput_11);
                Object columnValue_29_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(29);
                        row11.RecurrenceTimeZoneSidKey = (String) (columnValue_29_tSalesforceInput_11);
                Object columnValue_30_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(30);
                        row11.RecurrenceType = (String) (columnValue_30_tSalesforceInput_11);
                Object columnValue_31_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(31);
                        row11.RecurrenceInterval = (Integer) (columnValue_31_tSalesforceInput_11);
                Object columnValue_32_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(32);
                        row11.RecurrenceDayOfWeekMask = (Integer) (columnValue_32_tSalesforceInput_11);
                Object columnValue_33_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(33);
                        row11.RecurrenceDayOfMonth = (Integer) (columnValue_33_tSalesforceInput_11);
                Object columnValue_34_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(34);
                        row11.RecurrenceInstance = (String) (columnValue_34_tSalesforceInput_11);
                Object columnValue_35_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(35);
                        row11.RecurrenceMonthOfYear = (String) (columnValue_35_tSalesforceInput_11);
                Object columnValue_36_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(36);
                        row11.RecurrenceRegeneratedType = (String) (columnValue_36_tSalesforceInput_11);
                Object columnValue_37_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(37);
                        row11.TaskSubtype = (String) (columnValue_37_tSalesforceInput_11);
                Object columnValue_38_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(38);
                        row11.CompletedDateTime = (java.util.Date) (columnValue_38_tSalesforceInput_11);
                Object columnValue_39_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(39);
                        row11.NoodleCRM__Contact_Type__c = (String) (columnValue_39_tSalesforceInput_11);
                Object columnValue_40_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(40);
                        row11.rcsfl__CALL_UNIQUE_ID__c = (String) (columnValue_40_tSalesforceInput_11);
                Object columnValue_41_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(41);
                        row11.rcsfl__CALL_UUID__c = (String) (columnValue_41_tSalesforceInput_11);
                Object columnValue_42_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(42);
                        row11.rcsfl__Call_Recording__c = (String) (columnValue_42_tSalesforceInput_11);
                Object columnValue_43_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(43);
                        row11.rcsfl__RC_Logging_Type__c = (String) (columnValue_43_tSalesforceInput_11);
                Object columnValue_44_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(44);
                        row11.rcsfl__Recording_Information__c = (String) (columnValue_44_tSalesforceInput_11);
                Object columnValue_45_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(45);
                        row11.rcsfl__external_whoid__c = (String) (columnValue_45_tSalesforceInput_11);
                Object columnValue_46_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(46);
                        row11.rcsfl__key__c = (String) (columnValue_46_tSalesforceInput_11);
                Object columnValue_47_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(47);
                    if (columnValue_47_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Academic_Curriculum__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Academic_Curriculum__c = (boolean) (columnValue_47_tSalesforceInput_11);
                    }
                Object columnValue_48_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(48);
                    if (columnValue_48_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Academic_Integrity_Conduct__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Academic_Integrity_Conduct__c = (boolean) (columnValue_48_tSalesforceInput_11);
                    }
                Object columnValue_49_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(49);
                    if (columnValue_49_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_At_Risk_Students__c = false;
                    } else {
                            row11.NoodleCRM__Cat_At_Risk_Students__c = (boolean) (columnValue_49_tSalesforceInput_11);
                    }
                Object columnValue_50_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(50);
                    if (columnValue_50_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Automated_success_alert__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Automated_success_alert__c = (boolean) (columnValue_50_tSalesforceInput_11);
                    }
                Object columnValue_51_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(51);
                    if (columnValue_51_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Behavioral_issues_conduct__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Behavioral_issues_conduct__c = (boolean) (columnValue_51_tSalesforceInput_11);
                    }
                Object columnValue_52_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(52);
                    if (columnValue_52_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Career_support__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Career_support__c = (boolean) (columnValue_52_tSalesforceInput_11);
                    }
                Object columnValue_53_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(53);
                    if (columnValue_53_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Concern_Issue__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Concern_Issue__c = (boolean) (columnValue_53_tSalesforceInput_11);
                    }
                Object columnValue_54_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(54);
                    if (columnValue_54_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Course_Related__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Course_Related__c = (boolean) (columnValue_54_tSalesforceInput_11);
                    }
                Object columnValue_55_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(55);
                    if (columnValue_55_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Disability_support__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Disability_support__c = (boolean) (columnValue_55_tSalesforceInput_11);
                    }
                Object columnValue_56_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(56);
                    if (columnValue_56_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Encouragement__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Encouragement__c = (boolean) (columnValue_56_tSalesforceInput_11);
                    }
                Object columnValue_57_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(57);
                    if (columnValue_57_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Faculty_Related__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Faculty_Related__c = (boolean) (columnValue_57_tSalesforceInput_11);
                    }
                Object columnValue_58_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(58);
                    if (columnValue_58_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Fieldwork_Practicum_placement__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Fieldwork_Practicum_placement__c = (boolean) (columnValue_58_tSalesforceInput_11);
                    }
                Object columnValue_59_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(59);
                    if (columnValue_59_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Financial__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Financial__c = (boolean) (columnValue_59_tSalesforceInput_11);
                    }
                Object columnValue_60_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(60);
                    if (columnValue_60_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Hold_on_Account__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Hold_on_Account__c = (boolean) (columnValue_60_tSalesforceInput_11);
                    }
                Object columnValue_61_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(61);
                    if (columnValue_61_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Orientation__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Orientation__c = (boolean) (columnValue_61_tSalesforceInput_11);
                    }
                Object columnValue_62_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(62);
                    if (columnValue_62_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Proactive_Outreach__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Proactive_Outreach__c = (boolean) (columnValue_62_tSalesforceInput_11);
                    }
                Object columnValue_63_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(63);
                    if (columnValue_63_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Registration__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Registration__c = (boolean) (columnValue_63_tSalesforceInput_11);
                    }
                Object columnValue_64_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(64);
                    if (columnValue_64_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Student_Wellness__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Student_Wellness__c = (boolean) (columnValue_64_tSalesforceInput_11);
                    }
                Object columnValue_65_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(65);
                    if (columnValue_65_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Technology_Related__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Technology_Related__c = (boolean) (columnValue_65_tSalesforceInput_11);
                    }
                Object columnValue_66_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(66);
                    if (columnValue_66_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Time_management__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Time_management__c = (boolean) (columnValue_66_tSalesforceInput_11);
                    }
                Object columnValue_67_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(67);
                    if (columnValue_67_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Tutoring__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Tutoring__c = (boolean) (columnValue_67_tSalesforceInput_11);
                    }
                Object columnValue_68_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(68);
                    if (columnValue_68_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Urgent__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Urgent__c = (boolean) (columnValue_68_tSalesforceInput_11);
                    }
                Object columnValue_69_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(69);
                    if (columnValue_69_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c = (boolean) (columnValue_69_tSalesforceInput_11);
                    }
                Object columnValue_70_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(70);
                        row11.NoodleCRM__Category__c = (String) (columnValue_70_tSalesforceInput_11);
                Object columnValue_71_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(71);
                        row11.NoodleCRM__Completed_Date_Time__c = (java.util.Date) (columnValue_71_tSalesforceInput_11);
                Object columnValue_72_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(72);
                    if (columnValue_72_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Academic_Advising__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Academic_Advising__c = (boolean) (columnValue_72_tSalesforceInput_11);
                    }
                Object columnValue_73_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(73);
                    if (columnValue_73_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Deposit__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Deposit__c = (boolean) (columnValue_73_tSalesforceInput_11);
                    }
                Object columnValue_74_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(74);
                    if (columnValue_74_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Immersion__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Immersion__c = (boolean) (columnValue_74_tSalesforceInput_11);
                    }
                Object columnValue_75_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(75);
                    if (columnValue_75_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Library_related__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Library_related__c = (boolean) (columnValue_75_tSalesforceInput_11);
                    }
                Object columnValue_76_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(76);
                    if (columnValue_76_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Student_Complaint_Issue__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Student_Complaint_Issue__c = (boolean) (columnValue_76_tSalesforceInput_11);
                    }
                Object columnValue_77_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(77);
                    if (columnValue_77_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Student_Data_related__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Student_Data_related__c = (boolean) (columnValue_77_tSalesforceInput_11);
                    }
                Object columnValue_78_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(78);
                    if (columnValue_78_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Student_Id_Card__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Student_Id_Card__c = (boolean) (columnValue_78_tSalesforceInput_11);
                    }
                Object columnValue_79_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(79);
                    if (columnValue_79_tSalesforceInput_11 == null) {
                        row11.NoodleCRM__Cat_Transcript__c = false;
                    } else {
                            row11.NoodleCRM__Cat_Transcript__c = (boolean) (columnValue_79_tSalesforceInput_11);
                    }
                Object columnValue_80_tSalesforceInput_11 = outgoingEnforcer_tSalesforceInput_11.get(80);
                        row11.NoodleCRM__Result__c = (String) (columnValue_80_tSalesforceInput_11);
        } catch (org.talend.components.api.exception.DataRejectException e_tSalesforceInput_11) {
        	java.util.Map<String,Object> info_tSalesforceInput_11 = e_tSalesforceInput_11.getRejectInfo();
            	//TODO use a method instead of getting method by the special key "error/errorMessage"
            	Object errorMessage_tSalesforceInput_11 = null;
            	if(info_tSalesforceInput_11.containsKey("error")){
            		errorMessage_tSalesforceInput_11 = info_tSalesforceInput_11.get("error");
        		}else if(info_tSalesforceInput_11.containsKey("errorMessage")){
            		errorMessage_tSalesforceInput_11 = info_tSalesforceInput_11.get("errorMessage");
        		}else{
        			errorMessage_tSalesforceInput_11 = "Rejected but error message missing";
        		}
        		errorMessage_tSalesforceInput_11 = "Row "+ nb_line_tSalesforceInput_11 + ": "+errorMessage_tSalesforceInput_11;
    			System.err.println(errorMessage_tSalesforceInput_11);
            	// If the record is reject, the main line record should put NULL
            	row11 = null;
    }
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceInput_11 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceInput_11 = null;


 



/**
 * [tSalesforceInput_11 begin ] stop
 */
	
	/**
	 * [tSalesforceInput_11 main ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_11";

	


 


	tos_count_tSalesforceInput_11++;

/**
 * [tSalesforceInput_11 main ] stop
 */
	
	/**
	 * [tSalesforceInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_11";

	


 



/**
 * [tSalesforceInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row11");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_11 = false;
		  boolean mainRowRejected_tMap_11 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

out10 = null;


// # Output table : 'out10'
out10_tmp.Id = row11.Id ;
out10_tmp.WhoId = row11.WhoId ;
out10_tmp.WhatId = row11.WhatId ;
out10_tmp.WhoCount = null;
out10_tmp.WhatCount = null;
out10_tmp.Subject = row11.Subject ;
out10_tmp.ActivityDate = (row11.ActivityDate == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.ActivityDate))).getTime())/1000 ;
out10_tmp.Status = row11.Status ;
out10_tmp.Priority = row11.Priority ;
out10_tmp.IsHighPriority = row11.IsHighPriority ;
out10_tmp.OwnerId = row11.OwnerId ;
out10_tmp.Description = (row11.Description == null)
?
null
:((StringHandling.EREPLACE(StringHandling.EREPLACE(row11.Description ,"\n",""),"\r","" )).replaceAll("\\p{C}", "")).replaceAll("[^\\x00-\\x7F]", "") ;
out10_tmp.IsDeleted = row11.IsDeleted ;
out10_tmp.AccountId = row11.AccountId ;
out10_tmp.IsClosed = row11.IsClosed ;
out10_tmp.CreatedDate = (row11.CreatedDate == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.CreatedDate))).getTime())/1000 ;
out10_tmp.CreatedById = row11.CreatedById ;
out10_tmp.LastModifiedDate = (row11.LastModifiedDate == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.LastModifiedDate))).getTime())/1000 ;
out10_tmp.LastModifiedById = row11.LastModifiedById ;
out10_tmp.SystemModstamp = (row11.SystemModstamp == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.SystemModstamp))).getTime())/1000 ;
out10_tmp.IsArchived = row11.IsArchived ;
out10_tmp.CallDurationInSeconds = row11.CallDurationInSeconds ;
out10_tmp.CallType = row11.CallType ;
out10_tmp.CallDisposition = row11.CallDisposition ;
out10_tmp.CallObject = row11.CallObject ;
out10_tmp.ReminderDateTime = (row11.ReminderDateTime == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.ReminderDateTime))).getTime())/1000 ;
out10_tmp.IsReminderSet = row11.IsReminderSet ;
out10_tmp.RecurrenceActivityId = row11.RecurrenceActivityId ;
out10_tmp.IsRecurrence = row11.IsRecurrence ;
out10_tmp.RecurrenceStartDateOnly = (row11.RecurrenceStartDateOnly == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.RecurrenceStartDateOnly))).getTime())/1000 ;
out10_tmp.RecurrenceEndDateOnly = (row11.RecurrenceEndDateOnly == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.RecurrenceEndDateOnly))).getTime())/1000 ;
out10_tmp.RecurrenceTimeZoneSidKey = row11.RecurrenceTimeZoneSidKey ;
out10_tmp.RecurrenceType = row11.RecurrenceType ;
out10_tmp.RecurrenceInterval = row11.RecurrenceInterval ;
out10_tmp.RecurrenceDayOfWeekMask = row11.RecurrenceDayOfWeekMask ;
out10_tmp.RecurrenceDayOfMonth = row11.RecurrenceDayOfMonth ;
out10_tmp.RecurrenceInstance = row11.RecurrenceInstance ;
out10_tmp.RecurrenceMonthOfYear = row11.RecurrenceMonthOfYear ;
out10_tmp.RecurrenceRegeneratedType = row11.RecurrenceRegeneratedType ;
out10_tmp.TaskSubtype = row11.TaskSubtype ;
out10_tmp.CompletedDateTime = (row11.CompletedDateTime == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.CompletedDateTime))).getTime())/1000 ;
out10_tmp.NoodleCRM__Contact_Type__c = row11.NoodleCRM__Contact_Type__c ;
out10_tmp.rcsfl__CALL_UNIQUE_ID__c = row11.rcsfl__CALL_UNIQUE_ID__c ;
out10_tmp.rcsfl__CALL_UUID__c = row11.rcsfl__CALL_UUID__c ;
out10_tmp.rcsfl__Call_Recording__c = row11.rcsfl__Call_Recording__c ;
out10_tmp.rcsfl__RC_Logging_Type__c = row11.rcsfl__RC_Logging_Type__c ;
out10_tmp.rcsfl__Recording_Information__c = row11.rcsfl__Recording_Information__c ;
out10_tmp.rcsfl__external_whoid__c = row11.rcsfl__external_whoid__c ;
out10_tmp.rcsfl__key__c = row11.rcsfl__key__c ;
out10_tmp.CreatedDate__c = null;
out10_tmp.Dialpad__CallId__c = null;
out10_tmp.Dialpad__PhoneNumber__c = null;
out10_tmp.Dialpad__TimeInitiated__c = null;
out10_tmp.Dialpad__Timestamp__c = null;
out10_tmp.NoodleCRM__Cat_Academic_Curriculum__c = row11.NoodleCRM__Cat_Academic_Curriculum__c ;
out10_tmp.NoodleCRM__Cat_Academic_Integrity_Conduct__c = row11.NoodleCRM__Cat_Academic_Integrity_Conduct__c ;
out10_tmp.NoodleCRM__Cat_At_Risk_Students__c = row11.NoodleCRM__Cat_At_Risk_Students__c ;
out10_tmp.NoodleCRM__Cat_Automated_success_alert__c = row11.NoodleCRM__Cat_Automated_success_alert__c ;
out10_tmp.NoodleCRM__Cat_Behavioral_issues_conduct__c = row11.NoodleCRM__Cat_Behavioral_issues_conduct__c ;
out10_tmp.NoodleCRM__Cat_Career_support__c = row11.NoodleCRM__Cat_Career_support__c ;
out10_tmp.NoodleCRM__Cat_Concern_Issue__c = row11.NoodleCRM__Cat_Concern_Issue__c ;
out10_tmp.NoodleCRM__Cat_Course_Related__c = row11.NoodleCRM__Cat_Course_Related__c ;
out10_tmp.NoodleCRM__Cat_Disability_support__c = row11.NoodleCRM__Cat_Disability_support__c ;
out10_tmp.NoodleCRM__Cat_Encouragement__c = row11.NoodleCRM__Cat_Encouragement__c ;
out10_tmp.NoodleCRM__Cat_Faculty_Related__c = row11.NoodleCRM__Cat_Faculty_Related__c ;
out10_tmp.NoodleCRM__Cat_Fieldwork_Practicum_placement__c = row11.NoodleCRM__Cat_Fieldwork_Practicum_placement__c ;
out10_tmp.NoodleCRM__Cat_Financial__c = row11.NoodleCRM__Cat_Financial__c ;
out10_tmp.NoodleCRM__Cat_Hold_on_Account__c = row11.NoodleCRM__Cat_Hold_on_Account__c ;
out10_tmp.NoodleCRM__Cat_Orientation__c = row11.NoodleCRM__Cat_Orientation__c ;
out10_tmp.NoodleCRM__Cat_Proactive_Outreach__c = row11.NoodleCRM__Cat_Proactive_Outreach__c ;
out10_tmp.NoodleCRM__Cat_Registration__c = row11.NoodleCRM__Cat_Registration__c ;
out10_tmp.NoodleCRM__Cat_Student_Wellness__c = row11.NoodleCRM__Cat_Student_Wellness__c ;
out10_tmp.NoodleCRM__Cat_Technology_Related__c = row11.NoodleCRM__Cat_Technology_Related__c ;
out10_tmp.NoodleCRM__Cat_Time_management__c = row11.NoodleCRM__Cat_Time_management__c ;
out10_tmp.NoodleCRM__Cat_Tutoring__c = row11.NoodleCRM__Cat_Tutoring__c ;
out10_tmp.NoodleCRM__Cat_Urgent__c = row11.NoodleCRM__Cat_Urgent__c ;
out10_tmp.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c = row11.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c ;
out10_tmp.NoodleCRM__Category__c = row11.NoodleCRM__Category__c ;
out10_tmp.NoodleCRM__Completed_Date_Time__c = (row11.NoodleCRM__Completed_Date_Time__c == null)
?
null
:(TalendDate.parseDate("yyyy-MM-dd HH:mm:ss",(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss",row11.NoodleCRM__Completed_Date_Time__c))).getTime())/1000 ;
out10_tmp.NoodleCRM__Cat_Academic_Advising__c = row11.NoodleCRM__Cat_Academic_Advising__c ;
out10_tmp.NoodleCRM__Cat_Deposit__c = row11.NoodleCRM__Cat_Deposit__c ;
out10_tmp.NoodleCRM__Cat_Immersion__c = row11.NoodleCRM__Cat_Immersion__c ;
out10_tmp.NoodleCRM__Cat_Library_related__c = row11.NoodleCRM__Cat_Library_related__c ;
out10_tmp.NoodleCRM__Cat_Student_Complaint_Issue__c = row11.NoodleCRM__Cat_Student_Complaint_Issue__c ;
out10_tmp.NoodleCRM__Cat_Student_Data_related__c = row11.NoodleCRM__Cat_Student_Data_related__c ;
out10_tmp.NoodleCRM__Cat_Student_Id_Card__c = row11.NoodleCRM__Cat_Student_Id_Card__c ;
out10_tmp.NoodleCRM__Cat_Transcript__c = row11.NoodleCRM__Cat_Transcript__c ;
out10_tmp.Upload_Id__c = null;
out10_tmp.NoodleCRM__Result__c = row11.NoodleCRM__Result__c ;
out10 = out10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "out10"
if(out10 != null) { 



	
	/**
	 * [tWriteJSONField_10_Out main ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"out10");
					}
					

	if(txf_tWriteJSONField_10_Out.getLastException()!=null) {
		currentComponent = txf_tWriteJSONField_10_Out.getCurrentComponent();
		throw txf_tWriteJSONField_10_Out.getLastException();
	}
	
	if(txf_tWriteJSONField_10_Out.getLastError()!=null) {
		throw txf_tWriteJSONField_10_Out.getLastError();
	}
	nb_line_tWriteJSONField_10_Out++;
	valueMap_tWriteJSONField_10_Out.clear();
	arraysValueMap_tWriteJSONField_10_Out.clear();
	valueMap_tWriteJSONField_10_Out.put("Id",
	(
            out10.Id.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Id",
	(
            out10.Id.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("WhoId",
	(
		out10.WhoId != null?
            out10.WhoId.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("WhoId",
	(
		out10.WhoId != null?
            out10.WhoId.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("WhatId",
	(
		out10.WhatId != null?
            out10.WhatId.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("WhatId",
	(
		out10.WhatId != null?
            out10.WhatId.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("WhoCount",
	(
		out10.WhoCount != null?
            out10.WhoCount.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("WhoCount",
	(
		out10.WhoCount != null?
            out10.WhoCount.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("WhatCount",
	(
		out10.WhatCount != null?
            out10.WhatCount.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("WhatCount",
	(
		out10.WhatCount != null?
            out10.WhatCount.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("Subject",
	(
		out10.Subject != null?
            out10.Subject.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Subject",
	(
		out10.Subject != null?
            out10.Subject.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("ActivityDate",
	(
		out10.ActivityDate != null?
            out10.ActivityDate.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("ActivityDate",
	(
		out10.ActivityDate != null?
            out10.ActivityDate.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("Status",
	(
            out10.Status.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Status",
	(
            out10.Status.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("Priority",
	(
            out10.Priority.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Priority",
	(
            out10.Priority.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("IsHighPriority",
	(
            String.valueOf(out10.IsHighPriority)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsHighPriority",
	(
            String.valueOf(out10.IsHighPriority)
		));
	valueMap_tWriteJSONField_10_Out.put("OwnerId",
	(
            out10.OwnerId.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("OwnerId",
	(
            out10.OwnerId.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("Description",
	(
		out10.Description != null?
            out10.Description.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Description",
	(
		out10.Description != null?
            out10.Description.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("IsDeleted",
	(
            String.valueOf(out10.IsDeleted)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsDeleted",
	(
            String.valueOf(out10.IsDeleted)
		));
	valueMap_tWriteJSONField_10_Out.put("AccountId",
	(
		out10.AccountId != null?
            out10.AccountId.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("AccountId",
	(
		out10.AccountId != null?
            out10.AccountId.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("IsClosed",
	(
            String.valueOf(out10.IsClosed)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsClosed",
	(
            String.valueOf(out10.IsClosed)
		));
	valueMap_tWriteJSONField_10_Out.put("CreatedDate",
	(
            String.valueOf(out10.CreatedDate)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CreatedDate",
	(
            String.valueOf(out10.CreatedDate)
		));
	valueMap_tWriteJSONField_10_Out.put("CreatedById",
	(
            out10.CreatedById.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CreatedById",
	(
            out10.CreatedById.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("LastModifiedDate",
	(
            String.valueOf(out10.LastModifiedDate)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("LastModifiedDate",
	(
            String.valueOf(out10.LastModifiedDate)
		));
	valueMap_tWriteJSONField_10_Out.put("LastModifiedById",
	(
            out10.LastModifiedById.toString()
		));
	arraysValueMap_tWriteJSONField_10_Out.put("LastModifiedById",
	(
            out10.LastModifiedById.toString()
		));
	valueMap_tWriteJSONField_10_Out.put("SystemModstamp",
	(
            String.valueOf(out10.SystemModstamp)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("SystemModstamp",
	(
            String.valueOf(out10.SystemModstamp)
		));
	valueMap_tWriteJSONField_10_Out.put("IsArchived",
	(
            String.valueOf(out10.IsArchived)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsArchived",
	(
            String.valueOf(out10.IsArchived)
		));
	valueMap_tWriteJSONField_10_Out.put("CallDurationInSeconds",
	(
		out10.CallDurationInSeconds != null?
            out10.CallDurationInSeconds.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CallDurationInSeconds",
	(
		out10.CallDurationInSeconds != null?
            out10.CallDurationInSeconds.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("CallType",
	(
		out10.CallType != null?
            out10.CallType.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CallType",
	(
		out10.CallType != null?
            out10.CallType.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("CallDisposition",
	(
		out10.CallDisposition != null?
            out10.CallDisposition.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CallDisposition",
	(
		out10.CallDisposition != null?
            out10.CallDisposition.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("CallObject",
	(
		out10.CallObject != null?
            out10.CallObject.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CallObject",
	(
		out10.CallObject != null?
            out10.CallObject.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("ReminderDateTime",
	(
		out10.ReminderDateTime != null?
            out10.ReminderDateTime.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("ReminderDateTime",
	(
		out10.ReminderDateTime != null?
            out10.ReminderDateTime.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("IsReminderSet",
	(
            String.valueOf(out10.IsReminderSet)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsReminderSet",
	(
            String.valueOf(out10.IsReminderSet)
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceActivityId",
	(
		out10.RecurrenceActivityId != null?
            out10.RecurrenceActivityId.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceActivityId",
	(
		out10.RecurrenceActivityId != null?
            out10.RecurrenceActivityId.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("IsRecurrence",
	(
            String.valueOf(out10.IsRecurrence)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("IsRecurrence",
	(
            String.valueOf(out10.IsRecurrence)
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceStartDateOnly",
	(
		out10.RecurrenceStartDateOnly != null?
            out10.RecurrenceStartDateOnly.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceStartDateOnly",
	(
		out10.RecurrenceStartDateOnly != null?
            out10.RecurrenceStartDateOnly.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceEndDateOnly",
	(
		out10.RecurrenceEndDateOnly != null?
            out10.RecurrenceEndDateOnly.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceEndDateOnly",
	(
		out10.RecurrenceEndDateOnly != null?
            out10.RecurrenceEndDateOnly.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceTimeZoneSidKey",
	(
		out10.RecurrenceTimeZoneSidKey != null?
            out10.RecurrenceTimeZoneSidKey.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceTimeZoneSidKey",
	(
		out10.RecurrenceTimeZoneSidKey != null?
            out10.RecurrenceTimeZoneSidKey.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceType",
	(
		out10.RecurrenceType != null?
            out10.RecurrenceType.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceType",
	(
		out10.RecurrenceType != null?
            out10.RecurrenceType.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceInterval",
	(
		out10.RecurrenceInterval != null?
            out10.RecurrenceInterval.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceInterval",
	(
		out10.RecurrenceInterval != null?
            out10.RecurrenceInterval.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceDayOfWeekMask",
	(
		out10.RecurrenceDayOfWeekMask != null?
            out10.RecurrenceDayOfWeekMask.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceDayOfWeekMask",
	(
		out10.RecurrenceDayOfWeekMask != null?
            out10.RecurrenceDayOfWeekMask.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceDayOfMonth",
	(
		out10.RecurrenceDayOfMonth != null?
            out10.RecurrenceDayOfMonth.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceDayOfMonth",
	(
		out10.RecurrenceDayOfMonth != null?
            out10.RecurrenceDayOfMonth.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceInstance",
	(
		out10.RecurrenceInstance != null?
            out10.RecurrenceInstance.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceInstance",
	(
		out10.RecurrenceInstance != null?
            out10.RecurrenceInstance.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceMonthOfYear",
	(
		out10.RecurrenceMonthOfYear != null?
            out10.RecurrenceMonthOfYear.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceMonthOfYear",
	(
		out10.RecurrenceMonthOfYear != null?
            out10.RecurrenceMonthOfYear.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("RecurrenceRegeneratedType",
	(
		out10.RecurrenceRegeneratedType != null?
            out10.RecurrenceRegeneratedType.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("RecurrenceRegeneratedType",
	(
		out10.RecurrenceRegeneratedType != null?
            out10.RecurrenceRegeneratedType.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("TaskSubtype",
	(
		out10.TaskSubtype != null?
            out10.TaskSubtype.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("TaskSubtype",
	(
		out10.TaskSubtype != null?
            out10.TaskSubtype.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("CompletedDateTime",
	(
		out10.CompletedDateTime != null?
            out10.CompletedDateTime.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CompletedDateTime",
	(
		out10.CompletedDateTime != null?
            out10.CompletedDateTime.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Contact_Type__c",
	(
		out10.NoodleCRM__Contact_Type__c != null?
            out10.NoodleCRM__Contact_Type__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Contact_Type__c",
	(
		out10.NoodleCRM__Contact_Type__c != null?
            out10.NoodleCRM__Contact_Type__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__CALL_UNIQUE_ID__c",
	(
		out10.rcsfl__CALL_UNIQUE_ID__c != null?
            out10.rcsfl__CALL_UNIQUE_ID__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__CALL_UNIQUE_ID__c",
	(
		out10.rcsfl__CALL_UNIQUE_ID__c != null?
            out10.rcsfl__CALL_UNIQUE_ID__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__CALL_UUID__c",
	(
		out10.rcsfl__CALL_UUID__c != null?
            out10.rcsfl__CALL_UUID__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__CALL_UUID__c",
	(
		out10.rcsfl__CALL_UUID__c != null?
            out10.rcsfl__CALL_UUID__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__Call_Recording__c",
	(
		out10.rcsfl__Call_Recording__c != null?
            out10.rcsfl__Call_Recording__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__Call_Recording__c",
	(
		out10.rcsfl__Call_Recording__c != null?
            out10.rcsfl__Call_Recording__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__RC_Logging_Type__c",
	(
		out10.rcsfl__RC_Logging_Type__c != null?
            out10.rcsfl__RC_Logging_Type__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__RC_Logging_Type__c",
	(
		out10.rcsfl__RC_Logging_Type__c != null?
            out10.rcsfl__RC_Logging_Type__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__Recording_Information__c",
	(
		out10.rcsfl__Recording_Information__c != null?
            out10.rcsfl__Recording_Information__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__Recording_Information__c",
	(
		out10.rcsfl__Recording_Information__c != null?
            out10.rcsfl__Recording_Information__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__external_whoid__c",
	(
		out10.rcsfl__external_whoid__c != null?
            out10.rcsfl__external_whoid__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__external_whoid__c",
	(
		out10.rcsfl__external_whoid__c != null?
            out10.rcsfl__external_whoid__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("rcsfl__key__c",
	(
		out10.rcsfl__key__c != null?
            out10.rcsfl__key__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("rcsfl__key__c",
	(
		out10.rcsfl__key__c != null?
            out10.rcsfl__key__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("CreatedDate__c",
	(
		out10.CreatedDate__c != null?
            FormatterUtils.format_Date(out10.CreatedDate__c,"yyyy-MM-dd"):null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("CreatedDate__c",
	(
		out10.CreatedDate__c != null?
            FormatterUtils.format_Date(out10.CreatedDate__c,"yyyy-MM-dd"):null
		));
	valueMap_tWriteJSONField_10_Out.put("Dialpad__CallId__c",
	(
		out10.Dialpad__CallId__c != null?
            out10.Dialpad__CallId__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Dialpad__CallId__c",
	(
		out10.Dialpad__CallId__c != null?
            out10.Dialpad__CallId__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("Dialpad__PhoneNumber__c",
	(
		out10.Dialpad__PhoneNumber__c != null?
            out10.Dialpad__PhoneNumber__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Dialpad__PhoneNumber__c",
	(
		out10.Dialpad__PhoneNumber__c != null?
            out10.Dialpad__PhoneNumber__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("Dialpad__TimeInitiated__c",
	(
		out10.Dialpad__TimeInitiated__c != null?
            out10.Dialpad__TimeInitiated__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Dialpad__TimeInitiated__c",
	(
		out10.Dialpad__TimeInitiated__c != null?
            out10.Dialpad__TimeInitiated__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("Dialpad__Timestamp__c",
	(
		out10.Dialpad__Timestamp__c != null?
            FormatterUtils.format_Date(out10.Dialpad__Timestamp__c,"yyyy-MM-dd HH:mm:ss"):null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Dialpad__Timestamp__c",
	(
		out10.Dialpad__Timestamp__c != null?
            FormatterUtils.format_Date(out10.Dialpad__Timestamp__c,"yyyy-MM-dd HH:mm:ss"):null
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Curriculum__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Curriculum__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Curriculum__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Curriculum__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Integrity_Conduct__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Integrity_Conduct__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Integrity_Conduct__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Integrity_Conduct__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_At_Risk_Students__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_At_Risk_Students__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_At_Risk_Students__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_At_Risk_Students__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Automated_success_alert__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Automated_success_alert__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Automated_success_alert__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Automated_success_alert__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Behavioral_issues_conduct__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Behavioral_issues_conduct__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Behavioral_issues_conduct__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Behavioral_issues_conduct__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Career_support__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Career_support__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Career_support__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Career_support__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Concern_Issue__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Concern_Issue__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Concern_Issue__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Concern_Issue__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Course_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Course_Related__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Course_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Course_Related__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Disability_support__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Disability_support__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Disability_support__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Disability_support__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Encouragement__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Encouragement__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Encouragement__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Encouragement__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Faculty_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Faculty_Related__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Faculty_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Faculty_Related__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Fieldwork_Practicum_placement__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Fieldwork_Practicum_placement__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Fieldwork_Practicum_placement__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Fieldwork_Practicum_placement__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Financial__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Financial__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Financial__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Financial__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Hold_on_Account__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Hold_on_Account__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Hold_on_Account__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Hold_on_Account__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Orientation__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Orientation__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Orientation__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Orientation__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Proactive_Outreach__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Proactive_Outreach__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Proactive_Outreach__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Proactive_Outreach__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Registration__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Registration__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Registration__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Registration__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Wellness__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Wellness__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Wellness__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Wellness__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Technology_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Technology_Related__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Technology_Related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Technology_Related__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Time_management__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Time_management__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Time_management__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Time_management__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Tutoring__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Tutoring__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Tutoring__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Tutoring__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Urgent__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Urgent__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Urgent__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Urgent__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Withdrawal_LOA_Deferral__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Withdrawal_LOA_Deferral__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Withdrawal_LOA_Deferral__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Category__c",
	(
		out10.NoodleCRM__Category__c != null?
            out10.NoodleCRM__Category__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Category__c",
	(
		out10.NoodleCRM__Category__c != null?
            out10.NoodleCRM__Category__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Completed_Date_Time__c",
	(
		out10.NoodleCRM__Completed_Date_Time__c != null?
            out10.NoodleCRM__Completed_Date_Time__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Completed_Date_Time__c",
	(
		out10.NoodleCRM__Completed_Date_Time__c != null?
            out10.NoodleCRM__Completed_Date_Time__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Advising__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Advising__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Academic_Advising__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Academic_Advising__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Deposit__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Deposit__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Deposit__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Deposit__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Immersion__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Immersion__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Immersion__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Immersion__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Library_related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Library_related__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Library_related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Library_related__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Complaint_Issue__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Complaint_Issue__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Complaint_Issue__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Complaint_Issue__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Data_related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Data_related__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Data_related__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Data_related__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Id_Card__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Id_Card__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Student_Id_Card__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Student_Id_Card__c)
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Transcript__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Transcript__c)
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Cat_Transcript__c",
	(
            String.valueOf(out10.NoodleCRM__Cat_Transcript__c)
		));
	valueMap_tWriteJSONField_10_Out.put("Upload_Id__c",
	(
		out10.Upload_Id__c != null?
            out10.Upload_Id__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("Upload_Id__c",
	(
		out10.Upload_Id__c != null?
            out10.Upload_Id__c.toString():null
		));
	valueMap_tWriteJSONField_10_Out.put("NoodleCRM__Result__c",
	(
		out10.NoodleCRM__Result__c != null?
            out10.NoodleCRM__Result__c.toString():null
		));
	arraysValueMap_tWriteJSONField_10_Out.put("NoodleCRM__Result__c",
	(
		out10.NoodleCRM__Result__c != null?
            out10.NoodleCRM__Result__c.toString():null
		));
		String strTemp_tWriteJSONField_10_Out = "";
	if(strCompCache_tWriteJSONField_10_Out==null){
		strCompCache_tWriteJSONField_10_Out=strTemp_tWriteJSONField_10_Out;
		
	}else{  
    		nestXMLTool_tWriteJSONField_10_Out.replaceDefaultNameSpace(doc_tWriteJSONField_10_Out.getRootElement());			
			java.io.StringWriter strWriter_tWriteJSONField_10_Out = new java.io.StringWriter();	
			org.dom4j.io.XMLWriter output_tWriteJSONField_10_Out = new org.dom4j.io.XMLWriter(strWriter_tWriteJSONField_10_Out, format_tWriteJSONField_10_Out);
			output_tWriteJSONField_10_Out.write(doc_tWriteJSONField_10_Out);
		    output_tWriteJSONField_10_Out.close();
			
				  		  row25Struct row_tWriteJSONField_10_Out = new row25Struct();
						  
					     		row_tWriteJSONField_10_Out.data = strWriter_tWriteJSONField_10_Out.toString();
					     		listGroupby_tWriteJSONField_10_Out.add(row_tWriteJSONField_10_Out);
					
		    doc_tWriteJSONField_10_Out.clearContent();
			needRoot_tWriteJSONField_10_Out = true;
			for(int i_tWriteJSONField_10_Out=0;i_tWriteJSONField_10_Out<orders_tWriteJSONField_10_Out.length;i_tWriteJSONField_10_Out++){
				orders_tWriteJSONField_10_Out[i_tWriteJSONField_10_Out] = 0;
			}
			
			if(groupbyList_tWriteJSONField_10_Out != null && groupbyList_tWriteJSONField_10_Out.size() >= 0){
				groupbyList_tWriteJSONField_10_Out.clear();
			}
			strCompCache_tWriteJSONField_10_Out=strTemp_tWriteJSONField_10_Out;
	}

	org.dom4j.Element subTreeRootParent_tWriteJSONField_10_Out = null;
	
	// build root xml tree 
	if (needRoot_tWriteJSONField_10_Out) {
		needRoot_tWriteJSONField_10_Out=false;
		org.dom4j.Element root_tWriteJSONField_10_Out = doc_tWriteJSONField_10_Out.addElement("rootTag");
		subTreeRootParent_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out;
		org.dom4j.Element root_0_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("WhoId");
		if(
		valueMap_tWriteJSONField_10_Out.get("WhoId")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_0_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("WhoId"));
			root_0_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_0_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_0_tWriteJSONField_10_Out,"null");
			root_0_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_1_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("WhatId");
		if(
		valueMap_tWriteJSONField_10_Out.get("WhatId")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_1_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("WhatId"));
			root_1_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_1_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_1_tWriteJSONField_10_Out,"null");
			root_1_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_2_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("WhoCount");
		if(
		valueMap_tWriteJSONField_10_Out.get("WhoCount")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_2_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("WhoCount"));
            root_2_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_2_tWriteJSONField_10_Out,"null");
			root_2_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_3_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("WhatCount");
		if(
		valueMap_tWriteJSONField_10_Out.get("WhatCount")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_3_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("WhatCount"));
            root_3_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_3_tWriteJSONField_10_Out,"null");
			root_3_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_4_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Subject");
		if(
		valueMap_tWriteJSONField_10_Out.get("Subject")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_4_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Subject"));
			root_4_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_4_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_4_tWriteJSONField_10_Out,"null");
			root_4_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_5_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("ActivityDate");
		if(
		valueMap_tWriteJSONField_10_Out.get("ActivityDate")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_5_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("ActivityDate"));
            root_5_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_5_tWriteJSONField_10_Out,"null");
			root_5_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_6_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Status");
		if(
		valueMap_tWriteJSONField_10_Out.get("Status")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_6_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Status"));
			root_6_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_6_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_6_tWriteJSONField_10_Out,"null");
			root_6_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_7_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Priority");
		if(
		valueMap_tWriteJSONField_10_Out.get("Priority")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_7_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Priority"));
			root_7_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_7_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_7_tWriteJSONField_10_Out,"null");
			root_7_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_8_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsHighPriority");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsHighPriority")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_8_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsHighPriority"));
            root_8_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_8_tWriteJSONField_10_Out,"null");
			root_8_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_9_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("OwnerId");
		if(
		valueMap_tWriteJSONField_10_Out.get("OwnerId")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_9_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("OwnerId"));
			root_9_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_9_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_9_tWriteJSONField_10_Out,"null");
			root_9_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_10_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Description");
		if(
		valueMap_tWriteJSONField_10_Out.get("Description")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_10_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Description"));
			root_10_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_10_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_10_tWriteJSONField_10_Out,"null");
			root_10_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_11_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsDeleted");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsDeleted")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_11_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsDeleted"));
            root_11_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_11_tWriteJSONField_10_Out,"null");
			root_11_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_12_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("AccountId");
		if(
		valueMap_tWriteJSONField_10_Out.get("AccountId")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_12_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("AccountId"));
			root_12_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_12_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_12_tWriteJSONField_10_Out,"null");
			root_12_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_13_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsClosed");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsClosed")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_13_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsClosed"));
            root_13_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_13_tWriteJSONField_10_Out,"null");
			root_13_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_14_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CreatedDate");
		if(
		valueMap_tWriteJSONField_10_Out.get("CreatedDate")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_14_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CreatedDate"));
            root_14_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_14_tWriteJSONField_10_Out,"null");
			root_14_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_15_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CreatedById");
		if(
		valueMap_tWriteJSONField_10_Out.get("CreatedById")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_15_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CreatedById"));
			root_15_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_15_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_15_tWriteJSONField_10_Out,"null");
			root_15_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_16_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("LastModifiedDate");
		if(
		valueMap_tWriteJSONField_10_Out.get("LastModifiedDate")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_16_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("LastModifiedDate"));
            root_16_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_16_tWriteJSONField_10_Out,"null");
			root_16_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_17_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("LastModifiedById");
		if(
		valueMap_tWriteJSONField_10_Out.get("LastModifiedById")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_17_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("LastModifiedById"));
			root_17_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_17_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_17_tWriteJSONField_10_Out,"null");
			root_17_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_18_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("SystemModstamp");
		if(
		valueMap_tWriteJSONField_10_Out.get("SystemModstamp")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_18_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("SystemModstamp"));
            root_18_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_18_tWriteJSONField_10_Out,"null");
			root_18_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_19_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsArchived");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsArchived")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_19_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsArchived"));
            root_19_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_19_tWriteJSONField_10_Out,"null");
			root_19_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_20_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CallDurationInSeconds");
		if(
		valueMap_tWriteJSONField_10_Out.get("CallDurationInSeconds")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_20_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CallDurationInSeconds"));
            root_20_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_20_tWriteJSONField_10_Out,"null");
			root_20_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_21_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CallType");
		if(
		valueMap_tWriteJSONField_10_Out.get("CallType")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_21_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CallType"));
			root_21_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_21_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_21_tWriteJSONField_10_Out,"null");
			root_21_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_22_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CallDisposition");
		if(
		valueMap_tWriteJSONField_10_Out.get("CallDisposition")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_22_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CallDisposition"));
			root_22_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_22_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_22_tWriteJSONField_10_Out,"null");
			root_22_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_23_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CallObject");
		if(
		valueMap_tWriteJSONField_10_Out.get("CallObject")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_23_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CallObject"));
			root_23_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_23_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_23_tWriteJSONField_10_Out,"null");
			root_23_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_24_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("ReminderDateTime");
		if(
		valueMap_tWriteJSONField_10_Out.get("ReminderDateTime")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_24_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("ReminderDateTime"));
            root_24_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_24_tWriteJSONField_10_Out,"null");
			root_24_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_25_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsReminderSet");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsReminderSet")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_25_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsReminderSet"));
            root_25_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_25_tWriteJSONField_10_Out,"null");
			root_25_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_26_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceActivityId");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceActivityId")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_26_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceActivityId"));
			root_26_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_26_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_26_tWriteJSONField_10_Out,"null");
			root_26_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_27_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("IsRecurrence");
		if(
		valueMap_tWriteJSONField_10_Out.get("IsRecurrence")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_27_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("IsRecurrence"));
            root_27_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_27_tWriteJSONField_10_Out,"null");
			root_27_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_28_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceStartDateOnly");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceStartDateOnly")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_28_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceStartDateOnly"));
            root_28_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_28_tWriteJSONField_10_Out,"null");
			root_28_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_29_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceEndDateOnly");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceEndDateOnly")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_29_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceEndDateOnly"));
            root_29_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_29_tWriteJSONField_10_Out,"null");
			root_29_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_30_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceTimeZoneSidKey");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceTimeZoneSidKey")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_30_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceTimeZoneSidKey"));
			root_30_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_30_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_30_tWriteJSONField_10_Out,"null");
			root_30_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_31_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceType");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceType")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_31_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceType"));
			root_31_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_31_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_31_tWriteJSONField_10_Out,"null");
			root_31_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_32_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceInterval");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceInterval")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_32_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceInterval"));
            root_32_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_32_tWriteJSONField_10_Out,"null");
			root_32_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_33_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceDayOfWeekMask");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceDayOfWeekMask")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_33_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceDayOfWeekMask"));
            root_33_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_33_tWriteJSONField_10_Out,"null");
			root_33_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_34_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceDayOfMonth");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceDayOfMonth")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_34_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceDayOfMonth"));
            root_34_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_34_tWriteJSONField_10_Out,"null");
			root_34_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_35_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceInstance");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceInstance")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_35_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceInstance"));
			root_35_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_35_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_35_tWriteJSONField_10_Out,"null");
			root_35_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_36_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceMonthOfYear");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceMonthOfYear")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_36_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceMonthOfYear"));
			root_36_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_36_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_36_tWriteJSONField_10_Out,"null");
			root_36_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_37_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("RecurrenceRegeneratedType");
		if(
		valueMap_tWriteJSONField_10_Out.get("RecurrenceRegeneratedType")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_37_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("RecurrenceRegeneratedType"));
			root_37_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_37_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_37_tWriteJSONField_10_Out,"null");
			root_37_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_38_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("TaskSubtype");
		if(
		valueMap_tWriteJSONField_10_Out.get("TaskSubtype")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_38_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("TaskSubtype"));
			root_38_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_38_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_38_tWriteJSONField_10_Out,"null");
			root_38_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_39_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CompletedDateTime");
		if(
		valueMap_tWriteJSONField_10_Out.get("CompletedDateTime")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_39_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CompletedDateTime"));
            root_39_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_39_tWriteJSONField_10_Out,"null");
			root_39_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_40_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Contact_Type__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Contact_Type__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_40_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Contact_Type__c"));
			root_40_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_40_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_40_tWriteJSONField_10_Out,"null");
			root_40_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_41_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__CALL_UNIQUE_ID__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__CALL_UNIQUE_ID__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_41_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__CALL_UNIQUE_ID__c"));
			root_41_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_41_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_41_tWriteJSONField_10_Out,"null");
			root_41_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_42_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__CALL_UUID__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__CALL_UUID__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_42_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__CALL_UUID__c"));
			root_42_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_42_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_42_tWriteJSONField_10_Out,"null");
			root_42_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_43_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__Call_Recording__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__Call_Recording__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_43_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__Call_Recording__c"));
			root_43_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_43_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_43_tWriteJSONField_10_Out,"null");
			root_43_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_44_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__RC_Logging_Type__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__RC_Logging_Type__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_44_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__RC_Logging_Type__c"));
			root_44_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_44_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_44_tWriteJSONField_10_Out,"null");
			root_44_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_45_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__Recording_Information__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__Recording_Information__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_45_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__Recording_Information__c"));
			root_45_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_45_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_45_tWriteJSONField_10_Out,"null");
			root_45_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_46_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__external_whoid__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__external_whoid__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_46_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__external_whoid__c"));
			root_46_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_46_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_46_tWriteJSONField_10_Out,"null");
			root_46_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_47_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("rcsfl__key__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("rcsfl__key__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_47_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("rcsfl__key__c"));
			root_47_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_47_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_47_tWriteJSONField_10_Out,"null");
			root_47_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_48_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("CreatedDate__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("CreatedDate__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_48_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("CreatedDate__c"));
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_48_tWriteJSONField_10_Out,"null");
			root_48_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_49_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Dialpad__CallId__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("Dialpad__CallId__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_49_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Dialpad__CallId__c"));
			root_49_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_49_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_49_tWriteJSONField_10_Out,"null");
			root_49_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_50_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Dialpad__PhoneNumber__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("Dialpad__PhoneNumber__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_50_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Dialpad__PhoneNumber__c"));
			root_50_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_50_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_50_tWriteJSONField_10_Out,"null");
			root_50_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_51_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Dialpad__TimeInitiated__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("Dialpad__TimeInitiated__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_51_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Dialpad__TimeInitiated__c"));
			root_51_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_51_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_51_tWriteJSONField_10_Out,"null");
			root_51_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_52_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Dialpad__Timestamp__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("Dialpad__Timestamp__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_52_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Dialpad__Timestamp__c"));
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_52_tWriteJSONField_10_Out,"null");
			root_52_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_53_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Academic_Curriculum__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Curriculum__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_53_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Curriculum__c"));
            root_53_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_53_tWriteJSONField_10_Out,"null");
			root_53_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_54_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Academic_Integrity_Conduct__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Integrity_Conduct__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_54_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Integrity_Conduct__c"));
            root_54_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_54_tWriteJSONField_10_Out,"null");
			root_54_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_55_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_At_Risk_Students__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_At_Risk_Students__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_55_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_At_Risk_Students__c"));
            root_55_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_55_tWriteJSONField_10_Out,"null");
			root_55_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_56_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Automated_success_alert__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Automated_success_alert__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_56_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Automated_success_alert__c"));
            root_56_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_56_tWriteJSONField_10_Out,"null");
			root_56_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_57_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Behavioral_issues_conduct__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Behavioral_issues_conduct__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_57_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Behavioral_issues_conduct__c"));
            root_57_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_57_tWriteJSONField_10_Out,"null");
			root_57_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_58_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Career_support__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Career_support__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_58_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Career_support__c"));
            root_58_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_58_tWriteJSONField_10_Out,"null");
			root_58_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_59_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Concern_Issue__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Concern_Issue__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_59_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Concern_Issue__c"));
            root_59_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_59_tWriteJSONField_10_Out,"null");
			root_59_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_60_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Course_Related__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Course_Related__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_60_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Course_Related__c"));
            root_60_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_60_tWriteJSONField_10_Out,"null");
			root_60_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_61_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Disability_support__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Disability_support__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_61_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Disability_support__c"));
            root_61_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_61_tWriteJSONField_10_Out,"null");
			root_61_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_62_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Encouragement__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Encouragement__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_62_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Encouragement__c"));
            root_62_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_62_tWriteJSONField_10_Out,"null");
			root_62_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_63_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Faculty_Related__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Faculty_Related__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_63_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Faculty_Related__c"));
            root_63_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_63_tWriteJSONField_10_Out,"null");
			root_63_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_64_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Fieldwork_Practicum_placement__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Fieldwork_Practicum_placement__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_64_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Fieldwork_Practicum_placement__c"));
            root_64_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_64_tWriteJSONField_10_Out,"null");
			root_64_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_65_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Financial__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Financial__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_65_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Financial__c"));
            root_65_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_65_tWriteJSONField_10_Out,"null");
			root_65_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_66_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Hold_on_Account__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Hold_on_Account__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_66_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Hold_on_Account__c"));
            root_66_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_66_tWriteJSONField_10_Out,"null");
			root_66_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_67_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Orientation__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Orientation__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_67_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Orientation__c"));
            root_67_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_67_tWriteJSONField_10_Out,"null");
			root_67_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_68_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Proactive_Outreach__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Proactive_Outreach__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_68_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Proactive_Outreach__c"));
            root_68_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_68_tWriteJSONField_10_Out,"null");
			root_68_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_69_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Registration__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Registration__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_69_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Registration__c"));
            root_69_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_69_tWriteJSONField_10_Out,"null");
			root_69_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_70_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Student_Wellness__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Wellness__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_70_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Wellness__c"));
            root_70_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_70_tWriteJSONField_10_Out,"null");
			root_70_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_71_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Technology_Related__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Technology_Related__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_71_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Technology_Related__c"));
            root_71_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_71_tWriteJSONField_10_Out,"null");
			root_71_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_72_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Time_management__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Time_management__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_72_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Time_management__c"));
            root_72_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_72_tWriteJSONField_10_Out,"null");
			root_72_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_73_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Tutoring__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Tutoring__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_73_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Tutoring__c"));
            root_73_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_73_tWriteJSONField_10_Out,"null");
			root_73_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_74_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Urgent__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Urgent__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_74_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Urgent__c"));
            root_74_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_74_tWriteJSONField_10_Out,"null");
			root_74_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_75_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Withdrawal_LOA_Deferral__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Withdrawal_LOA_Deferral__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_75_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Withdrawal_LOA_Deferral__c"));
            root_75_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_75_tWriteJSONField_10_Out,"null");
			root_75_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_76_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Category__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Category__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_76_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Category__c"));
			root_76_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_76_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_76_tWriteJSONField_10_Out,"null");
			root_76_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_77_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Completed_Date_Time__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Completed_Date_Time__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_77_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Completed_Date_Time__c"));
            root_77_tWriteJSONField_10_Out.addAttribute("type", "number");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_77_tWriteJSONField_10_Out,"null");
			root_77_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_78_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Academic_Advising__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Advising__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_78_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Academic_Advising__c"));
            root_78_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_78_tWriteJSONField_10_Out,"null");
			root_78_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_79_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Deposit__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Deposit__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_79_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Deposit__c"));
            root_79_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_79_tWriteJSONField_10_Out,"null");
			root_79_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_80_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Immersion__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Immersion__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_80_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Immersion__c"));
            root_80_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_80_tWriteJSONField_10_Out,"null");
			root_80_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_81_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Library_related__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Library_related__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_81_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Library_related__c"));
            root_81_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_81_tWriteJSONField_10_Out,"null");
			root_81_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_82_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Student_Complaint_Issue__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Complaint_Issue__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_82_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Complaint_Issue__c"));
            root_82_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_82_tWriteJSONField_10_Out,"null");
			root_82_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_83_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Student_Data_related__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Data_related__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_83_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Data_related__c"));
            root_83_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_83_tWriteJSONField_10_Out,"null");
			root_83_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_84_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Student_Id_Card__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Id_Card__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_84_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Student_Id_Card__c"));
            root_84_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_84_tWriteJSONField_10_Out,"null");
			root_84_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_85_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Cat_Transcript__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Transcript__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_85_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Cat_Transcript__c"));
            root_85_tWriteJSONField_10_Out.addAttribute("type", "boolean");
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_85_tWriteJSONField_10_Out,"null");
			root_85_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_86_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("Upload_Id__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("Upload_Id__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_86_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Upload_Id__c"));
			root_86_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_86_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_86_tWriteJSONField_10_Out,"null");
			root_86_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		org.dom4j.Element root_87_tWriteJSONField_10_Out = root_tWriteJSONField_10_Out.addElement("NoodleCRM__Result__c");
		if(
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Result__c")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(root_87_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("NoodleCRM__Result__c"));
			root_87_tWriteJSONField_10_Out.addAttribute("type", "string");
			root_87_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(root_87_tWriteJSONField_10_Out,"null");
			root_87_tWriteJSONField_10_Out.addAttribute("null", "true");
		}
		root4Group_tWriteJSONField_10_Out = subTreeRootParent_tWriteJSONField_10_Out;
	}else{
		subTreeRootParent_tWriteJSONField_10_Out=root4Group_tWriteJSONField_10_Out;
	}
	// build group xml tree 
	// build loop xml tree
		org.dom4j.Element loop_tWriteJSONField_10_Out = org.dom4j.DocumentHelper.createElement("Id");
        if(orders_tWriteJSONField_10_Out[0]==0){
        	orders_tWriteJSONField_10_Out[0] = 0;
        }
        if(1 < orders_tWriteJSONField_10_Out.length){
        		orders_tWriteJSONField_10_Out[1] = 0;
        }
        subTreeRootParent_tWriteJSONField_10_Out.elements().add(orders_tWriteJSONField_10_Out[0]++,loop_tWriteJSONField_10_Out);
		if(
		valueMap_tWriteJSONField_10_Out.get("Id")!=null){
			nestXMLTool_tWriteJSONField_10_Out .setText(loop_tWriteJSONField_10_Out,
		valueMap_tWriteJSONField_10_Out.get("Id"));
			loop_tWriteJSONField_10_Out.addAttribute("type", "string");
			loop_tWriteJSONField_10_Out.addAttribute("class", "string");
				
		}
		else {
			nestXMLTool_tWriteJSONField_10_Out .setText(loop_tWriteJSONField_10_Out,"null");
			loop_tWriteJSONField_10_Out.addAttribute("null", "true");
		}

 


	tos_count_tWriteJSONField_10_Out++;

/**
 * [tWriteJSONField_10_Out main ] stop
 */
	
	/**
	 * [tWriteJSONField_10_Out process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	

 



/**
 * [tWriteJSONField_10_Out process_data_begin ] stop
 */
	
	/**
	 * [tWriteJSONField_10_Out process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	

 



/**
 * [tWriteJSONField_10_Out process_data_end ] stop
 */

} // End of branch "out10"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tSalesforceInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_11";

	


 



/**
 * [tSalesforceInput_11 process_data_end ] stop
 */
	
	/**
	 * [tSalesforceInput_11 end ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_11";

	
// end of generic


resourceMap.put("finish_tSalesforceInput_11", Boolean.TRUE);

    } // while
    reader_tSalesforceInput_11.close();
    final java.util.Map<String, Object> resultMap_tSalesforceInput_11 = reader_tSalesforceInput_11.getReturnValues();
if(resultMap_tSalesforceInput_11!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceInput_11 : resultMap_tSalesforceInput_11.entrySet()) {
		switch(entry_tSalesforceInput_11.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceInput_11.setComponentData("tSalesforceInput_11", "ERROR_MESSAGE", entry_tSalesforceInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceInput_11.setComponentData("tSalesforceInput_11", "NB_LINE", entry_tSalesforceInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceInput_11.setComponentData("tSalesforceInput_11", "NB_SUCCESS", entry_tSalesforceInput_11.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceInput_11.setComponentData("tSalesforceInput_11", "NB_REJECT", entry_tSalesforceInput_11.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceInput_11 = new StringBuilder();
            for (int i_tSalesforceInput_11 = 0; i_tSalesforceInput_11 < entry_tSalesforceInput_11.getKey().length(); i_tSalesforceInput_11++) {
                char ch_tSalesforceInput_11 = entry_tSalesforceInput_11.getKey().charAt(i_tSalesforceInput_11);
                if(Character.isUpperCase(ch_tSalesforceInput_11) && i_tSalesforceInput_11> 0) {
                	studio_key_tSalesforceInput_11.append('_');
                }
                studio_key_tSalesforceInput_11.append(ch_tSalesforceInput_11);
            }
			container_tSalesforceInput_11.setComponentData("tSalesforceInput_11", studio_key_tSalesforceInput_11.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceInput_11.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceInput_11", true);
end_Hash.put("tSalesforceInput_11", System.currentTimeMillis());




/**
 * [tSalesforceInput_11 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tWriteJSONField_10_Out end ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	

if(nb_line_tWriteJSONField_10_Out > 0){  
    nestXMLTool_tWriteJSONField_10_Out.replaceDefaultNameSpace(doc_tWriteJSONField_10_Out.getRootElement());
	java.io.StringWriter strWriter_tWriteJSONField_10_Out = new java.io.StringWriter();
	org.dom4j.io.XMLWriter output_tWriteJSONField_10_Out = new org.dom4j.io.XMLWriter(strWriter_tWriteJSONField_10_Out, format_tWriteJSONField_10_Out);
	output_tWriteJSONField_10_Out.write(doc_tWriteJSONField_10_Out);
    output_tWriteJSONField_10_Out.close();
					row25Struct row_tWriteJSONField_10_Out = new row25Struct();
						  
					     		row_tWriteJSONField_10_Out.data = strWriter_tWriteJSONField_10_Out.toString();
					     		listGroupby_tWriteJSONField_10_Out.add(row_tWriteJSONField_10_Out);
		    		

}
globalMap.put("tWriteJSONField_10_Out_NB_LINE",nb_line_tWriteJSONField_10_Out);
globalMap.put("tWriteJSONField_10_In_FINISH" + (listGroupby_tWriteJSONField_10_Out==null?"":listGroupby_tWriteJSONField_10_Out.hashCode()), "true");
	
		txf_tWriteJSONField_10_Out.join();
		
		if(txf_tWriteJSONField_10_Out.getLastException()!=null) {
			currentComponent = txf_tWriteJSONField_10_Out.getCurrentComponent();
			throw txf_tWriteJSONField_10_Out.getLastException();
		}
		
		if(txf_tWriteJSONField_10_Out.getLastError()!=null) {
			throw txf_tWriteJSONField_10_Out.getLastError();
		}
	
resourceMap.put("finish_tWriteJSONField_10_Out", true);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out10");
			  	}
			  	
 

ok_Hash.put("tWriteJSONField_10_Out", true);
end_Hash.put("tWriteJSONField_10_Out", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk", 0, "ok");
				}



/**
 * [tWriteJSONField_10_Out end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSalesforceInput_11 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_11";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceInput_11")==null){
    if(resourceMap.get("reader_tSalesforceInput_11")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tSalesforceInput_11")).close();
		} catch (java.io.IOException e_tSalesforceInput_11) {
			String errorMessage_tSalesforceInput_11 = "failed to release the resource in tSalesforceInput_11 :" + e_tSalesforceInput_11.getMessage();
			System.err.println(errorMessage_tSalesforceInput_11);
		}
	}
}
 



/**
 * [tSalesforceInput_11 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";

	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tWriteJSONField_10_Out finally ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_Out";

	

		java.util.Queue listGroupby_tWriteJSONField_10_Out = (java.util.Queue)globalMap.get("queue_tWriteJSONField_10_In");
		if(resourceMap.get("finish_tWriteJSONField_10_Out") == null){
			globalMap.put("tWriteJSONField_10_In_FINISH_WITH_EXCEPTION" + (listGroupby_tWriteJSONField_10_Out==null?"":listGroupby_tWriteJSONField_10_Out.hashCode()), "true");
		}
	
	if (listGroupby_tWriteJSONField_10_Out != null) {
		globalMap.put("tWriteJSONField_10_In_FINISH" + (listGroupby_tWriteJSONField_10_Out==null?"":listGroupby_tWriteJSONField_10_Out.hashCode()), "true");
	}

 



/**
 * [tWriteJSONField_10_Out finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSalesforceInput_11_SUBPROCESS_STATE", 1);
	}
	

public void tFileArchive_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileArchive_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileArchive_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileArchive_10", false);
		start_Hash.put("tFileArchive_10", System.currentTimeMillis());
		
	
	currentComponent="tFileArchive_10";

	
		int tos_count_tFileArchive_10 = 0;
		

 



/**
 * [tFileArchive_10 begin ] stop
 */
	
	/**
	 * [tFileArchive_10 main ] start
	 */

	

	
	
	currentComponent="tFileArchive_10";

	

	

		String sourceFile_tFileArchive_10 = context.staging_S3_dir + "task.json";
	

    if (java.nio.file.Files.notExists(java.nio.file.Paths.get(sourceFile_tFileArchive_10), java.nio.file.LinkOption.NOFOLLOW_LINKS)){
        throw new java.io.FileNotFoundException(sourceFile_tFileArchive_10 + " (The system cannot find the path specified)");
    }

    String zipFile_tFileArchive_10 = context.staging_S3_dir + "task.json.gz";
    
    com.talend.compress.zip.Zip zip_tFileArchive_10 = new com.talend.compress.zip.Zip(sourceFile_tFileArchive_10, zipFile_tFileArchive_10);
    zip_tFileArchive_10.setOverwriteExistTargetZip(true);
	zip_tFileArchive_10.setMakeTargetDir(true);
	zip_tFileArchive_10.setCompressLevel(9);
	zip_tFileArchive_10.setArchiveFormat("gzip");
	zip_tFileArchive_10.setAllFiles(true);
	
	
		zip_tFileArchive_10.setSyncFlush(false);
	
  
  
   globalMap.put("tFileArchive_10_ARCHIVE_FILEPATH",zipFile_tFileArchive_10);
   
   globalMap.put("tFileArchive_10_ARCHIVE_FILENAME", new java.io.File(zipFile_tFileArchive_10).getName());

   zip_tFileArchive_10.doZip();


 


	tos_count_tFileArchive_10++;

/**
 * [tFileArchive_10 main ] stop
 */
	
	/**
	 * [tFileArchive_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileArchive_10";

	

 



/**
 * [tFileArchive_10 process_data_begin ] stop
 */
	
	/**
	 * [tFileArchive_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileArchive_10";

	

 



/**
 * [tFileArchive_10 process_data_end ] stop
 */
	
	/**
	 * [tFileArchive_10 end ] start
	 */

	

	
	
	currentComponent="tFileArchive_10";

	

 

ok_Hash.put("tFileArchive_10", true);
end_Hash.put("tFileArchive_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk72", 0, "ok");
				}
				tS3Put_10Process(globalMap);



/**
 * [tFileArchive_10 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileArchive_10 finally ] start
	 */

	

	
	
	currentComponent="tFileArchive_10";

	

 



/**
 * [tFileArchive_10 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileArchive_10_SUBPROCESS_STATE", 1);
	}
	

public void tS3Put_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tS3Put_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tS3Put_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tS3Put_10", false);
		start_Hash.put("tS3Put_10", System.currentTimeMillis());
		
	
	currentComponent="tS3Put_10";

	
		int tos_count_tS3Put_10 = 0;
		
	
	
		com.amazonaws.services.s3.AmazonS3Client conn_tS3Put_10 = (com.amazonaws.services.s3.AmazonS3Client)globalMap.get("conn_tS3Connection_1");
		
	String key_tS3Put_10 = context.nd_s3_data_lake_path_sfdc +"/sfdc_json/task/incremental/university_id="+context.university_code+"/year="+context.get("year")+"/month="+context.get("month")+"/day="+context.get("day")+"/task.json.gz";
	
	int partSizeInBytes_tS3Put_10 = 5 * 1024 * 1024;
	if(partSizeInBytes_tS3Put_10 < 5 << 20 ) {
		
		partSizeInBytes_tS3Put_10 = 5 << 20;
	}
	
	
	Object fileOrStream_tS3Put_10 = context.staging_S3_dir + "task.json.gz";
	
	boolean useStream_tS3Put_10 = false;
	java.io.InputStream uploadStream_tS3Put_10 = null;
	
	com.amazonaws.services.s3.transfer.TransferManager tm_tS3Put_10 = null;
	
	try{
		
		
		if(fileOrStream_tS3Put_10 instanceof String){
		    useStream_tS3Put_10 = false;
		}else if(fileOrStream_tS3Put_10 instanceof java.io.InputStream){
		    useStream_tS3Put_10 = true;
		}
		
    com.amazonaws.services.s3.model.ObjectMetadata objectMetadata_tS3Put_10 = new com.amazonaws.services.s3.model.ObjectMetadata();
		
		
  		
		
		if(!useStream_tS3Put_10) {
				java.io.File inputFile_tS3Put_10 = new java.io.File((String)fileOrStream_tS3Put_10);
				
				long multipart_upload_threshold_tS3Put_10 = 5 * 1024 * 1024;
				
    		tm_tS3Put_10 = com.amazonaws.services.s3.transfer.TransferManagerBuilder
    			.standard()
    			.withMinimumUploadPartSize((long)partSizeInBytes_tS3Put_10)
    			.withMultipartUploadThreshold(multipart_upload_threshold_tS3Put_10)
    			.withS3Client(conn_tS3Put_10)
    			.build();
    			
  			com.amazonaws.services.s3.model.PutObjectRequest putRequest_tS3Put_10 = new com.amazonaws.services.s3.model.PutObjectRequest(context.nd_s3_bucket_QA_sfdc, key_tS3Put_10, inputFile_tS3Put_10).withMetadata(objectMetadata_tS3Put_10);
			

  			

  		
  			com.amazonaws.services.s3.transfer.Upload upload_tS3Put_10 = tm_tS3Put_10.upload(putRequest_tS3Put_10);
  		
  			upload_tS3Put_10.waitForCompletion();
  			
		} else {
				java.io.InputStream sourceStream_tS3Put_10 = ((java.io.InputStream)fileOrStream_tS3Put_10);
				
  			class S3StreamUtil {
    	    public int getLength(byte[] output) {
    		    for (int i = output.length - 1; i > 0; i--) {
    			    if (output[i] != 0) {
    				    return i + 1;
    			    }
    		    }
    		    return 0;
    	    }
      	}
      	
      	S3StreamUtil streamUtil_tS3Put_10 = new S3StreamUtil();
    		byte[] buffer_tS3Put_10 = new byte[partSizeInBytes_tS3Put_10];
    		sourceStream_tS3Put_10.read(buffer_tS3Put_10);
    		long curPartSize_tS3Put_10 = streamUtil_tS3Put_10.getLength(buffer_tS3Put_10);
    		boolean multiUpload_tS3Put_10 = curPartSize_tS3Put_10 == partSizeInBytes_tS3Put_10;
    		
    		if(!multiUpload_tS3Put_10) {
    				objectMetadata_tS3Put_10.setContentLength(curPartSize_tS3Put_10);
    				uploadStream_tS3Put_10 = new java.io.ByteArrayInputStream(buffer_tS3Put_10,0,Long.valueOf(curPartSize_tS3Put_10).intValue());
    				com.amazonaws.services.s3.model.PutObjectRequest putRequest_tS3Put_10 = new com.amazonaws.services.s3.model.PutObjectRequest(context.nd_s3_bucket_QA_sfdc, key_tS3Put_10, uploadStream_tS3Put_10, objectMetadata_tS3Put_10);
			
    				
    				

    				
    				conn_tS3Put_10.putObject(putRequest_tS3Put_10);
    		} else {
    				uploadStream_tS3Put_10 = new java.io.ByteArrayInputStream(buffer_tS3Put_10);
      			java.util.List<com.amazonaws.services.s3.model.PartETag> partTags_tS3Put_10 = new java.util.ArrayList<com.amazonaws.services.s3.model.PartETag>();
      			com.amazonaws.services.s3.model.InitiateMultipartUploadRequest putRequest_tS3Put_10 = new com.amazonaws.services.s3.model.InitiateMultipartUploadRequest(context.nd_s3_bucket_QA_sfdc, key_tS3Put_10, objectMetadata_tS3Put_10);
      			
      			

      			
      			com.amazonaws.services.s3.model.InitiateMultipartUploadResult initResponse_tS3Put_10 = conn_tS3Put_10.initiateMultipartUpload(putRequest_tS3Put_10);
      			String uploadId_tS3Put_10 = initResponse_tS3Put_10.getUploadId();
      			int partNumber_tS3Put_10 = 1;
      			boolean streamHasNext_tS3Put_10 = true;
      			byte[] probeAvailability_tS3Put_10 = new byte[1];
				try {
					while (streamHasNext_tS3Put_10) {
        						com.amazonaws.services.s3.model.UploadPartRequest uploadRequest_tS3Put_10 = new com.amazonaws.services.s3.model.UploadPartRequest()
                    	.withBucketName(context.nd_s3_bucket_QA_sfdc)
                    	.withKey(key_tS3Put_10)
						.withUploadId(uploadId_tS3Put_10)
                    	.withPartNumber(partNumber_tS3Put_10)
						.withPartSize(curPartSize_tS3Put_10);
            		    uploadRequest_tS3Put_10.setInputStream(uploadStream_tS3Put_10);
            		    streamHasNext_tS3Put_10 = sourceStream_tS3Put_10.read(probeAvailability_tS3Put_10) != -1;
            		    if(!streamHasNext_tS3Put_10){
                    	    uploadRequest_tS3Put_10.setLastPart(true);
                    	}

                		partTags_tS3Put_10.add(conn_tS3Put_10.uploadPart(uploadRequest_tS3Put_10).getPartETag());
                  	    partNumber_tS3Put_10++;

          		     	if(uploadStream_tS3Put_10!=null){
      		         			uploadStream_tS3Put_10.close();
          		     	}
          		     	buffer_tS3Put_10 = new byte[partSizeInBytes_tS3Put_10];
          		     	sourceStream_tS3Put_10.read(buffer_tS3Put_10,1,partSizeInBytes_tS3Put_10-1);
          		     	buffer_tS3Put_10[0] = probeAvailability_tS3Put_10[0];
          		     	probeAvailability_tS3Put_10 = new byte[1];
          		     	curPartSize_tS3Put_10 = streamUtil_tS3Put_10.getLength(buffer_tS3Put_10);
          		     	uploadStream_tS3Put_10 = new java.io.ByteArrayInputStream(buffer_tS3Put_10);
        				}
        				
            		com.amazonaws.services.s3.model.CompleteMultipartUploadRequest compRequest_tS3Put_10 = new com.amazonaws.services.s3.model.CompleteMultipartUploadRequest(context.nd_s3_bucket_QA_sfdc, key_tS3Put_10,
                        uploadId_tS3Put_10, partTags_tS3Put_10);
            		conn_tS3Put_10.completeMultipartUpload(compRequest_tS3Put_10);
            } catch (java.lang.Exception uploadException_tS3Put_10) {
  							conn_tS3Put_10.abortMultipartUpload(new com.amazonaws.services.s3.model.AbortMultipartUploadRequest(context.nd_s3_bucket_QA_sfdc, key_tS3Put_10, uploadId_tS3Put_10));
    						throw uploadException_tS3Put_10;
            }
    		}
		}
		
		
	}catch(java.lang.Exception e_tS3Put_10){
		
			throw(e_tS3Put_10);
		
	}finally{
		if(useStream_tS3Put_10 && uploadStream_tS3Put_10!=null){
    	uploadStream_tS3Put_10.close();
    }
    
    if(tm_tS3Put_10 != null){
        tm_tS3Put_10.shutdownNow(false);
    }
	    
		
	}     

 



/**
 * [tS3Put_10 begin ] stop
 */
	
	/**
	 * [tS3Put_10 main ] start
	 */

	

	
	
	currentComponent="tS3Put_10";

	

 


	tos_count_tS3Put_10++;

/**
 * [tS3Put_10 main ] stop
 */
	
	/**
	 * [tS3Put_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tS3Put_10";

	

 



/**
 * [tS3Put_10 process_data_begin ] stop
 */
	
	/**
	 * [tS3Put_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tS3Put_10";

	

 



/**
 * [tS3Put_10 process_data_end ] stop
 */
	
	/**
	 * [tS3Put_10 end ] start
	 */

	

	
	
	currentComponent="tS3Put_10";

	

 

ok_Hash.put("tS3Put_10", true);
end_Hash.put("tS3Put_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk89", 0, "ok");
				}
				tJava_29Process(globalMap);



/**
 * [tS3Put_10 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tS3Put_10 finally ] start
	 */

	

	
	
	currentComponent="tS3Put_10";

	

 



/**
 * [tS3Put_10 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tS3Put_10_SUBPROCESS_STATE", 1);
	}
	

public void tJava_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_29", false);
		start_Hash.put("tJava_29", System.currentTimeMillis());
		
	
	currentComponent="tJava_29";

	
		int tos_count_tJava_29 = 0;
		


System.out.println("Step 5: Completed Uploading Latest Run File To Latest Folder");
System.out.println("Step 6: Number of source records from salesforce object  : "+  ((Integer)globalMap.get("tSalesforceInput_11_NB_LINE"))+ " Records and S3 file records count :" +((Integer)globalMap.get("tFileOutputDelimited_10_NB_LINE"))+ " Records");
System.out.println("************************************************************");



 



/**
 * [tJava_29 begin ] stop
 */
	
	/**
	 * [tJava_29 main ] start
	 */

	

	
	
	currentComponent="tJava_29";

	

 


	tos_count_tJava_29++;

/**
 * [tJava_29 main ] stop
 */
	
	/**
	 * [tJava_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_29";

	

 



/**
 * [tJava_29 process_data_begin ] stop
 */
	
	/**
	 * [tJava_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_29";

	

 



/**
 * [tJava_29 process_data_end ] stop
 */
	
	/**
	 * [tJava_29 end ] start
	 */

	

	
	
	currentComponent="tJava_29";

	

 

ok_Hash.put("tJava_29", true);
end_Hash.put("tJava_29", System.currentTimeMillis());




/**
 * [tJava_29 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_29 finally ] start
	 */

	

	
	
	currentComponent="tJava_29";

	

 



/**
 * [tJava_29 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_29_SUBPROCESS_STATE", 1);
	}
	

public void tDie_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_10", false);
		start_Hash.put("tDie_10", System.currentTimeMillis());
		
	
	currentComponent="tDie_10";

	
		int tos_count_tDie_10 = 0;
		

 



/**
 * [tDie_10 begin ] stop
 */
	
	/**
	 * [tDie_10 main ] start
	 */

	

	
	
	currentComponent="tDie_10";

	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_10", 5, "The Task object source and target counts are not matching", 4);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_10_DIE_PRIORITY", 5);
	System.err.println("The Task object source and target counts are not matching");
	
	globalMap.put("tDie_10_DIE_MESSAGE", "The Task object source and target counts are not matching");
	globalMap.put("tDie_10_DIE_MESSAGES", "The Task object source and target counts are not matching");
	
	} catch (Exception | Error e_tDie_10) {
		logIgnoredError(String.format("tDie_10 - tDie failed to log message due to internal error: %s", e_tDie_10), e_tDie_10);
	}
	
	currentComponent = "tDie_10";
	status = "failure";
        errorCode = new Integer(4);
        globalMap.put("tDie_10_DIE_CODE", errorCode);        
    
	if(true){	
	    throw new TDieException();
	}

 


	tos_count_tDie_10++;

/**
 * [tDie_10 main ] stop
 */
	
	/**
	 * [tDie_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_10";

	

 



/**
 * [tDie_10 process_data_begin ] stop
 */
	
	/**
	 * [tDie_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_10";

	

 



/**
 * [tDie_10 process_data_end ] stop
 */
	
	/**
	 * [tDie_10 end ] start
	 */

	

	
	
	currentComponent="tDie_10";

	

 

ok_Hash.put("tDie_10", true);
end_Hash.put("tDie_10", System.currentTimeMillis());




/**
 * [tDie_10 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_10 finally ] start
	 */

	

	
	
	currentComponent="tDie_10";

	

 



/**
 * [tDie_10 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_10_SUBPROCESS_STATE", 1);
	}
	

public void tJava_74Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_74_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_74 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_74", false);
		start_Hash.put("tJava_74", System.currentTimeMillis());
		
	
	currentComponent="tJava_74";

	
		int tos_count_tJava_74 = 0;
		



System.out.println("Running For SFDC Object Task: ");

//Date new_date = TalendDate.addDate(TalendDate.getCurrentDate(), -2, "dd");
Date new_date = TalendDate.getCurrentDate();



if (!context.filter_date.equals("")) 
{
context.put("year",StringHandling.LEFT(context.filter_date,4));
context.put("month",StringHandling.LEFT((context.filter_date).substring(5),2));
context.put("day",StringHandling.RIGHT(context.filter_date,2));
context.put("today",((context.filter_date).replace("-","")));
context.put("filter_date",TalendDate.formatDate("yyyy-MM-dd",TalendDate.parseDate("yyyy-MM-dd",context.filter_date)));
context.put("filter_till_date",TalendDate.formatDate("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",TalendDate.addDate(TalendDate.parseDate("yyyy-MM-dd",context.filter_date),+1, "dd")));

System.out.println("----------------------------------------------");

//System.out.println("Raw Filter Date   :" + context.filter_date);

System.out.println("Folder Year       :"+context.get("year"));
System.out.println("Folder Month      :"+context.get("month"));
System.out.println("Folder Day        :"+context.get("day"));
System.out.println("File Date         :"+context.get("today"));
System.out.println("Filter Date       :"+context.get("filter_date"));
System.out.println("Filter Till Date  :"+context.get("filter_till_date"));

System.out.println("----------------------------------------------");
}

else if(context.filter_date.equals(""))
{
context.put("year",TalendDate.formatDate("yyyy",TalendDate.getCurrentDate()));
context.put("month",TalendDate.formatDate("MM",TalendDate.getCurrentDate()));
context.put("day",TalendDate.formatDate("dd",new_date));
context.put("today",TalendDate.formatDate("yyyyMMdd",new_date));
context.put("filter_date",TalendDate.formatDate("yyyy-MM-dd",new_date));
context.put("filter_till_date",TalendDate.formatDate("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",TalendDate.getCurrentDate()));

System.out.println("----------------------------------------------");

//System.out.println("Raw Filter Date   :" + context.filter_date);

System.out.println("Folder Year       :"+context.get("year"));
System.out.println("Folder Month      :"+context.get("month"));
System.out.println("Folder Day        :"+context.get("day"));
System.out.println("File Date         :"+context.get("today"));
System.out.println("Filter Date       :"+context.get("filter_date"));
System.out.println("Filter Till Date  :"+context.get("filter_till_date"));

System.out.println("----------------------------------------------");
}


else
{
System.out.println("Date Format Is not Correct");
}


context.sfdc_conn_QueryCondition="LastmodifiedDate >= " + context.get("filter_date")+"T00:00:00.000Z";
//This is for till date filter
//context.sfdc_conn_QueryCondition="LastmodifiedDate >= " + context.get("filter_date")+"T00:00:00.000Z and LastmodifiedDate <= "+context.get("filter_till_date")+" "; 



System.out.println("Filter Condition : " + context.sfdc_conn_QueryCondition);

System.out.println("----------------------------------------------");













 



/**
 * [tJava_74 begin ] stop
 */
	
	/**
	 * [tJava_74 main ] start
	 */

	

	
	
	currentComponent="tJava_74";

	

 


	tos_count_tJava_74++;

/**
 * [tJava_74 main ] stop
 */
	
	/**
	 * [tJava_74 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_74";

	

 



/**
 * [tJava_74 process_data_begin ] stop
 */
	
	/**
	 * [tJava_74 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_74";

	

 



/**
 * [tJava_74 process_data_end ] stop
 */
	
	/**
	 * [tJava_74 end ] start
	 */

	

	
	
	currentComponent="tJava_74";

	

 

ok_Hash.put("tJava_74", true);
end_Hash.put("tJava_74", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk56", 0, "ok");
				}
				tSalesforceInput_11Process(globalMap);



/**
 * [tJava_74 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_74 finally ] start
	 */

	

	
	
	currentComponent="tJava_74";

	

 



/**
 * [tJava_74 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_74_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];
    static byte[] commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[0];

	
			    public String data;

				public String getData () {
					return this.data;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length) {
				if(length < 1024 && commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane.length == 0) {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[1024];
				} else {
   					commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length);
			strReturn = new String(commonByteArray_T_NP_31_sfdc_json_inc_s3_sync_job_tulane, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_T_NP_31_sfdc_json_inc_s3_sync_job_tulane) {

        	try {

        		int length = 0;
		
					this.data = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data="+data);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tWriteJSONField_10_InProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tWriteJSONField_10_In_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();




	
	/**
	 * [tFileOutputDelimited_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_10", false);
		start_Hash.put("tFileOutputDelimited_10", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_10";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tFileOutputDelimited_10 = 0;
		

String fileName_tFileOutputDelimited_10 = "";
    fileName_tFileOutputDelimited_10 = (new java.io.File(context.staging_S3_dir + "task.json")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_10 = null;
    String extension_tFileOutputDelimited_10 = null;
    String directory_tFileOutputDelimited_10 = null;
    if((fileName_tFileOutputDelimited_10.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_10.lastIndexOf(".") < fileName_tFileOutputDelimited_10.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10;
            extension_tFileOutputDelimited_10 = "";
        } else {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("."));
            extension_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(fileName_tFileOutputDelimited_10.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_10.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("."));
            extension_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(fileName_tFileOutputDelimited_10.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10;
            extension_tFileOutputDelimited_10 = "";
        }
        directory_tFileOutputDelimited_10 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_10 = true;
    java.io.File filetFileOutputDelimited_10 = new java.io.File(fileName_tFileOutputDelimited_10);
    globalMap.put("tFileOutputDelimited_10_FILE_NAME",fileName_tFileOutputDelimited_10);
            int nb_line_tFileOutputDelimited_10 = 0;
            int splitedFileNo_tFileOutputDelimited_10 = 0;
            int currentRow_tFileOutputDelimited_10 = 0;

            final String OUT_DELIM_tFileOutputDelimited_10 = /** Start field tFileOutputDelimited_10:FIELDSEPARATOR */"^"/** End field tFileOutputDelimited_10:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_10 = /** Start field tFileOutputDelimited_10:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_10:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_10 != null && directory_tFileOutputDelimited_10.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_10 = new java.io.File(directory_tFileOutputDelimited_10);
                        if(!dir_tFileOutputDelimited_10.exists()) {
                            dir_tFileOutputDelimited_10.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_10 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_10 = new java.io.File(fileName_tFileOutputDelimited_10);
                        if(fileToDelete_tFileOutputDelimited_10.exists()) {
                            fileToDelete_tFileOutputDelimited_10.delete();
                        }
                        outtFileOutputDelimited_10 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_10, false),"UTF-8"));


        resourceMap.put("out_tFileOutputDelimited_10", outtFileOutputDelimited_10);
resourceMap.put("nb_line_tFileOutputDelimited_10", nb_line_tFileOutputDelimited_10);

 



/**
 * [tFileOutputDelimited_10 begin ] stop
 */



	
	/**
	 * [tWriteJSONField_10_In begin ] start
	 */

	

	
		
		ok_Hash.put("tWriteJSONField_10_In", false);
		start_Hash.put("tWriteJSONField_10_In", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	
		int tos_count_tWriteJSONField_10_In = 0;
		

				int nb_line_tWriteJSONField_10_In = 0;
				net.sf.json.xml.XMLSerializer xmlSerializer_tWriteJSONField_10_In = new net.sf.json.xml.XMLSerializer(); 
			    xmlSerializer_tWriteJSONField_10_In.clearNamespaces();
			    xmlSerializer_tWriteJSONField_10_In.setSkipNamespaces(true);
			    xmlSerializer_tWriteJSONField_10_In.setForceTopLevelObject(false);
				xmlSerializer_tWriteJSONField_10_In.setUseEmptyStrings(true);
				
					   java.util.Queue<row25Struct> queue_tWriteJSONField_10_In = (java.util.Queue<row25Struct>) globalMap.get("queue_tWriteJSONField_10_In");
					
				String readFinishMarkWithPipeId_tWriteJSONField_10_In = "tWriteJSONField_10_In_FINISH"+(queue_tWriteJSONField_10_In==null?"":queue_tWriteJSONField_10_In.hashCode());
				String str_tWriteJSONField_10_In = null;
				
				while(!globalMap.containsKey(readFinishMarkWithPipeId_tWriteJSONField_10_In) || !queue_tWriteJSONField_10_In.isEmpty()) {
					if (!queue_tWriteJSONField_10_In.isEmpty()) {
			

 



/**
 * [tWriteJSONField_10_In begin ] stop
 */
	
	/**
	 * [tWriteJSONField_10_In main ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	

                    row25Struct result_tWriteJSONField_10_In = queue_tWriteJSONField_10_In.poll();
                    str_tWriteJSONField_10_In = result_tWriteJSONField_10_In.data;
        //Convert XML to JSON
        net.sf.json.JsonStandard jsonStandard_tWriteJSONField_10_In =  net.sf.json.JsonStandard.LEGACY  ;
        xmlSerializer_tWriteJSONField_10_In.setJsonStandard(jsonStandard_tWriteJSONField_10_In);
        net.sf.json.JSON json_tWriteJSONField_10_In = xmlSerializer_tWriteJSONField_10_In.read(str_tWriteJSONField_10_In);
        row25.data = net.sf.json.util.JSONUtils.jsonToStandardizedString(json_tWriteJSONField_10_In, jsonStandard_tWriteJSONField_10_In);
    
        nb_line_tWriteJSONField_10_In++;

 


	tos_count_tWriteJSONField_10_In++;

/**
 * [tWriteJSONField_10_In main ] stop
 */
	
	/**
	 * [tWriteJSONField_10_In process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	

 



/**
 * [tWriteJSONField_10_In process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row25");
					}
					


                    StringBuilder sb_tFileOutputDelimited_10 = new StringBuilder();
                            if(row25.data != null) {
                        sb_tFileOutputDelimited_10.append(
                            row25.data
                        );
                            }
                    sb_tFileOutputDelimited_10.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_10);


                    nb_line_tFileOutputDelimited_10++;
                    resourceMap.put("nb_line_tFileOutputDelimited_10", nb_line_tFileOutputDelimited_10);

                        outtFileOutputDelimited_10.write(sb_tFileOutputDelimited_10.toString());




 


	tos_count_tFileOutputDelimited_10++;

/**
 * [tFileOutputDelimited_10 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";

	

 



/**
 * [tFileOutputDelimited_10 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";

	

 



/**
 * [tFileOutputDelimited_10 process_data_end ] stop
 */



	
	/**
	 * [tWriteJSONField_10_In process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	

 



/**
 * [tWriteJSONField_10_In process_data_end ] stop
 */
	
	/**
	 * [tWriteJSONField_10_In end ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	

					}
				}
				
					String readFinishWithExceptionMarkWithPipeId_tWriteJSONField_10_In = "tWriteJSONField_10_In_FINISH_WITH_EXCEPTION"+(queue_tWriteJSONField_10_In==null?"":queue_tWriteJSONField_10_In.hashCode());
					if(globalMap.containsKey(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_10_In)){
						if(!(globalMap instanceof java.util.concurrent.ConcurrentHashMap)) {
							globalMap.put(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_10_In, null);// syn
						}
						globalMap.remove(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_10_In);
						return;
					}
					globalMap.remove("queue_tWriteJSONField_10_In");
    			
				if(!(globalMap instanceof java.util.concurrent.ConcurrentHashMap)) {
					globalMap.put(readFinishMarkWithPipeId_tWriteJSONField_10_In,null);//syn
				}
				globalMap.remove(readFinishMarkWithPipeId_tWriteJSONField_10_In);
			
globalMap.put("tWriteJSONField_10_NB_LINE",nb_line_tWriteJSONField_10_In);
 

ok_Hash.put("tWriteJSONField_10_In", true);
end_Hash.put("tWriteJSONField_10_In", System.currentTimeMillis());




/**
 * [tWriteJSONField_10_In end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";

	



		
			
					if(outtFileOutputDelimited_10!=null) {
						outtFileOutputDelimited_10.flush();
						outtFileOutputDelimited_10.close();
					}
				
				globalMap.put("tFileOutputDelimited_10_NB_LINE",nb_line_tFileOutputDelimited_10);
				globalMap.put("tFileOutputDelimited_10_FILE_NAME",fileName_tFileOutputDelimited_10);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_10", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_10", true);
end_Hash.put("tFileOutputDelimited_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk17", 0, "ok");
				}
				tFileArchive_10Process(globalMap);
   			if ((((Integer)globalMap.get("tSalesforceInput_11_NB_LINE")).intValue() != ((Integer)globalMap.get("tFileOutputDelimited_10_NB_LINE")).intValue())) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If10", 0, "true");
					}
				tDie_10Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If10", 0, "false");
					}   	 
   				}



/**
 * [tFileOutputDelimited_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tWriteJSONField_10_In finally ] start
	 */

	

	
	
		currentVirtualComponent = "tWriteJSONField_10";
	
	currentComponent="tWriteJSONField_10_In";

	

 



/**
 * [tWriteJSONField_10_In finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";

	


		if(resourceMap.get("finish_tFileOutputDelimited_10") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_10 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_10");
						if(outtFileOutputDelimited_10!=null) {
							outtFileOutputDelimited_10.flush();
							outtFileOutputDelimited_10.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tWriteJSONField_10_In_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "prod";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final sfdc_json_inc_s3_sync_job_tulane sfdc_json_inc_s3_sync_job_tulaneClass = new sfdc_json_inc_s3_sync_job_tulane();

        int exitCode = sfdc_json_inc_s3_sync_job_tulaneClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = sfdc_json_inc_s3_sync_job_tulane.class.getClassLoader().getResourceAsStream("t_np_31/sfdc_json_inc_s3_sync_job_tulane_1_0/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = sfdc_json_inc_s3_sync_job_tulane.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("university_code", "id_String");
                            context.university_code=(String) context.getProperty("university_code");
                        context.setContextType("status", "id_String");
                            context.status=(String) context.getProperty("status");
                        context.setContextType("description", "id_String");
                            context.description=(String) context.getProperty("description");
                        context.setContextType("staging_S3_dir", "id_String");
                            context.staging_S3_dir=(String) context.getProperty("staging_S3_dir");
                        context.setContextType("sfdc_subject_user", "id_String");
                            context.sfdc_subject_user=(String) context.getProperty("sfdc_subject_user");
                        context.setContextType("sfdc_issuer_token", "id_String");
                            context.sfdc_issuer_token=(String) context.getProperty("sfdc_issuer_token");
                        context.setContextType("sfdc_keystore_password", "id_Password");
                            String pwd_sfdc_keystore_password_value = context.getProperty("sfdc_keystore_password");
                            context.sfdc_keystore_password = null;
                            if(pwd_sfdc_keystore_password_value!=null) {
                                if(context_param.containsKey("sfdc_keystore_password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.sfdc_keystore_password = pwd_sfdc_keystore_password_value;
                                } else if (!pwd_sfdc_keystore_password_value.isEmpty()) {
                                    try {
                                        context.sfdc_keystore_password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_sfdc_keystore_password_value);
                                        context.put("sfdc_keystore_password",context.sfdc_keystore_password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        context.setContextType("nd_aws_access_key", "id_String");
                            context.nd_aws_access_key=(String) context.getProperty("nd_aws_access_key");
                        context.setContextType("nd_aws_secret_key", "id_Password");
                            String pwd_nd_aws_secret_key_value = context.getProperty("nd_aws_secret_key");
                            context.nd_aws_secret_key = null;
                            if(pwd_nd_aws_secret_key_value!=null) {
                                if(context_param.containsKey("nd_aws_secret_key")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.nd_aws_secret_key = pwd_nd_aws_secret_key_value;
                                } else if (!pwd_nd_aws_secret_key_value.isEmpty()) {
                                    try {
                                        context.nd_aws_secret_key = routines.system.PasswordEncryptUtil.decryptPassword(pwd_nd_aws_secret_key_value);
                                        context.put("nd_aws_secret_key",context.nd_aws_secret_key);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        context.setContextType("nd_s3_bucket_QA_sfdc", "id_String");
                            context.nd_s3_bucket_QA_sfdc=(String) context.getProperty("nd_s3_bucket_QA_sfdc");
                        context.setContextType("nd_s3_data_lake_path_sfdc", "id_String");
                            context.nd_s3_data_lake_path_sfdc=(String) context.getProperty("nd_s3_data_lake_path_sfdc");
                        context.setContextType("sfdc_audience_url", "id_String");
                            context.sfdc_audience_url=(String) context.getProperty("sfdc_audience_url");
                        context.setContextType("sfdc_certificate_alias", "id_String");
                            context.sfdc_certificate_alias=(String) context.getProperty("sfdc_certificate_alias");
                        context.setContextType("sfdc_keystore_path", "id_String");
                            context.sfdc_keystore_path=(String) context.getProperty("sfdc_keystore_path");
                        context.setContextType("filter_date", "id_String");
                            context.filter_date=(String) context.getProperty("filter_date");
                        context.setContextType("sfdc_conn_QueryCondition", "id_String");
                            context.sfdc_conn_QueryCondition=(String) context.getProperty("sfdc_conn_QueryCondition");
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("university_code")) {
                context.university_code = (String) parentContextMap.get("university_code");
            }if (parentContextMap.containsKey("status")) {
                context.status = (String) parentContextMap.get("status");
            }if (parentContextMap.containsKey("description")) {
                context.description = (String) parentContextMap.get("description");
            }if (parentContextMap.containsKey("staging_S3_dir")) {
                context.staging_S3_dir = (String) parentContextMap.get("staging_S3_dir");
            }if (parentContextMap.containsKey("sfdc_subject_user")) {
                context.sfdc_subject_user = (String) parentContextMap.get("sfdc_subject_user");
            }if (parentContextMap.containsKey("sfdc_issuer_token")) {
                context.sfdc_issuer_token = (String) parentContextMap.get("sfdc_issuer_token");
            }if (parentContextMap.containsKey("sfdc_keystore_password")) {
                context.sfdc_keystore_password = (java.lang.String) parentContextMap.get("sfdc_keystore_password");
            }if (parentContextMap.containsKey("nd_aws_access_key")) {
                context.nd_aws_access_key = (String) parentContextMap.get("nd_aws_access_key");
            }if (parentContextMap.containsKey("nd_aws_secret_key")) {
                context.nd_aws_secret_key = (java.lang.String) parentContextMap.get("nd_aws_secret_key");
            }if (parentContextMap.containsKey("nd_s3_bucket_QA_sfdc")) {
                context.nd_s3_bucket_QA_sfdc = (String) parentContextMap.get("nd_s3_bucket_QA_sfdc");
            }if (parentContextMap.containsKey("nd_s3_data_lake_path_sfdc")) {
                context.nd_s3_data_lake_path_sfdc = (String) parentContextMap.get("nd_s3_data_lake_path_sfdc");
            }if (parentContextMap.containsKey("sfdc_audience_url")) {
                context.sfdc_audience_url = (String) parentContextMap.get("sfdc_audience_url");
            }if (parentContextMap.containsKey("sfdc_certificate_alias")) {
                context.sfdc_certificate_alias = (String) parentContextMap.get("sfdc_certificate_alias");
            }if (parentContextMap.containsKey("sfdc_keystore_path")) {
                context.sfdc_keystore_path = (String) parentContextMap.get("sfdc_keystore_path");
            }if (parentContextMap.containsKey("filter_date")) {
                context.filter_date = (String) parentContextMap.get("filter_date");
            }if (parentContextMap.containsKey("sfdc_conn_QueryCondition")) {
                context.sfdc_conn_QueryCondition = (String) parentContextMap.get("sfdc_conn_QueryCondition");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("sfdc_keystore_password");
			parametersToEncrypt.add("nd_aws_secret_key");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}



this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tJava_74Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tJava_74) {
globalMap.put("tJava_74_SUBPROCESS_STATE", -1);

e_tJava_74.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : sfdc_json_inc_s3_sync_job_tulane");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeS3Connections();


    }







    private void closeS3Connections() {
        try {
    	com.amazonaws.services.s3.AmazonS3Client conn_tS3Connection_1 = (com.amazonaws.services.s3.AmazonS3Client)globalMap.get("conn_tS3Connection_1");
	    if(conn_tS3Connection_1 !=null){
			conn_tS3Connection_1.shutdown();
		}
        } catch (java.lang.Exception e) {
        }
    }







    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();


            connections.put("conn_tS3Connection_1", globalMap.get("conn_tS3Connection_1"));



            connections.put("conn_tSalesforceConnection_2", globalMap.get("conn_tSalesforceConnection_2"));


        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     395088 characters generated by Talend Open Studio for Data Integration 
 *     on the July 12, 2021 at 1:19:40 PM PDT
 ************************************************************************************************/